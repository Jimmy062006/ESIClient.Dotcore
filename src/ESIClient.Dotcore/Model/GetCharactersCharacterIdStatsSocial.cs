/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.8.2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = ESIClient.Dotcore.Client.SwaggerDateConverter;

namespace ESIClient.Dotcore.Model
{
    /// <summary>
    /// social object
    /// </summary>
    [DataContract]
    public partial class GetCharactersCharacterIdStatsSocial :  IEquatable<GetCharactersCharacterIdStatsSocial>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetCharactersCharacterIdStatsSocial" /> class.
        /// </summary>
        /// <param name="addContactBad">add_contact_bad integer.</param>
        /// <param name="addContactGood">add_contact_good integer.</param>
        /// <param name="addContactHigh">add_contact_high integer.</param>
        /// <param name="addContactHorrible">add_contact_horrible integer.</param>
        /// <param name="addContactNeutral">add_contact_neutral integer.</param>
        /// <param name="addNote">add_note integer.</param>
        /// <param name="addedAsContactBad">added_as_contact_bad integer.</param>
        /// <param name="addedAsContactGood">added_as_contact_good integer.</param>
        /// <param name="addedAsContactHigh">added_as_contact_high integer.</param>
        /// <param name="addedAsContactHorrible">added_as_contact_horrible integer.</param>
        /// <param name="addedAsContactNeutral">added_as_contact_neutral integer.</param>
        /// <param name="calendarEventCreated">calendar_event_created integer.</param>
        /// <param name="chatMessagesAlliance">chat_messages_alliance integer.</param>
        /// <param name="chatMessagesConstellation">chat_messages_constellation integer.</param>
        /// <param name="chatMessagesCorporation">chat_messages_corporation integer.</param>
        /// <param name="chatMessagesFleet">chat_messages_fleet integer.</param>
        /// <param name="chatMessagesRegion">chat_messages_region integer.</param>
        /// <param name="chatMessagesSolarsystem">chat_messages_solarsystem integer.</param>
        /// <param name="chatMessagesWarfaction">chat_messages_warfaction integer.</param>
        /// <param name="chatTotalMessageLength">chat_total_message_length integer.</param>
        /// <param name="directTrades">direct_trades integer.</param>
        /// <param name="fleetBroadcasts">fleet_broadcasts integer.</param>
        /// <param name="fleetJoins">fleet_joins integer.</param>
        /// <param name="mailsReceived">mails_received integer.</param>
        /// <param name="mailsSent">mails_sent integer.</param>
        public GetCharactersCharacterIdStatsSocial(long? addContactBad = default(long?), long? addContactGood = default(long?), long? addContactHigh = default(long?), long? addContactHorrible = default(long?), long? addContactNeutral = default(long?), long? addNote = default(long?), long? addedAsContactBad = default(long?), long? addedAsContactGood = default(long?), long? addedAsContactHigh = default(long?), long? addedAsContactHorrible = default(long?), long? addedAsContactNeutral = default(long?), long? calendarEventCreated = default(long?), long? chatMessagesAlliance = default(long?), long? chatMessagesConstellation = default(long?), long? chatMessagesCorporation = default(long?), long? chatMessagesFleet = default(long?), long? chatMessagesRegion = default(long?), long? chatMessagesSolarsystem = default(long?), long? chatMessagesWarfaction = default(long?), long? chatTotalMessageLength = default(long?), long? directTrades = default(long?), long? fleetBroadcasts = default(long?), long? fleetJoins = default(long?), long? mailsReceived = default(long?), long? mailsSent = default(long?))
        {
            this.AddContactBad = addContactBad;
            this.AddContactGood = addContactGood;
            this.AddContactHigh = addContactHigh;
            this.AddContactHorrible = addContactHorrible;
            this.AddContactNeutral = addContactNeutral;
            this.AddNote = addNote;
            this.AddedAsContactBad = addedAsContactBad;
            this.AddedAsContactGood = addedAsContactGood;
            this.AddedAsContactHigh = addedAsContactHigh;
            this.AddedAsContactHorrible = addedAsContactHorrible;
            this.AddedAsContactNeutral = addedAsContactNeutral;
            this.CalendarEventCreated = calendarEventCreated;
            this.ChatMessagesAlliance = chatMessagesAlliance;
            this.ChatMessagesConstellation = chatMessagesConstellation;
            this.ChatMessagesCorporation = chatMessagesCorporation;
            this.ChatMessagesFleet = chatMessagesFleet;
            this.ChatMessagesRegion = chatMessagesRegion;
            this.ChatMessagesSolarsystem = chatMessagesSolarsystem;
            this.ChatMessagesWarfaction = chatMessagesWarfaction;
            this.ChatTotalMessageLength = chatTotalMessageLength;
            this.DirectTrades = directTrades;
            this.FleetBroadcasts = fleetBroadcasts;
            this.FleetJoins = fleetJoins;
            this.MailsReceived = mailsReceived;
            this.MailsSent = mailsSent;
        }
        
        /// <summary>
        /// add_contact_bad integer
        /// </summary>
        /// <value>add_contact_bad integer</value>
        [DataMember(Name="add_contact_bad", EmitDefaultValue=false)]
        public long? AddContactBad { get; set; }

        /// <summary>
        /// add_contact_good integer
        /// </summary>
        /// <value>add_contact_good integer</value>
        [DataMember(Name="add_contact_good", EmitDefaultValue=false)]
        public long? AddContactGood { get; set; }

        /// <summary>
        /// add_contact_high integer
        /// </summary>
        /// <value>add_contact_high integer</value>
        [DataMember(Name="add_contact_high", EmitDefaultValue=false)]
        public long? AddContactHigh { get; set; }

        /// <summary>
        /// add_contact_horrible integer
        /// </summary>
        /// <value>add_contact_horrible integer</value>
        [DataMember(Name="add_contact_horrible", EmitDefaultValue=false)]
        public long? AddContactHorrible { get; set; }

        /// <summary>
        /// add_contact_neutral integer
        /// </summary>
        /// <value>add_contact_neutral integer</value>
        [DataMember(Name="add_contact_neutral", EmitDefaultValue=false)]
        public long? AddContactNeutral { get; set; }

        /// <summary>
        /// add_note integer
        /// </summary>
        /// <value>add_note integer</value>
        [DataMember(Name="add_note", EmitDefaultValue=false)]
        public long? AddNote { get; set; }

        /// <summary>
        /// added_as_contact_bad integer
        /// </summary>
        /// <value>added_as_contact_bad integer</value>
        [DataMember(Name="added_as_contact_bad", EmitDefaultValue=false)]
        public long? AddedAsContactBad { get; set; }

        /// <summary>
        /// added_as_contact_good integer
        /// </summary>
        /// <value>added_as_contact_good integer</value>
        [DataMember(Name="added_as_contact_good", EmitDefaultValue=false)]
        public long? AddedAsContactGood { get; set; }

        /// <summary>
        /// added_as_contact_high integer
        /// </summary>
        /// <value>added_as_contact_high integer</value>
        [DataMember(Name="added_as_contact_high", EmitDefaultValue=false)]
        public long? AddedAsContactHigh { get; set; }

        /// <summary>
        /// added_as_contact_horrible integer
        /// </summary>
        /// <value>added_as_contact_horrible integer</value>
        [DataMember(Name="added_as_contact_horrible", EmitDefaultValue=false)]
        public long? AddedAsContactHorrible { get; set; }

        /// <summary>
        /// added_as_contact_neutral integer
        /// </summary>
        /// <value>added_as_contact_neutral integer</value>
        [DataMember(Name="added_as_contact_neutral", EmitDefaultValue=false)]
        public long? AddedAsContactNeutral { get; set; }

        /// <summary>
        /// calendar_event_created integer
        /// </summary>
        /// <value>calendar_event_created integer</value>
        [DataMember(Name="calendar_event_created", EmitDefaultValue=false)]
        public long? CalendarEventCreated { get; set; }

        /// <summary>
        /// chat_messages_alliance integer
        /// </summary>
        /// <value>chat_messages_alliance integer</value>
        [DataMember(Name="chat_messages_alliance", EmitDefaultValue=false)]
        public long? ChatMessagesAlliance { get; set; }

        /// <summary>
        /// chat_messages_constellation integer
        /// </summary>
        /// <value>chat_messages_constellation integer</value>
        [DataMember(Name="chat_messages_constellation", EmitDefaultValue=false)]
        public long? ChatMessagesConstellation { get; set; }

        /// <summary>
        /// chat_messages_corporation integer
        /// </summary>
        /// <value>chat_messages_corporation integer</value>
        [DataMember(Name="chat_messages_corporation", EmitDefaultValue=false)]
        public long? ChatMessagesCorporation { get; set; }

        /// <summary>
        /// chat_messages_fleet integer
        /// </summary>
        /// <value>chat_messages_fleet integer</value>
        [DataMember(Name="chat_messages_fleet", EmitDefaultValue=false)]
        public long? ChatMessagesFleet { get; set; }

        /// <summary>
        /// chat_messages_region integer
        /// </summary>
        /// <value>chat_messages_region integer</value>
        [DataMember(Name="chat_messages_region", EmitDefaultValue=false)]
        public long? ChatMessagesRegion { get; set; }

        /// <summary>
        /// chat_messages_solarsystem integer
        /// </summary>
        /// <value>chat_messages_solarsystem integer</value>
        [DataMember(Name="chat_messages_solarsystem", EmitDefaultValue=false)]
        public long? ChatMessagesSolarsystem { get; set; }

        /// <summary>
        /// chat_messages_warfaction integer
        /// </summary>
        /// <value>chat_messages_warfaction integer</value>
        [DataMember(Name="chat_messages_warfaction", EmitDefaultValue=false)]
        public long? ChatMessagesWarfaction { get; set; }

        /// <summary>
        /// chat_total_message_length integer
        /// </summary>
        /// <value>chat_total_message_length integer</value>
        [DataMember(Name="chat_total_message_length", EmitDefaultValue=false)]
        public long? ChatTotalMessageLength { get; set; }

        /// <summary>
        /// direct_trades integer
        /// </summary>
        /// <value>direct_trades integer</value>
        [DataMember(Name="direct_trades", EmitDefaultValue=false)]
        public long? DirectTrades { get; set; }

        /// <summary>
        /// fleet_broadcasts integer
        /// </summary>
        /// <value>fleet_broadcasts integer</value>
        [DataMember(Name="fleet_broadcasts", EmitDefaultValue=false)]
        public long? FleetBroadcasts { get; set; }

        /// <summary>
        /// fleet_joins integer
        /// </summary>
        /// <value>fleet_joins integer</value>
        [DataMember(Name="fleet_joins", EmitDefaultValue=false)]
        public long? FleetJoins { get; set; }

        /// <summary>
        /// mails_received integer
        /// </summary>
        /// <value>mails_received integer</value>
        [DataMember(Name="mails_received", EmitDefaultValue=false)]
        public long? MailsReceived { get; set; }

        /// <summary>
        /// mails_sent integer
        /// </summary>
        /// <value>mails_sent integer</value>
        [DataMember(Name="mails_sent", EmitDefaultValue=false)]
        public long? MailsSent { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetCharactersCharacterIdStatsSocial {\n");
            sb.Append("  AddContactBad: ").Append(AddContactBad).Append("\n");
            sb.Append("  AddContactGood: ").Append(AddContactGood).Append("\n");
            sb.Append("  AddContactHigh: ").Append(AddContactHigh).Append("\n");
            sb.Append("  AddContactHorrible: ").Append(AddContactHorrible).Append("\n");
            sb.Append("  AddContactNeutral: ").Append(AddContactNeutral).Append("\n");
            sb.Append("  AddNote: ").Append(AddNote).Append("\n");
            sb.Append("  AddedAsContactBad: ").Append(AddedAsContactBad).Append("\n");
            sb.Append("  AddedAsContactGood: ").Append(AddedAsContactGood).Append("\n");
            sb.Append("  AddedAsContactHigh: ").Append(AddedAsContactHigh).Append("\n");
            sb.Append("  AddedAsContactHorrible: ").Append(AddedAsContactHorrible).Append("\n");
            sb.Append("  AddedAsContactNeutral: ").Append(AddedAsContactNeutral).Append("\n");
            sb.Append("  CalendarEventCreated: ").Append(CalendarEventCreated).Append("\n");
            sb.Append("  ChatMessagesAlliance: ").Append(ChatMessagesAlliance).Append("\n");
            sb.Append("  ChatMessagesConstellation: ").Append(ChatMessagesConstellation).Append("\n");
            sb.Append("  ChatMessagesCorporation: ").Append(ChatMessagesCorporation).Append("\n");
            sb.Append("  ChatMessagesFleet: ").Append(ChatMessagesFleet).Append("\n");
            sb.Append("  ChatMessagesRegion: ").Append(ChatMessagesRegion).Append("\n");
            sb.Append("  ChatMessagesSolarsystem: ").Append(ChatMessagesSolarsystem).Append("\n");
            sb.Append("  ChatMessagesWarfaction: ").Append(ChatMessagesWarfaction).Append("\n");
            sb.Append("  ChatTotalMessageLength: ").Append(ChatTotalMessageLength).Append("\n");
            sb.Append("  DirectTrades: ").Append(DirectTrades).Append("\n");
            sb.Append("  FleetBroadcasts: ").Append(FleetBroadcasts).Append("\n");
            sb.Append("  FleetJoins: ").Append(FleetJoins).Append("\n");
            sb.Append("  MailsReceived: ").Append(MailsReceived).Append("\n");
            sb.Append("  MailsSent: ").Append(MailsSent).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetCharactersCharacterIdStatsSocial);
        }

        /// <summary>
        /// Returns true if GetCharactersCharacterIdStatsSocial instances are equal
        /// </summary>
        /// <param name="input">Instance of GetCharactersCharacterIdStatsSocial to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetCharactersCharacterIdStatsSocial input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AddContactBad == input.AddContactBad ||
                    (this.AddContactBad != null &&
                    this.AddContactBad.Equals(input.AddContactBad))
                ) && 
                (
                    this.AddContactGood == input.AddContactGood ||
                    (this.AddContactGood != null &&
                    this.AddContactGood.Equals(input.AddContactGood))
                ) && 
                (
                    this.AddContactHigh == input.AddContactHigh ||
                    (this.AddContactHigh != null &&
                    this.AddContactHigh.Equals(input.AddContactHigh))
                ) && 
                (
                    this.AddContactHorrible == input.AddContactHorrible ||
                    (this.AddContactHorrible != null &&
                    this.AddContactHorrible.Equals(input.AddContactHorrible))
                ) && 
                (
                    this.AddContactNeutral == input.AddContactNeutral ||
                    (this.AddContactNeutral != null &&
                    this.AddContactNeutral.Equals(input.AddContactNeutral))
                ) && 
                (
                    this.AddNote == input.AddNote ||
                    (this.AddNote != null &&
                    this.AddNote.Equals(input.AddNote))
                ) && 
                (
                    this.AddedAsContactBad == input.AddedAsContactBad ||
                    (this.AddedAsContactBad != null &&
                    this.AddedAsContactBad.Equals(input.AddedAsContactBad))
                ) && 
                (
                    this.AddedAsContactGood == input.AddedAsContactGood ||
                    (this.AddedAsContactGood != null &&
                    this.AddedAsContactGood.Equals(input.AddedAsContactGood))
                ) && 
                (
                    this.AddedAsContactHigh == input.AddedAsContactHigh ||
                    (this.AddedAsContactHigh != null &&
                    this.AddedAsContactHigh.Equals(input.AddedAsContactHigh))
                ) && 
                (
                    this.AddedAsContactHorrible == input.AddedAsContactHorrible ||
                    (this.AddedAsContactHorrible != null &&
                    this.AddedAsContactHorrible.Equals(input.AddedAsContactHorrible))
                ) && 
                (
                    this.AddedAsContactNeutral == input.AddedAsContactNeutral ||
                    (this.AddedAsContactNeutral != null &&
                    this.AddedAsContactNeutral.Equals(input.AddedAsContactNeutral))
                ) && 
                (
                    this.CalendarEventCreated == input.CalendarEventCreated ||
                    (this.CalendarEventCreated != null &&
                    this.CalendarEventCreated.Equals(input.CalendarEventCreated))
                ) && 
                (
                    this.ChatMessagesAlliance == input.ChatMessagesAlliance ||
                    (this.ChatMessagesAlliance != null &&
                    this.ChatMessagesAlliance.Equals(input.ChatMessagesAlliance))
                ) && 
                (
                    this.ChatMessagesConstellation == input.ChatMessagesConstellation ||
                    (this.ChatMessagesConstellation != null &&
                    this.ChatMessagesConstellation.Equals(input.ChatMessagesConstellation))
                ) && 
                (
                    this.ChatMessagesCorporation == input.ChatMessagesCorporation ||
                    (this.ChatMessagesCorporation != null &&
                    this.ChatMessagesCorporation.Equals(input.ChatMessagesCorporation))
                ) && 
                (
                    this.ChatMessagesFleet == input.ChatMessagesFleet ||
                    (this.ChatMessagesFleet != null &&
                    this.ChatMessagesFleet.Equals(input.ChatMessagesFleet))
                ) && 
                (
                    this.ChatMessagesRegion == input.ChatMessagesRegion ||
                    (this.ChatMessagesRegion != null &&
                    this.ChatMessagesRegion.Equals(input.ChatMessagesRegion))
                ) && 
                (
                    this.ChatMessagesSolarsystem == input.ChatMessagesSolarsystem ||
                    (this.ChatMessagesSolarsystem != null &&
                    this.ChatMessagesSolarsystem.Equals(input.ChatMessagesSolarsystem))
                ) && 
                (
                    this.ChatMessagesWarfaction == input.ChatMessagesWarfaction ||
                    (this.ChatMessagesWarfaction != null &&
                    this.ChatMessagesWarfaction.Equals(input.ChatMessagesWarfaction))
                ) && 
                (
                    this.ChatTotalMessageLength == input.ChatTotalMessageLength ||
                    (this.ChatTotalMessageLength != null &&
                    this.ChatTotalMessageLength.Equals(input.ChatTotalMessageLength))
                ) && 
                (
                    this.DirectTrades == input.DirectTrades ||
                    (this.DirectTrades != null &&
                    this.DirectTrades.Equals(input.DirectTrades))
                ) && 
                (
                    this.FleetBroadcasts == input.FleetBroadcasts ||
                    (this.FleetBroadcasts != null &&
                    this.FleetBroadcasts.Equals(input.FleetBroadcasts))
                ) && 
                (
                    this.FleetJoins == input.FleetJoins ||
                    (this.FleetJoins != null &&
                    this.FleetJoins.Equals(input.FleetJoins))
                ) && 
                (
                    this.MailsReceived == input.MailsReceived ||
                    (this.MailsReceived != null &&
                    this.MailsReceived.Equals(input.MailsReceived))
                ) && 
                (
                    this.MailsSent == input.MailsSent ||
                    (this.MailsSent != null &&
                    this.MailsSent.Equals(input.MailsSent))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AddContactBad != null)
                    hashCode = hashCode * 59 + this.AddContactBad.GetHashCode();
                if (this.AddContactGood != null)
                    hashCode = hashCode * 59 + this.AddContactGood.GetHashCode();
                if (this.AddContactHigh != null)
                    hashCode = hashCode * 59 + this.AddContactHigh.GetHashCode();
                if (this.AddContactHorrible != null)
                    hashCode = hashCode * 59 + this.AddContactHorrible.GetHashCode();
                if (this.AddContactNeutral != null)
                    hashCode = hashCode * 59 + this.AddContactNeutral.GetHashCode();
                if (this.AddNote != null)
                    hashCode = hashCode * 59 + this.AddNote.GetHashCode();
                if (this.AddedAsContactBad != null)
                    hashCode = hashCode * 59 + this.AddedAsContactBad.GetHashCode();
                if (this.AddedAsContactGood != null)
                    hashCode = hashCode * 59 + this.AddedAsContactGood.GetHashCode();
                if (this.AddedAsContactHigh != null)
                    hashCode = hashCode * 59 + this.AddedAsContactHigh.GetHashCode();
                if (this.AddedAsContactHorrible != null)
                    hashCode = hashCode * 59 + this.AddedAsContactHorrible.GetHashCode();
                if (this.AddedAsContactNeutral != null)
                    hashCode = hashCode * 59 + this.AddedAsContactNeutral.GetHashCode();
                if (this.CalendarEventCreated != null)
                    hashCode = hashCode * 59 + this.CalendarEventCreated.GetHashCode();
                if (this.ChatMessagesAlliance != null)
                    hashCode = hashCode * 59 + this.ChatMessagesAlliance.GetHashCode();
                if (this.ChatMessagesConstellation != null)
                    hashCode = hashCode * 59 + this.ChatMessagesConstellation.GetHashCode();
                if (this.ChatMessagesCorporation != null)
                    hashCode = hashCode * 59 + this.ChatMessagesCorporation.GetHashCode();
                if (this.ChatMessagesFleet != null)
                    hashCode = hashCode * 59 + this.ChatMessagesFleet.GetHashCode();
                if (this.ChatMessagesRegion != null)
                    hashCode = hashCode * 59 + this.ChatMessagesRegion.GetHashCode();
                if (this.ChatMessagesSolarsystem != null)
                    hashCode = hashCode * 59 + this.ChatMessagesSolarsystem.GetHashCode();
                if (this.ChatMessagesWarfaction != null)
                    hashCode = hashCode * 59 + this.ChatMessagesWarfaction.GetHashCode();
                if (this.ChatTotalMessageLength != null)
                    hashCode = hashCode * 59 + this.ChatTotalMessageLength.GetHashCode();
                if (this.DirectTrades != null)
                    hashCode = hashCode * 59 + this.DirectTrades.GetHashCode();
                if (this.FleetBroadcasts != null)
                    hashCode = hashCode * 59 + this.FleetBroadcasts.GetHashCode();
                if (this.FleetJoins != null)
                    hashCode = hashCode * 59 + this.FleetJoins.GetHashCode();
                if (this.MailsReceived != null)
                    hashCode = hashCode * 59 + this.MailsReceived.GetHashCode();
                if (this.MailsSent != null)
                    hashCode = hashCode * 59 + this.MailsSent.GetHashCode();
                return hashCode;
            }
        }
    }

}
