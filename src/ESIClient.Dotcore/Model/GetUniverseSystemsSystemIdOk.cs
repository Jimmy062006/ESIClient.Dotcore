/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.3.8
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = ESIClient.Dotcore.Client.SwaggerDateConverter;

namespace ESIClient.Dotcore.Model
{
    /// <summary>
    /// 200 ok object
    /// </summary>
    [DataContract]
    public partial class GetUniverseSystemsSystemIdOk :  IEquatable<GetUniverseSystemsSystemIdOk>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetUniverseSystemsSystemIdOk" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetUniverseSystemsSystemIdOk() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetUniverseSystemsSystemIdOk" /> class.
        /// </summary>
        /// <param name="constellationId">The constellation this solar system is in (required).</param>
        /// <param name="name">name string (required).</param>
        /// <param name="planets">planets array.</param>
        /// <param name="position">position (required).</param>
        /// <param name="securityClass">security_class string.</param>
        /// <param name="securityStatus">security_status number (required).</param>
        /// <param name="starId">star_id integer.</param>
        /// <param name="stargates">stargates array.</param>
        /// <param name="stations">stations array.</param>
        /// <param name="systemId">system_id integer (required).</param>
        public GetUniverseSystemsSystemIdOk(int? constellationId = default(int?), string name = default(string), List<GetUniverseSystemsSystemIdPlanet> planets = default(List<GetUniverseSystemsSystemIdPlanet>), GetUniverseSystemsSystemIdPosition position = default(GetUniverseSystemsSystemIdPosition), string securityClass = default(string), float? securityStatus = default(float?), int? starId = default(int?), List<int?> stargates = default(List<int?>), List<int?> stations = default(List<int?>), int? systemId = default(int?))
        {
            // to ensure "constellationId" is required (not null)
            if (constellationId == null)
            {
                throw new InvalidDataException("constellationId is a required property for GetUniverseSystemsSystemIdOk and cannot be null");
            }
            else
            {
                this.ConstellationId = constellationId;
            }
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new InvalidDataException("name is a required property for GetUniverseSystemsSystemIdOk and cannot be null");
            }
            else
            {
                this.Name = name;
            }
            // to ensure "position" is required (not null)
            if (position == null)
            {
                throw new InvalidDataException("position is a required property for GetUniverseSystemsSystemIdOk and cannot be null");
            }
            else
            {
                this.Position = position;
            }
            // to ensure "securityStatus" is required (not null)
            if (securityStatus == null)
            {
                throw new InvalidDataException("securityStatus is a required property for GetUniverseSystemsSystemIdOk and cannot be null");
            }
            else
            {
                this.SecurityStatus = securityStatus;
            }
            // to ensure "systemId" is required (not null)
            if (systemId == null)
            {
                throw new InvalidDataException("systemId is a required property for GetUniverseSystemsSystemIdOk and cannot be null");
            }
            else
            {
                this.SystemId = systemId;
            }
            this.Planets = planets;
            this.SecurityClass = securityClass;
            this.StarId = starId;
            this.Stargates = stargates;
            this.Stations = stations;
        }
        
        /// <summary>
        /// The constellation this solar system is in
        /// </summary>
        /// <value>The constellation this solar system is in</value>
        [DataMember(Name="constellation_id", EmitDefaultValue=false)]
        public int? ConstellationId { get; set; }

        /// <summary>
        /// name string
        /// </summary>
        /// <value>name string</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// planets array
        /// </summary>
        /// <value>planets array</value>
        [DataMember(Name="planets", EmitDefaultValue=false)]
        public List<GetUniverseSystemsSystemIdPlanet> Planets { get; set; }

        /// <summary>
        /// Gets or Sets Position
        /// </summary>
        [DataMember(Name="position", EmitDefaultValue=false)]
        public GetUniverseSystemsSystemIdPosition Position { get; set; }

        /// <summary>
        /// security_class string
        /// </summary>
        /// <value>security_class string</value>
        [DataMember(Name="security_class", EmitDefaultValue=false)]
        public string SecurityClass { get; set; }

        /// <summary>
        /// security_status number
        /// </summary>
        /// <value>security_status number</value>
        [DataMember(Name="security_status", EmitDefaultValue=false)]
        public float? SecurityStatus { get; set; }

        /// <summary>
        /// star_id integer
        /// </summary>
        /// <value>star_id integer</value>
        [DataMember(Name="star_id", EmitDefaultValue=false)]
        public int? StarId { get; set; }

        /// <summary>
        /// stargates array
        /// </summary>
        /// <value>stargates array</value>
        [DataMember(Name="stargates", EmitDefaultValue=false)]
        public List<int?> Stargates { get; set; }

        /// <summary>
        /// stations array
        /// </summary>
        /// <value>stations array</value>
        [DataMember(Name="stations", EmitDefaultValue=false)]
        public List<int?> Stations { get; set; }

        /// <summary>
        /// system_id integer
        /// </summary>
        /// <value>system_id integer</value>
        [DataMember(Name="system_id", EmitDefaultValue=false)]
        public int? SystemId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetUniverseSystemsSystemIdOk {\n");
            sb.Append("  ConstellationId: ").Append(ConstellationId).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Planets: ").Append(Planets).Append("\n");
            sb.Append("  Position: ").Append(Position).Append("\n");
            sb.Append("  SecurityClass: ").Append(SecurityClass).Append("\n");
            sb.Append("  SecurityStatus: ").Append(SecurityStatus).Append("\n");
            sb.Append("  StarId: ").Append(StarId).Append("\n");
            sb.Append("  Stargates: ").Append(Stargates).Append("\n");
            sb.Append("  Stations: ").Append(Stations).Append("\n");
            sb.Append("  SystemId: ").Append(SystemId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetUniverseSystemsSystemIdOk);
        }

        /// <summary>
        /// Returns true if GetUniverseSystemsSystemIdOk instances are equal
        /// </summary>
        /// <param name="input">Instance of GetUniverseSystemsSystemIdOk to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetUniverseSystemsSystemIdOk input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ConstellationId == input.ConstellationId ||
                    (this.ConstellationId != null &&
                    this.ConstellationId.Equals(input.ConstellationId))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Planets == input.Planets ||
                    this.Planets != null &&
                    this.Planets.SequenceEqual(input.Planets)
                ) && 
                (
                    this.Position == input.Position ||
                    (this.Position != null &&
                    this.Position.Equals(input.Position))
                ) && 
                (
                    this.SecurityClass == input.SecurityClass ||
                    (this.SecurityClass != null &&
                    this.SecurityClass.Equals(input.SecurityClass))
                ) && 
                (
                    this.SecurityStatus == input.SecurityStatus ||
                    (this.SecurityStatus != null &&
                    this.SecurityStatus.Equals(input.SecurityStatus))
                ) && 
                (
                    this.StarId == input.StarId ||
                    (this.StarId != null &&
                    this.StarId.Equals(input.StarId))
                ) && 
                (
                    this.Stargates == input.Stargates ||
                    this.Stargates != null &&
                    this.Stargates.SequenceEqual(input.Stargates)
                ) && 
                (
                    this.Stations == input.Stations ||
                    this.Stations != null &&
                    this.Stations.SequenceEqual(input.Stations)
                ) && 
                (
                    this.SystemId == input.SystemId ||
                    (this.SystemId != null &&
                    this.SystemId.Equals(input.SystemId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConstellationId != null)
                    hashCode = hashCode * 59 + this.ConstellationId.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Planets != null)
                    hashCode = hashCode * 59 + this.Planets.GetHashCode();
                if (this.Position != null)
                    hashCode = hashCode * 59 + this.Position.GetHashCode();
                if (this.SecurityClass != null)
                    hashCode = hashCode * 59 + this.SecurityClass.GetHashCode();
                if (this.SecurityStatus != null)
                    hashCode = hashCode * 59 + this.SecurityStatus.GetHashCode();
                if (this.StarId != null)
                    hashCode = hashCode * 59 + this.StarId.GetHashCode();
                if (this.Stargates != null)
                    hashCode = hashCode * 59 + this.Stargates.GetHashCode();
                if (this.Stations != null)
                    hashCode = hashCode * 59 + this.Stations.GetHashCode();
                if (this.SystemId != null)
                    hashCode = hashCode * 59 + this.SystemId.GetHashCode();
                return hashCode;
            }
        }
    }

}
