/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.3.8
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = ESIClient.Dotcore.Client.SwaggerDateConverter;

namespace ESIClient.Dotcore.Model
{
    /// <summary>
    /// 200 ok object
    /// </summary>
    [DataContract]
    public partial class GetCharactersCharacterIdNotifications200Ok :  IEquatable<GetCharactersCharacterIdNotifications200Ok>
    {
        /// <summary>
        /// sender_type string
        /// </summary>
        /// <value>sender_type string</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum SenderTypeEnum
        {
            
            /// <summary>
            /// Enum Character for value: character
            /// </summary>
            [EnumMember(Value = "character")]
            Character = 1,
            
            /// <summary>
            /// Enum Corporation for value: corporation
            /// </summary>
            [EnumMember(Value = "corporation")]
            Corporation = 2,
            
            /// <summary>
            /// Enum Alliance for value: alliance
            /// </summary>
            [EnumMember(Value = "alliance")]
            Alliance = 3,
            
            /// <summary>
            /// Enum Faction for value: faction
            /// </summary>
            [EnumMember(Value = "faction")]
            Faction = 4,
            
            /// <summary>
            /// Enum Other for value: other
            /// </summary>
            [EnumMember(Value = "other")]
            Other = 5
        }

        /// <summary>
        /// sender_type string
        /// </summary>
        /// <value>sender_type string</value>
        [DataMember(Name="sender_type", EmitDefaultValue=false)]
        public SenderTypeEnum SenderType { get; set; }
        /// <summary>
        /// type string
        /// </summary>
        /// <value>type string</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum AcceptedAlly for value: AcceptedAlly
            /// </summary>
            [EnumMember(Value = "AcceptedAlly")]
            AcceptedAlly = 1,
            
            /// <summary>
            /// Enum AcceptedSurrender for value: AcceptedSurrender
            /// </summary>
            [EnumMember(Value = "AcceptedSurrender")]
            AcceptedSurrender = 2,
            
            /// <summary>
            /// Enum AllAnchoringMsg for value: AllAnchoringMsg
            /// </summary>
            [EnumMember(Value = "AllAnchoringMsg")]
            AllAnchoringMsg = 3,
            
            /// <summary>
            /// Enum AllMaintenanceBillMsg for value: AllMaintenanceBillMsg
            /// </summary>
            [EnumMember(Value = "AllMaintenanceBillMsg")]
            AllMaintenanceBillMsg = 4,
            
            /// <summary>
            /// Enum AllStrucInvulnerableMsg for value: AllStrucInvulnerableMsg
            /// </summary>
            [EnumMember(Value = "AllStrucInvulnerableMsg")]
            AllStrucInvulnerableMsg = 5,
            
            /// <summary>
            /// Enum AllStructVulnerableMsg for value: AllStructVulnerableMsg
            /// </summary>
            [EnumMember(Value = "AllStructVulnerableMsg")]
            AllStructVulnerableMsg = 6,
            
            /// <summary>
            /// Enum AllWarCorpJoinedAllianceMsg for value: AllWarCorpJoinedAllianceMsg
            /// </summary>
            [EnumMember(Value = "AllWarCorpJoinedAllianceMsg")]
            AllWarCorpJoinedAllianceMsg = 7,
            
            /// <summary>
            /// Enum AllWarDeclaredMsg for value: AllWarDeclaredMsg
            /// </summary>
            [EnumMember(Value = "AllWarDeclaredMsg")]
            AllWarDeclaredMsg = 8,
            
            /// <summary>
            /// Enum AllWarInvalidatedMsg for value: AllWarInvalidatedMsg
            /// </summary>
            [EnumMember(Value = "AllWarInvalidatedMsg")]
            AllWarInvalidatedMsg = 9,
            
            /// <summary>
            /// Enum AllWarRetractedMsg for value: AllWarRetractedMsg
            /// </summary>
            [EnumMember(Value = "AllWarRetractedMsg")]
            AllWarRetractedMsg = 10,
            
            /// <summary>
            /// Enum AllWarSurrenderMsg for value: AllWarSurrenderMsg
            /// </summary>
            [EnumMember(Value = "AllWarSurrenderMsg")]
            AllWarSurrenderMsg = 11,
            
            /// <summary>
            /// Enum AllianceCapitalChanged for value: AllianceCapitalChanged
            /// </summary>
            [EnumMember(Value = "AllianceCapitalChanged")]
            AllianceCapitalChanged = 12,
            
            /// <summary>
            /// Enum AllianceWarDeclaredV2 for value: AllianceWarDeclaredV2
            /// </summary>
            [EnumMember(Value = "AllianceWarDeclaredV2")]
            AllianceWarDeclaredV2 = 13,
            
            /// <summary>
            /// Enum AllyContractCancelled for value: AllyContractCancelled
            /// </summary>
            [EnumMember(Value = "AllyContractCancelled")]
            AllyContractCancelled = 14,
            
            /// <summary>
            /// Enum AllyJoinedWarAggressorMsg for value: AllyJoinedWarAggressorMsg
            /// </summary>
            [EnumMember(Value = "AllyJoinedWarAggressorMsg")]
            AllyJoinedWarAggressorMsg = 15,
            
            /// <summary>
            /// Enum AllyJoinedWarAllyMsg for value: AllyJoinedWarAllyMsg
            /// </summary>
            [EnumMember(Value = "AllyJoinedWarAllyMsg")]
            AllyJoinedWarAllyMsg = 16,
            
            /// <summary>
            /// Enum AllyJoinedWarDefenderMsg for value: AllyJoinedWarDefenderMsg
            /// </summary>
            [EnumMember(Value = "AllyJoinedWarDefenderMsg")]
            AllyJoinedWarDefenderMsg = 17,
            
            /// <summary>
            /// Enum BattlePunishFriendlyFire for value: BattlePunishFriendlyFire
            /// </summary>
            [EnumMember(Value = "BattlePunishFriendlyFire")]
            BattlePunishFriendlyFire = 18,
            
            /// <summary>
            /// Enum BillOutOfMoneyMsg for value: BillOutOfMoneyMsg
            /// </summary>
            [EnumMember(Value = "BillOutOfMoneyMsg")]
            BillOutOfMoneyMsg = 19,
            
            /// <summary>
            /// Enum BillPaidCorpAllMsg for value: BillPaidCorpAllMsg
            /// </summary>
            [EnumMember(Value = "BillPaidCorpAllMsg")]
            BillPaidCorpAllMsg = 20,
            
            /// <summary>
            /// Enum BountyClaimMsg for value: BountyClaimMsg
            /// </summary>
            [EnumMember(Value = "BountyClaimMsg")]
            BountyClaimMsg = 21,
            
            /// <summary>
            /// Enum BountyESSShared for value: BountyESSShared
            /// </summary>
            [EnumMember(Value = "BountyESSShared")]
            BountyESSShared = 22,
            
            /// <summary>
            /// Enum BountyESSTaken for value: BountyESSTaken
            /// </summary>
            [EnumMember(Value = "BountyESSTaken")]
            BountyESSTaken = 23,
            
            /// <summary>
            /// Enum BountyPlacedAlliance for value: BountyPlacedAlliance
            /// </summary>
            [EnumMember(Value = "BountyPlacedAlliance")]
            BountyPlacedAlliance = 24,
            
            /// <summary>
            /// Enum BountyPlacedChar for value: BountyPlacedChar
            /// </summary>
            [EnumMember(Value = "BountyPlacedChar")]
            BountyPlacedChar = 25,
            
            /// <summary>
            /// Enum BountyPlacedCorp for value: BountyPlacedCorp
            /// </summary>
            [EnumMember(Value = "BountyPlacedCorp")]
            BountyPlacedCorp = 26,
            
            /// <summary>
            /// Enum BountyYourBountyClaimed for value: BountyYourBountyClaimed
            /// </summary>
            [EnumMember(Value = "BountyYourBountyClaimed")]
            BountyYourBountyClaimed = 27,
            
            /// <summary>
            /// Enum BuddyConnectContactAdd for value: BuddyConnectContactAdd
            /// </summary>
            [EnumMember(Value = "BuddyConnectContactAdd")]
            BuddyConnectContactAdd = 28,
            
            /// <summary>
            /// Enum CharAppAcceptMsg for value: CharAppAcceptMsg
            /// </summary>
            [EnumMember(Value = "CharAppAcceptMsg")]
            CharAppAcceptMsg = 29,
            
            /// <summary>
            /// Enum CharAppRejectMsg for value: CharAppRejectMsg
            /// </summary>
            [EnumMember(Value = "CharAppRejectMsg")]
            CharAppRejectMsg = 30,
            
            /// <summary>
            /// Enum CharAppWithdrawMsg for value: CharAppWithdrawMsg
            /// </summary>
            [EnumMember(Value = "CharAppWithdrawMsg")]
            CharAppWithdrawMsg = 31,
            
            /// <summary>
            /// Enum CharLeftCorpMsg for value: CharLeftCorpMsg
            /// </summary>
            [EnumMember(Value = "CharLeftCorpMsg")]
            CharLeftCorpMsg = 32,
            
            /// <summary>
            /// Enum CharMedalMsg for value: CharMedalMsg
            /// </summary>
            [EnumMember(Value = "CharMedalMsg")]
            CharMedalMsg = 33,
            
            /// <summary>
            /// Enum CharTerminationMsg for value: CharTerminationMsg
            /// </summary>
            [EnumMember(Value = "CharTerminationMsg")]
            CharTerminationMsg = 34,
            
            /// <summary>
            /// Enum CloneActivationMsg for value: CloneActivationMsg
            /// </summary>
            [EnumMember(Value = "CloneActivationMsg")]
            CloneActivationMsg = 35,
            
            /// <summary>
            /// Enum CloneActivationMsg2 for value: CloneActivationMsg2
            /// </summary>
            [EnumMember(Value = "CloneActivationMsg2")]
            CloneActivationMsg2 = 36,
            
            /// <summary>
            /// Enum CloneMovedMsg for value: CloneMovedMsg
            /// </summary>
            [EnumMember(Value = "CloneMovedMsg")]
            CloneMovedMsg = 37,
            
            /// <summary>
            /// Enum CloneRevokedMsg1 for value: CloneRevokedMsg1
            /// </summary>
            [EnumMember(Value = "CloneRevokedMsg1")]
            CloneRevokedMsg1 = 38,
            
            /// <summary>
            /// Enum CloneRevokedMsg2 for value: CloneRevokedMsg2
            /// </summary>
            [EnumMember(Value = "CloneRevokedMsg2")]
            CloneRevokedMsg2 = 39,
            
            /// <summary>
            /// Enum CombatOperationFinished for value: CombatOperationFinished
            /// </summary>
            [EnumMember(Value = "CombatOperationFinished")]
            CombatOperationFinished = 40,
            
            /// <summary>
            /// Enum ContactAdd for value: ContactAdd
            /// </summary>
            [EnumMember(Value = "ContactAdd")]
            ContactAdd = 41,
            
            /// <summary>
            /// Enum ContactEdit for value: ContactEdit
            /// </summary>
            [EnumMember(Value = "ContactEdit")]
            ContactEdit = 42,
            
            /// <summary>
            /// Enum ContainerPasswordMsg for value: ContainerPasswordMsg
            /// </summary>
            [EnumMember(Value = "ContainerPasswordMsg")]
            ContainerPasswordMsg = 43,
            
            /// <summary>
            /// Enum CorpAllBillMsg for value: CorpAllBillMsg
            /// </summary>
            [EnumMember(Value = "CorpAllBillMsg")]
            CorpAllBillMsg = 44,
            
            /// <summary>
            /// Enum CorpAppAcceptMsg for value: CorpAppAcceptMsg
            /// </summary>
            [EnumMember(Value = "CorpAppAcceptMsg")]
            CorpAppAcceptMsg = 45,
            
            /// <summary>
            /// Enum CorpAppInvitedMsg for value: CorpAppInvitedMsg
            /// </summary>
            [EnumMember(Value = "CorpAppInvitedMsg")]
            CorpAppInvitedMsg = 46,
            
            /// <summary>
            /// Enum CorpAppNewMsg for value: CorpAppNewMsg
            /// </summary>
            [EnumMember(Value = "CorpAppNewMsg")]
            CorpAppNewMsg = 47,
            
            /// <summary>
            /// Enum CorpAppRejectCustomMsg for value: CorpAppRejectCustomMsg
            /// </summary>
            [EnumMember(Value = "CorpAppRejectCustomMsg")]
            CorpAppRejectCustomMsg = 48,
            
            /// <summary>
            /// Enum CorpAppRejectMsg for value: CorpAppRejectMsg
            /// </summary>
            [EnumMember(Value = "CorpAppRejectMsg")]
            CorpAppRejectMsg = 49,
            
            /// <summary>
            /// Enum CorpBecameWarEligible for value: CorpBecameWarEligible
            /// </summary>
            [EnumMember(Value = "CorpBecameWarEligible")]
            CorpBecameWarEligible = 50,
            
            /// <summary>
            /// Enum CorpDividendMsg for value: CorpDividendMsg
            /// </summary>
            [EnumMember(Value = "CorpDividendMsg")]
            CorpDividendMsg = 51,
            
            /// <summary>
            /// Enum CorpFriendlyFireDisableTimerCompleted for value: CorpFriendlyFireDisableTimerCompleted
            /// </summary>
            [EnumMember(Value = "CorpFriendlyFireDisableTimerCompleted")]
            CorpFriendlyFireDisableTimerCompleted = 52,
            
            /// <summary>
            /// Enum CorpFriendlyFireDisableTimerStarted for value: CorpFriendlyFireDisableTimerStarted
            /// </summary>
            [EnumMember(Value = "CorpFriendlyFireDisableTimerStarted")]
            CorpFriendlyFireDisableTimerStarted = 53,
            
            /// <summary>
            /// Enum CorpFriendlyFireEnableTimerCompleted for value: CorpFriendlyFireEnableTimerCompleted
            /// </summary>
            [EnumMember(Value = "CorpFriendlyFireEnableTimerCompleted")]
            CorpFriendlyFireEnableTimerCompleted = 54,
            
            /// <summary>
            /// Enum CorpFriendlyFireEnableTimerStarted for value: CorpFriendlyFireEnableTimerStarted
            /// </summary>
            [EnumMember(Value = "CorpFriendlyFireEnableTimerStarted")]
            CorpFriendlyFireEnableTimerStarted = 55,
            
            /// <summary>
            /// Enum CorpKicked for value: CorpKicked
            /// </summary>
            [EnumMember(Value = "CorpKicked")]
            CorpKicked = 56,
            
            /// <summary>
            /// Enum CorpLiquidationMsg for value: CorpLiquidationMsg
            /// </summary>
            [EnumMember(Value = "CorpLiquidationMsg")]
            CorpLiquidationMsg = 57,
            
            /// <summary>
            /// Enum CorpNewCEOMsg for value: CorpNewCEOMsg
            /// </summary>
            [EnumMember(Value = "CorpNewCEOMsg")]
            CorpNewCEOMsg = 58,
            
            /// <summary>
            /// Enum CorpNewsMsg for value: CorpNewsMsg
            /// </summary>
            [EnumMember(Value = "CorpNewsMsg")]
            CorpNewsMsg = 59,
            
            /// <summary>
            /// Enum CorpNoLongerWarEligible for value: CorpNoLongerWarEligible
            /// </summary>
            [EnumMember(Value = "CorpNoLongerWarEligible")]
            CorpNoLongerWarEligible = 60,
            
            /// <summary>
            /// Enum CorpOfficeExpirationMsg for value: CorpOfficeExpirationMsg
            /// </summary>
            [EnumMember(Value = "CorpOfficeExpirationMsg")]
            CorpOfficeExpirationMsg = 61,
            
            /// <summary>
            /// Enum CorpStructLostMsg for value: CorpStructLostMsg
            /// </summary>
            [EnumMember(Value = "CorpStructLostMsg")]
            CorpStructLostMsg = 62,
            
            /// <summary>
            /// Enum CorpTaxChangeMsg for value: CorpTaxChangeMsg
            /// </summary>
            [EnumMember(Value = "CorpTaxChangeMsg")]
            CorpTaxChangeMsg = 63,
            
            /// <summary>
            /// Enum CorpVoteCEORevokedMsg for value: CorpVoteCEORevokedMsg
            /// </summary>
            [EnumMember(Value = "CorpVoteCEORevokedMsg")]
            CorpVoteCEORevokedMsg = 64,
            
            /// <summary>
            /// Enum CorpVoteMsg for value: CorpVoteMsg
            /// </summary>
            [EnumMember(Value = "CorpVoteMsg")]
            CorpVoteMsg = 65,
            
            /// <summary>
            /// Enum CorpWarDeclaredMsg for value: CorpWarDeclaredMsg
            /// </summary>
            [EnumMember(Value = "CorpWarDeclaredMsg")]
            CorpWarDeclaredMsg = 66,
            
            /// <summary>
            /// Enum CorpWarDeclaredV2 for value: CorpWarDeclaredV2
            /// </summary>
            [EnumMember(Value = "CorpWarDeclaredV2")]
            CorpWarDeclaredV2 = 67,
            
            /// <summary>
            /// Enum CorpWarFightingLegalMsg for value: CorpWarFightingLegalMsg
            /// </summary>
            [EnumMember(Value = "CorpWarFightingLegalMsg")]
            CorpWarFightingLegalMsg = 68,
            
            /// <summary>
            /// Enum CorpWarInvalidatedMsg for value: CorpWarInvalidatedMsg
            /// </summary>
            [EnumMember(Value = "CorpWarInvalidatedMsg")]
            CorpWarInvalidatedMsg = 69,
            
            /// <summary>
            /// Enum CorpWarRetractedMsg for value: CorpWarRetractedMsg
            /// </summary>
            [EnumMember(Value = "CorpWarRetractedMsg")]
            CorpWarRetractedMsg = 70,
            
            /// <summary>
            /// Enum CorpWarSurrenderMsg for value: CorpWarSurrenderMsg
            /// </summary>
            [EnumMember(Value = "CorpWarSurrenderMsg")]
            CorpWarSurrenderMsg = 71,
            
            /// <summary>
            /// Enum CustomsMsg for value: CustomsMsg
            /// </summary>
            [EnumMember(Value = "CustomsMsg")]
            CustomsMsg = 72,
            
            /// <summary>
            /// Enum DeclareWar for value: DeclareWar
            /// </summary>
            [EnumMember(Value = "DeclareWar")]
            DeclareWar = 73,
            
            /// <summary>
            /// Enum DistrictAttacked for value: DistrictAttacked
            /// </summary>
            [EnumMember(Value = "DistrictAttacked")]
            DistrictAttacked = 74,
            
            /// <summary>
            /// Enum DustAppAcceptedMsg for value: DustAppAcceptedMsg
            /// </summary>
            [EnumMember(Value = "DustAppAcceptedMsg")]
            DustAppAcceptedMsg = 75,
            
            /// <summary>
            /// Enum EntosisCaptureStarted for value: EntosisCaptureStarted
            /// </summary>
            [EnumMember(Value = "EntosisCaptureStarted")]
            EntosisCaptureStarted = 76,
            
            /// <summary>
            /// Enum FWAllianceKickMsg for value: FWAllianceKickMsg
            /// </summary>
            [EnumMember(Value = "FWAllianceKickMsg")]
            FWAllianceKickMsg = 77,
            
            /// <summary>
            /// Enum FWAllianceWarningMsg for value: FWAllianceWarningMsg
            /// </summary>
            [EnumMember(Value = "FWAllianceWarningMsg")]
            FWAllianceWarningMsg = 78,
            
            /// <summary>
            /// Enum FWCharKickMsg for value: FWCharKickMsg
            /// </summary>
            [EnumMember(Value = "FWCharKickMsg")]
            FWCharKickMsg = 79,
            
            /// <summary>
            /// Enum FWCharRankGainMsg for value: FWCharRankGainMsg
            /// </summary>
            [EnumMember(Value = "FWCharRankGainMsg")]
            FWCharRankGainMsg = 80,
            
            /// <summary>
            /// Enum FWCharRankLossMsg for value: FWCharRankLossMsg
            /// </summary>
            [EnumMember(Value = "FWCharRankLossMsg")]
            FWCharRankLossMsg = 81,
            
            /// <summary>
            /// Enum FWCharWarningMsg for value: FWCharWarningMsg
            /// </summary>
            [EnumMember(Value = "FWCharWarningMsg")]
            FWCharWarningMsg = 82,
            
            /// <summary>
            /// Enum FWCorpJoinMsg for value: FWCorpJoinMsg
            /// </summary>
            [EnumMember(Value = "FWCorpJoinMsg")]
            FWCorpJoinMsg = 83,
            
            /// <summary>
            /// Enum FWCorpKickMsg for value: FWCorpKickMsg
            /// </summary>
            [EnumMember(Value = "FWCorpKickMsg")]
            FWCorpKickMsg = 84,
            
            /// <summary>
            /// Enum FWCorpLeaveMsg for value: FWCorpLeaveMsg
            /// </summary>
            [EnumMember(Value = "FWCorpLeaveMsg")]
            FWCorpLeaveMsg = 85,
            
            /// <summary>
            /// Enum FWCorpWarningMsg for value: FWCorpWarningMsg
            /// </summary>
            [EnumMember(Value = "FWCorpWarningMsg")]
            FWCorpWarningMsg = 86,
            
            /// <summary>
            /// Enum FacWarCorpJoinRequestMsg for value: FacWarCorpJoinRequestMsg
            /// </summary>
            [EnumMember(Value = "FacWarCorpJoinRequestMsg")]
            FacWarCorpJoinRequestMsg = 87,
            
            /// <summary>
            /// Enum FacWarCorpJoinWithdrawMsg for value: FacWarCorpJoinWithdrawMsg
            /// </summary>
            [EnumMember(Value = "FacWarCorpJoinWithdrawMsg")]
            FacWarCorpJoinWithdrawMsg = 88,
            
            /// <summary>
            /// Enum FacWarCorpLeaveRequestMsg for value: FacWarCorpLeaveRequestMsg
            /// </summary>
            [EnumMember(Value = "FacWarCorpLeaveRequestMsg")]
            FacWarCorpLeaveRequestMsg = 89,
            
            /// <summary>
            /// Enum FacWarCorpLeaveWithdrawMsg for value: FacWarCorpLeaveWithdrawMsg
            /// </summary>
            [EnumMember(Value = "FacWarCorpLeaveWithdrawMsg")]
            FacWarCorpLeaveWithdrawMsg = 90,
            
            /// <summary>
            /// Enum FacWarLPDisqualifiedEvent for value: FacWarLPDisqualifiedEvent
            /// </summary>
            [EnumMember(Value = "FacWarLPDisqualifiedEvent")]
            FacWarLPDisqualifiedEvent = 91,
            
            /// <summary>
            /// Enum FacWarLPDisqualifiedKill for value: FacWarLPDisqualifiedKill
            /// </summary>
            [EnumMember(Value = "FacWarLPDisqualifiedKill")]
            FacWarLPDisqualifiedKill = 92,
            
            /// <summary>
            /// Enum FacWarLPPayoutEvent for value: FacWarLPPayoutEvent
            /// </summary>
            [EnumMember(Value = "FacWarLPPayoutEvent")]
            FacWarLPPayoutEvent = 93,
            
            /// <summary>
            /// Enum FacWarLPPayoutKill for value: FacWarLPPayoutKill
            /// </summary>
            [EnumMember(Value = "FacWarLPPayoutKill")]
            FacWarLPPayoutKill = 94,
            
            /// <summary>
            /// Enum GameTimeAdded for value: GameTimeAdded
            /// </summary>
            [EnumMember(Value = "GameTimeAdded")]
            GameTimeAdded = 95,
            
            /// <summary>
            /// Enum GameTimeReceived for value: GameTimeReceived
            /// </summary>
            [EnumMember(Value = "GameTimeReceived")]
            GameTimeReceived = 96,
            
            /// <summary>
            /// Enum GameTimeSent for value: GameTimeSent
            /// </summary>
            [EnumMember(Value = "GameTimeSent")]
            GameTimeSent = 97,
            
            /// <summary>
            /// Enum GiftReceived for value: GiftReceived
            /// </summary>
            [EnumMember(Value = "GiftReceived")]
            GiftReceived = 98,
            
            /// <summary>
            /// Enum IHubDestroyedByBillFailure for value: IHubDestroyedByBillFailure
            /// </summary>
            [EnumMember(Value = "IHubDestroyedByBillFailure")]
            IHubDestroyedByBillFailure = 99,
            
            /// <summary>
            /// Enum IncursionCompletedMsg for value: IncursionCompletedMsg
            /// </summary>
            [EnumMember(Value = "IncursionCompletedMsg")]
            IncursionCompletedMsg = 100,
            
            /// <summary>
            /// Enum IndustryOperationFinished for value: IndustryOperationFinished
            /// </summary>
            [EnumMember(Value = "IndustryOperationFinished")]
            IndustryOperationFinished = 101,
            
            /// <summary>
            /// Enum IndustryTeamAuctionLost for value: IndustryTeamAuctionLost
            /// </summary>
            [EnumMember(Value = "IndustryTeamAuctionLost")]
            IndustryTeamAuctionLost = 102,
            
            /// <summary>
            /// Enum IndustryTeamAuctionWon for value: IndustryTeamAuctionWon
            /// </summary>
            [EnumMember(Value = "IndustryTeamAuctionWon")]
            IndustryTeamAuctionWon = 103,
            
            /// <summary>
            /// Enum InfrastructureHubBillAboutToExpire for value: InfrastructureHubBillAboutToExpire
            /// </summary>
            [EnumMember(Value = "InfrastructureHubBillAboutToExpire")]
            InfrastructureHubBillAboutToExpire = 104,
            
            /// <summary>
            /// Enum InsuranceExpirationMsg for value: InsuranceExpirationMsg
            /// </summary>
            [EnumMember(Value = "InsuranceExpirationMsg")]
            InsuranceExpirationMsg = 105,
            
            /// <summary>
            /// Enum InsuranceFirstShipMsg for value: InsuranceFirstShipMsg
            /// </summary>
            [EnumMember(Value = "InsuranceFirstShipMsg")]
            InsuranceFirstShipMsg = 106,
            
            /// <summary>
            /// Enum InsuranceInvalidatedMsg for value: InsuranceInvalidatedMsg
            /// </summary>
            [EnumMember(Value = "InsuranceInvalidatedMsg")]
            InsuranceInvalidatedMsg = 107,
            
            /// <summary>
            /// Enum InsuranceIssuedMsg for value: InsuranceIssuedMsg
            /// </summary>
            [EnumMember(Value = "InsuranceIssuedMsg")]
            InsuranceIssuedMsg = 108,
            
            /// <summary>
            /// Enum InsurancePayoutMsg for value: InsurancePayoutMsg
            /// </summary>
            [EnumMember(Value = "InsurancePayoutMsg")]
            InsurancePayoutMsg = 109,
            
            /// <summary>
            /// Enum InvasionSystemLogin for value: InvasionSystemLogin
            /// </summary>
            [EnumMember(Value = "InvasionSystemLogin")]
            InvasionSystemLogin = 110,
            
            /// <summary>
            /// Enum JumpCloneDeletedMsg1 for value: JumpCloneDeletedMsg1
            /// </summary>
            [EnumMember(Value = "JumpCloneDeletedMsg1")]
            JumpCloneDeletedMsg1 = 111,
            
            /// <summary>
            /// Enum JumpCloneDeletedMsg2 for value: JumpCloneDeletedMsg2
            /// </summary>
            [EnumMember(Value = "JumpCloneDeletedMsg2")]
            JumpCloneDeletedMsg2 = 112,
            
            /// <summary>
            /// Enum KillReportFinalBlow for value: KillReportFinalBlow
            /// </summary>
            [EnumMember(Value = "KillReportFinalBlow")]
            KillReportFinalBlow = 113,
            
            /// <summary>
            /// Enum KillReportVictim for value: KillReportVictim
            /// </summary>
            [EnumMember(Value = "KillReportVictim")]
            KillReportVictim = 114,
            
            /// <summary>
            /// Enum KillRightAvailable for value: KillRightAvailable
            /// </summary>
            [EnumMember(Value = "KillRightAvailable")]
            KillRightAvailable = 115,
            
            /// <summary>
            /// Enum KillRightAvailableOpen for value: KillRightAvailableOpen
            /// </summary>
            [EnumMember(Value = "KillRightAvailableOpen")]
            KillRightAvailableOpen = 116,
            
            /// <summary>
            /// Enum KillRightEarned for value: KillRightEarned
            /// </summary>
            [EnumMember(Value = "KillRightEarned")]
            KillRightEarned = 117,
            
            /// <summary>
            /// Enum KillRightUnavailable for value: KillRightUnavailable
            /// </summary>
            [EnumMember(Value = "KillRightUnavailable")]
            KillRightUnavailable = 118,
            
            /// <summary>
            /// Enum KillRightUnavailableOpen for value: KillRightUnavailableOpen
            /// </summary>
            [EnumMember(Value = "KillRightUnavailableOpen")]
            KillRightUnavailableOpen = 119,
            
            /// <summary>
            /// Enum KillRightUsed for value: KillRightUsed
            /// </summary>
            [EnumMember(Value = "KillRightUsed")]
            KillRightUsed = 120,
            
            /// <summary>
            /// Enum LocateCharMsg for value: LocateCharMsg
            /// </summary>
            [EnumMember(Value = "LocateCharMsg")]
            LocateCharMsg = 121,
            
            /// <summary>
            /// Enum MadeWarMutual for value: MadeWarMutual
            /// </summary>
            [EnumMember(Value = "MadeWarMutual")]
            MadeWarMutual = 122,
            
            /// <summary>
            /// Enum MercOfferRetractedMsg for value: MercOfferRetractedMsg
            /// </summary>
            [EnumMember(Value = "MercOfferRetractedMsg")]
            MercOfferRetractedMsg = 123,
            
            /// <summary>
            /// Enum MercOfferedNegotiationMsg for value: MercOfferedNegotiationMsg
            /// </summary>
            [EnumMember(Value = "MercOfferedNegotiationMsg")]
            MercOfferedNegotiationMsg = 124,
            
            /// <summary>
            /// Enum MissionOfferExpirationMsg for value: MissionOfferExpirationMsg
            /// </summary>
            [EnumMember(Value = "MissionOfferExpirationMsg")]
            MissionOfferExpirationMsg = 125,
            
            /// <summary>
            /// Enum MissionTimeoutMsg for value: MissionTimeoutMsg
            /// </summary>
            [EnumMember(Value = "MissionTimeoutMsg")]
            MissionTimeoutMsg = 126,
            
            /// <summary>
            /// Enum MoonminingAutomaticFracture for value: MoonminingAutomaticFracture
            /// </summary>
            [EnumMember(Value = "MoonminingAutomaticFracture")]
            MoonminingAutomaticFracture = 127,
            
            /// <summary>
            /// Enum MoonminingExtractionCancelled for value: MoonminingExtractionCancelled
            /// </summary>
            [EnumMember(Value = "MoonminingExtractionCancelled")]
            MoonminingExtractionCancelled = 128,
            
            /// <summary>
            /// Enum MoonminingExtractionFinished for value: MoonminingExtractionFinished
            /// </summary>
            [EnumMember(Value = "MoonminingExtractionFinished")]
            MoonminingExtractionFinished = 129,
            
            /// <summary>
            /// Enum MoonminingExtractionStarted for value: MoonminingExtractionStarted
            /// </summary>
            [EnumMember(Value = "MoonminingExtractionStarted")]
            MoonminingExtractionStarted = 130,
            
            /// <summary>
            /// Enum MoonminingLaserFired for value: MoonminingLaserFired
            /// </summary>
            [EnumMember(Value = "MoonminingLaserFired")]
            MoonminingLaserFired = 131,
            
            /// <summary>
            /// Enum MutualWarExpired for value: MutualWarExpired
            /// </summary>
            [EnumMember(Value = "MutualWarExpired")]
            MutualWarExpired = 132,
            
            /// <summary>
            /// Enum MutualWarInviteAccepted for value: MutualWarInviteAccepted
            /// </summary>
            [EnumMember(Value = "MutualWarInviteAccepted")]
            MutualWarInviteAccepted = 133,
            
            /// <summary>
            /// Enum MutualWarInviteRejected for value: MutualWarInviteRejected
            /// </summary>
            [EnumMember(Value = "MutualWarInviteRejected")]
            MutualWarInviteRejected = 134,
            
            /// <summary>
            /// Enum MutualWarInviteSent for value: MutualWarInviteSent
            /// </summary>
            [EnumMember(Value = "MutualWarInviteSent")]
            MutualWarInviteSent = 135,
            
            /// <summary>
            /// Enum NPCStandingsGained for value: NPCStandingsGained
            /// </summary>
            [EnumMember(Value = "NPCStandingsGained")]
            NPCStandingsGained = 136,
            
            /// <summary>
            /// Enum NPCStandingsLost for value: NPCStandingsLost
            /// </summary>
            [EnumMember(Value = "NPCStandingsLost")]
            NPCStandingsLost = 137,
            
            /// <summary>
            /// Enum OfferToAllyRetracted for value: OfferToAllyRetracted
            /// </summary>
            [EnumMember(Value = "OfferToAllyRetracted")]
            OfferToAllyRetracted = 138,
            
            /// <summary>
            /// Enum OfferedSurrender for value: OfferedSurrender
            /// </summary>
            [EnumMember(Value = "OfferedSurrender")]
            OfferedSurrender = 139,
            
            /// <summary>
            /// Enum OfferedToAlly for value: OfferedToAlly
            /// </summary>
            [EnumMember(Value = "OfferedToAlly")]
            OfferedToAlly = 140,
            
            /// <summary>
            /// Enum OldLscMessages for value: OldLscMessages
            /// </summary>
            [EnumMember(Value = "OldLscMessages")]
            OldLscMessages = 141,
            
            /// <summary>
            /// Enum OperationFinished for value: OperationFinished
            /// </summary>
            [EnumMember(Value = "OperationFinished")]
            OperationFinished = 142,
            
            /// <summary>
            /// Enum OrbitalAttacked for value: OrbitalAttacked
            /// </summary>
            [EnumMember(Value = "OrbitalAttacked")]
            OrbitalAttacked = 143,
            
            /// <summary>
            /// Enum OrbitalReinforced for value: OrbitalReinforced
            /// </summary>
            [EnumMember(Value = "OrbitalReinforced")]
            OrbitalReinforced = 144,
            
            /// <summary>
            /// Enum OwnershipTransferred for value: OwnershipTransferred
            /// </summary>
            [EnumMember(Value = "OwnershipTransferred")]
            OwnershipTransferred = 145,
            
            /// <summary>
            /// Enum RaffleCreated for value: RaffleCreated
            /// </summary>
            [EnumMember(Value = "RaffleCreated")]
            RaffleCreated = 146,
            
            /// <summary>
            /// Enum RaffleExpired for value: RaffleExpired
            /// </summary>
            [EnumMember(Value = "RaffleExpired")]
            RaffleExpired = 147,
            
            /// <summary>
            /// Enum RaffleFinished for value: RaffleFinished
            /// </summary>
            [EnumMember(Value = "RaffleFinished")]
            RaffleFinished = 148,
            
            /// <summary>
            /// Enum ReimbursementMsg for value: ReimbursementMsg
            /// </summary>
            [EnumMember(Value = "ReimbursementMsg")]
            ReimbursementMsg = 149,
            
            /// <summary>
            /// Enum ResearchMissionAvailableMsg for value: ResearchMissionAvailableMsg
            /// </summary>
            [EnumMember(Value = "ResearchMissionAvailableMsg")]
            ResearchMissionAvailableMsg = 150,
            
            /// <summary>
            /// Enum RetractsWar for value: RetractsWar
            /// </summary>
            [EnumMember(Value = "RetractsWar")]
            RetractsWar = 151,
            
            /// <summary>
            /// Enum SeasonalChallengeCompleted for value: SeasonalChallengeCompleted
            /// </summary>
            [EnumMember(Value = "SeasonalChallengeCompleted")]
            SeasonalChallengeCompleted = 152,
            
            /// <summary>
            /// Enum SovAllClaimAquiredMsg for value: SovAllClaimAquiredMsg
            /// </summary>
            [EnumMember(Value = "SovAllClaimAquiredMsg")]
            SovAllClaimAquiredMsg = 153,
            
            /// <summary>
            /// Enum SovAllClaimLostMsg for value: SovAllClaimLostMsg
            /// </summary>
            [EnumMember(Value = "SovAllClaimLostMsg")]
            SovAllClaimLostMsg = 154,
            
            /// <summary>
            /// Enum SovCommandNodeEventStarted for value: SovCommandNodeEventStarted
            /// </summary>
            [EnumMember(Value = "SovCommandNodeEventStarted")]
            SovCommandNodeEventStarted = 155,
            
            /// <summary>
            /// Enum SovCorpBillLateMsg for value: SovCorpBillLateMsg
            /// </summary>
            [EnumMember(Value = "SovCorpBillLateMsg")]
            SovCorpBillLateMsg = 156,
            
            /// <summary>
            /// Enum SovCorpClaimFailMsg for value: SovCorpClaimFailMsg
            /// </summary>
            [EnumMember(Value = "SovCorpClaimFailMsg")]
            SovCorpClaimFailMsg = 157,
            
            /// <summary>
            /// Enum SovDisruptorMsg for value: SovDisruptorMsg
            /// </summary>
            [EnumMember(Value = "SovDisruptorMsg")]
            SovDisruptorMsg = 158,
            
            /// <summary>
            /// Enum SovStationEnteredFreeport for value: SovStationEnteredFreeport
            /// </summary>
            [EnumMember(Value = "SovStationEnteredFreeport")]
            SovStationEnteredFreeport = 159,
            
            /// <summary>
            /// Enum SovStructureDestroyed for value: SovStructureDestroyed
            /// </summary>
            [EnumMember(Value = "SovStructureDestroyed")]
            SovStructureDestroyed = 160,
            
            /// <summary>
            /// Enum SovStructureReinforced for value: SovStructureReinforced
            /// </summary>
            [EnumMember(Value = "SovStructureReinforced")]
            SovStructureReinforced = 161,
            
            /// <summary>
            /// Enum SovStructureSelfDestructCancel for value: SovStructureSelfDestructCancel
            /// </summary>
            [EnumMember(Value = "SovStructureSelfDestructCancel")]
            SovStructureSelfDestructCancel = 162,
            
            /// <summary>
            /// Enum SovStructureSelfDestructFinished for value: SovStructureSelfDestructFinished
            /// </summary>
            [EnumMember(Value = "SovStructureSelfDestructFinished")]
            SovStructureSelfDestructFinished = 163,
            
            /// <summary>
            /// Enum SovStructureSelfDestructRequested for value: SovStructureSelfDestructRequested
            /// </summary>
            [EnumMember(Value = "SovStructureSelfDestructRequested")]
            SovStructureSelfDestructRequested = 164,
            
            /// <summary>
            /// Enum SovereigntyIHDamageMsg for value: SovereigntyIHDamageMsg
            /// </summary>
            [EnumMember(Value = "SovereigntyIHDamageMsg")]
            SovereigntyIHDamageMsg = 165,
            
            /// <summary>
            /// Enum SovereigntySBUDamageMsg for value: SovereigntySBUDamageMsg
            /// </summary>
            [EnumMember(Value = "SovereigntySBUDamageMsg")]
            SovereigntySBUDamageMsg = 166,
            
            /// <summary>
            /// Enum SovereigntyTCUDamageMsg for value: SovereigntyTCUDamageMsg
            /// </summary>
            [EnumMember(Value = "SovereigntyTCUDamageMsg")]
            SovereigntyTCUDamageMsg = 167,
            
            /// <summary>
            /// Enum StationAggressionMsg1 for value: StationAggressionMsg1
            /// </summary>
            [EnumMember(Value = "StationAggressionMsg1")]
            StationAggressionMsg1 = 168,
            
            /// <summary>
            /// Enum StationAggressionMsg2 for value: StationAggressionMsg2
            /// </summary>
            [EnumMember(Value = "StationAggressionMsg2")]
            StationAggressionMsg2 = 169,
            
            /// <summary>
            /// Enum StationConquerMsg for value: StationConquerMsg
            /// </summary>
            [EnumMember(Value = "StationConquerMsg")]
            StationConquerMsg = 170,
            
            /// <summary>
            /// Enum StationServiceDisabled for value: StationServiceDisabled
            /// </summary>
            [EnumMember(Value = "StationServiceDisabled")]
            StationServiceDisabled = 171,
            
            /// <summary>
            /// Enum StationServiceEnabled for value: StationServiceEnabled
            /// </summary>
            [EnumMember(Value = "StationServiceEnabled")]
            StationServiceEnabled = 172,
            
            /// <summary>
            /// Enum StationStateChangeMsg for value: StationStateChangeMsg
            /// </summary>
            [EnumMember(Value = "StationStateChangeMsg")]
            StationStateChangeMsg = 173,
            
            /// <summary>
            /// Enum StoryLineMissionAvailableMsg for value: StoryLineMissionAvailableMsg
            /// </summary>
            [EnumMember(Value = "StoryLineMissionAvailableMsg")]
            StoryLineMissionAvailableMsg = 174,
            
            /// <summary>
            /// Enum StructureAnchoring for value: StructureAnchoring
            /// </summary>
            [EnumMember(Value = "StructureAnchoring")]
            StructureAnchoring = 175,
            
            /// <summary>
            /// Enum StructureCourierContractChanged for value: StructureCourierContractChanged
            /// </summary>
            [EnumMember(Value = "StructureCourierContractChanged")]
            StructureCourierContractChanged = 176,
            
            /// <summary>
            /// Enum StructureDestroyed for value: StructureDestroyed
            /// </summary>
            [EnumMember(Value = "StructureDestroyed")]
            StructureDestroyed = 177,
            
            /// <summary>
            /// Enum StructureFuelAlert for value: StructureFuelAlert
            /// </summary>
            [EnumMember(Value = "StructureFuelAlert")]
            StructureFuelAlert = 178,
            
            /// <summary>
            /// Enum StructureImpendingAbandonmentAssetsAtRisk for value: StructureImpendingAbandonmentAssetsAtRisk
            /// </summary>
            [EnumMember(Value = "StructureImpendingAbandonmentAssetsAtRisk")]
            StructureImpendingAbandonmentAssetsAtRisk = 179,
            
            /// <summary>
            /// Enum StructureItemsDelivered for value: StructureItemsDelivered
            /// </summary>
            [EnumMember(Value = "StructureItemsDelivered")]
            StructureItemsDelivered = 180,
            
            /// <summary>
            /// Enum StructureItemsMovedToSafety for value: StructureItemsMovedToSafety
            /// </summary>
            [EnumMember(Value = "StructureItemsMovedToSafety")]
            StructureItemsMovedToSafety = 181,
            
            /// <summary>
            /// Enum StructureLostArmor for value: StructureLostArmor
            /// </summary>
            [EnumMember(Value = "StructureLostArmor")]
            StructureLostArmor = 182,
            
            /// <summary>
            /// Enum StructureLostShields for value: StructureLostShields
            /// </summary>
            [EnumMember(Value = "StructureLostShields")]
            StructureLostShields = 183,
            
            /// <summary>
            /// Enum StructureOnline for value: StructureOnline
            /// </summary>
            [EnumMember(Value = "StructureOnline")]
            StructureOnline = 184,
            
            /// <summary>
            /// Enum StructureServicesOffline for value: StructureServicesOffline
            /// </summary>
            [EnumMember(Value = "StructureServicesOffline")]
            StructureServicesOffline = 185,
            
            /// <summary>
            /// Enum StructureUnanchoring for value: StructureUnanchoring
            /// </summary>
            [EnumMember(Value = "StructureUnanchoring")]
            StructureUnanchoring = 186,
            
            /// <summary>
            /// Enum StructureUnderAttack for value: StructureUnderAttack
            /// </summary>
            [EnumMember(Value = "StructureUnderAttack")]
            StructureUnderAttack = 187,
            
            /// <summary>
            /// Enum StructureWentHighPower for value: StructureWentHighPower
            /// </summary>
            [EnumMember(Value = "StructureWentHighPower")]
            StructureWentHighPower = 188,
            
            /// <summary>
            /// Enum StructureWentLowPower for value: StructureWentLowPower
            /// </summary>
            [EnumMember(Value = "StructureWentLowPower")]
            StructureWentLowPower = 189,
            
            /// <summary>
            /// Enum StructuresJobsCancelled for value: StructuresJobsCancelled
            /// </summary>
            [EnumMember(Value = "StructuresJobsCancelled")]
            StructuresJobsCancelled = 190,
            
            /// <summary>
            /// Enum StructuresJobsPaused for value: StructuresJobsPaused
            /// </summary>
            [EnumMember(Value = "StructuresJobsPaused")]
            StructuresJobsPaused = 191,
            
            /// <summary>
            /// Enum StructuresReinforcementChanged for value: StructuresReinforcementChanged
            /// </summary>
            [EnumMember(Value = "StructuresReinforcementChanged")]
            StructuresReinforcementChanged = 192,
            
            /// <summary>
            /// Enum TowerAlertMsg for value: TowerAlertMsg
            /// </summary>
            [EnumMember(Value = "TowerAlertMsg")]
            TowerAlertMsg = 193,
            
            /// <summary>
            /// Enum TowerResourceAlertMsg for value: TowerResourceAlertMsg
            /// </summary>
            [EnumMember(Value = "TowerResourceAlertMsg")]
            TowerResourceAlertMsg = 194,
            
            /// <summary>
            /// Enum TransactionReversalMsg for value: TransactionReversalMsg
            /// </summary>
            [EnumMember(Value = "TransactionReversalMsg")]
            TransactionReversalMsg = 195,
            
            /// <summary>
            /// Enum TutorialMsg for value: TutorialMsg
            /// </summary>
            [EnumMember(Value = "TutorialMsg")]
            TutorialMsg = 196,
            
            /// <summary>
            /// Enum WarAdopted for value: WarAdopted 
            /// </summary>
            [EnumMember(Value = "WarAdopted ")]
            WarAdopted = 197,
            
            /// <summary>
            /// Enum WarAllyInherited for value: WarAllyInherited
            /// </summary>
            [EnumMember(Value = "WarAllyInherited")]
            WarAllyInherited = 198,
            
            /// <summary>
            /// Enum WarAllyOfferDeclinedMsg for value: WarAllyOfferDeclinedMsg
            /// </summary>
            [EnumMember(Value = "WarAllyOfferDeclinedMsg")]
            WarAllyOfferDeclinedMsg = 199,
            
            /// <summary>
            /// Enum WarConcordInvalidates for value: WarConcordInvalidates
            /// </summary>
            [EnumMember(Value = "WarConcordInvalidates")]
            WarConcordInvalidates = 200,
            
            /// <summary>
            /// Enum WarDeclared for value: WarDeclared
            /// </summary>
            [EnumMember(Value = "WarDeclared")]
            WarDeclared = 201,
            
            /// <summary>
            /// Enum WarEndedHqSecurityDrop for value: WarEndedHqSecurityDrop
            /// </summary>
            [EnumMember(Value = "WarEndedHqSecurityDrop")]
            WarEndedHqSecurityDrop = 202,
            
            /// <summary>
            /// Enum WarHQRemovedFromSpace for value: WarHQRemovedFromSpace
            /// </summary>
            [EnumMember(Value = "WarHQRemovedFromSpace")]
            WarHQRemovedFromSpace = 203,
            
            /// <summary>
            /// Enum WarInherited for value: WarInherited
            /// </summary>
            [EnumMember(Value = "WarInherited")]
            WarInherited = 204,
            
            /// <summary>
            /// Enum WarInvalid for value: WarInvalid
            /// </summary>
            [EnumMember(Value = "WarInvalid")]
            WarInvalid = 205,
            
            /// <summary>
            /// Enum WarRetracted for value: WarRetracted
            /// </summary>
            [EnumMember(Value = "WarRetracted")]
            WarRetracted = 206,
            
            /// <summary>
            /// Enum WarRetractedByConcord for value: WarRetractedByConcord
            /// </summary>
            [EnumMember(Value = "WarRetractedByConcord")]
            WarRetractedByConcord = 207,
            
            /// <summary>
            /// Enum WarSurrenderDeclinedMsg for value: WarSurrenderDeclinedMsg
            /// </summary>
            [EnumMember(Value = "WarSurrenderDeclinedMsg")]
            WarSurrenderDeclinedMsg = 208,
            
            /// <summary>
            /// Enum WarSurrenderOfferMsg for value: WarSurrenderOfferMsg
            /// </summary>
            [EnumMember(Value = "WarSurrenderOfferMsg")]
            WarSurrenderOfferMsg = 209
        }

        /// <summary>
        /// type string
        /// </summary>
        /// <value>type string</value>
        [DataMember(Name="type", EmitDefaultValue=false)]
        public TypeEnum Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetCharactersCharacterIdNotifications200Ok" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetCharactersCharacterIdNotifications200Ok() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetCharactersCharacterIdNotifications200Ok" /> class.
        /// </summary>
        /// <param name="isRead">is_read boolean.</param>
        /// <param name="notificationId">notification_id integer (required).</param>
        /// <param name="senderId">sender_id integer (required).</param>
        /// <param name="senderType">sender_type string (required).</param>
        /// <param name="text">text string.</param>
        /// <param name="timestamp">timestamp string (required).</param>
        /// <param name="type">type string (required).</param>
        public GetCharactersCharacterIdNotifications200Ok(bool? isRead = default(bool?), long? notificationId = default(long?), int? senderId = default(int?), SenderTypeEnum senderType = default(SenderTypeEnum), string text = default(string), DateTime? timestamp = default(DateTime?), TypeEnum type = default(TypeEnum))
        {
            // to ensure "notificationId" is required (not null)
            if (notificationId == null)
            {
                throw new InvalidDataException("notificationId is a required property for GetCharactersCharacterIdNotifications200Ok and cannot be null");
            }
            else
            {
                this.NotificationId = notificationId;
            }
            // to ensure "senderId" is required (not null)
            if (senderId == null)
            {
                throw new InvalidDataException("senderId is a required property for GetCharactersCharacterIdNotifications200Ok and cannot be null");
            }
            else
            {
                this.SenderId = senderId;
            }
            // to ensure "senderType" is required (not null)
            if (senderType == null)
            {
                throw new InvalidDataException("senderType is a required property for GetCharactersCharacterIdNotifications200Ok and cannot be null");
            }
            else
            {
                this.SenderType = senderType;
            }
            // to ensure "timestamp" is required (not null)
            if (timestamp == null)
            {
                throw new InvalidDataException("timestamp is a required property for GetCharactersCharacterIdNotifications200Ok and cannot be null");
            }
            else
            {
                this.Timestamp = timestamp;
            }
            // to ensure "type" is required (not null)
            if (type == null)
            {
                throw new InvalidDataException("type is a required property for GetCharactersCharacterIdNotifications200Ok and cannot be null");
            }
            else
            {
                this.Type = type;
            }
            this.IsRead = isRead;
            this.Text = text;
        }
        
        /// <summary>
        /// is_read boolean
        /// </summary>
        /// <value>is_read boolean</value>
        [DataMember(Name="is_read", EmitDefaultValue=false)]
        public bool? IsRead { get; set; }

        /// <summary>
        /// notification_id integer
        /// </summary>
        /// <value>notification_id integer</value>
        [DataMember(Name="notification_id", EmitDefaultValue=false)]
        public long? NotificationId { get; set; }

        /// <summary>
        /// sender_id integer
        /// </summary>
        /// <value>sender_id integer</value>
        [DataMember(Name="sender_id", EmitDefaultValue=false)]
        public int? SenderId { get; set; }


        /// <summary>
        /// text string
        /// </summary>
        /// <value>text string</value>
        [DataMember(Name="text", EmitDefaultValue=false)]
        public string Text { get; set; }

        /// <summary>
        /// timestamp string
        /// </summary>
        /// <value>timestamp string</value>
        [DataMember(Name="timestamp", EmitDefaultValue=false)]
        public DateTime? Timestamp { get; set; }


        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetCharactersCharacterIdNotifications200Ok {\n");
            sb.Append("  IsRead: ").Append(IsRead).Append("\n");
            sb.Append("  NotificationId: ").Append(NotificationId).Append("\n");
            sb.Append("  SenderId: ").Append(SenderId).Append("\n");
            sb.Append("  SenderType: ").Append(SenderType).Append("\n");
            sb.Append("  Text: ").Append(Text).Append("\n");
            sb.Append("  Timestamp: ").Append(Timestamp).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetCharactersCharacterIdNotifications200Ok);
        }

        /// <summary>
        /// Returns true if GetCharactersCharacterIdNotifications200Ok instances are equal
        /// </summary>
        /// <param name="input">Instance of GetCharactersCharacterIdNotifications200Ok to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetCharactersCharacterIdNotifications200Ok input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.IsRead == input.IsRead ||
                    (this.IsRead != null &&
                    this.IsRead.Equals(input.IsRead))
                ) && 
                (
                    this.NotificationId == input.NotificationId ||
                    (this.NotificationId != null &&
                    this.NotificationId.Equals(input.NotificationId))
                ) && 
                (
                    this.SenderId == input.SenderId ||
                    (this.SenderId != null &&
                    this.SenderId.Equals(input.SenderId))
                ) && 
                (
                    this.SenderType == input.SenderType ||
                    (this.SenderType != null &&
                    this.SenderType.Equals(input.SenderType))
                ) && 
                (
                    this.Text == input.Text ||
                    (this.Text != null &&
                    this.Text.Equals(input.Text))
                ) && 
                (
                    this.Timestamp == input.Timestamp ||
                    (this.Timestamp != null &&
                    this.Timestamp.Equals(input.Timestamp))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.IsRead != null)
                    hashCode = hashCode * 59 + this.IsRead.GetHashCode();
                if (this.NotificationId != null)
                    hashCode = hashCode * 59 + this.NotificationId.GetHashCode();
                if (this.SenderId != null)
                    hashCode = hashCode * 59 + this.SenderId.GetHashCode();
                if (this.SenderType != null)
                    hashCode = hashCode * 59 + this.SenderType.GetHashCode();
                if (this.Text != null)
                    hashCode = hashCode * 59 + this.Text.GetHashCode();
                if (this.Timestamp != null)
                    hashCode = hashCode * 59 + this.Timestamp.GetHashCode();
                if (this.Type != null)
                    hashCode = hashCode * 59 + this.Type.GetHashCode();
                return hashCode;
            }
        }
    }

}
