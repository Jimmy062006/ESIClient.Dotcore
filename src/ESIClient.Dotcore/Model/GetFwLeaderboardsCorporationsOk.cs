/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.3.8
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = ESIClient.Dotcore.Client.SwaggerDateConverter;

namespace ESIClient.Dotcore.Model
{
    /// <summary>
    /// 200 ok object
    /// </summary>
    [DataContract]
    public partial class GetFwLeaderboardsCorporationsOk :  IEquatable<GetFwLeaderboardsCorporationsOk>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetFwLeaderboardsCorporationsOk" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetFwLeaderboardsCorporationsOk() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetFwLeaderboardsCorporationsOk" /> class.
        /// </summary>
        /// <param name="kills">kills (required).</param>
        /// <param name="victoryPoints">victoryPoints (required).</param>
        public GetFwLeaderboardsCorporationsOk(GetFwLeaderboardsCorporationsKills kills = default(GetFwLeaderboardsCorporationsKills), GetFwLeaderboardsCorporationsVictoryPoints victoryPoints = default(GetFwLeaderboardsCorporationsVictoryPoints))
        {
            // to ensure "kills" is required (not null)
            if (kills == null)
            {
                throw new InvalidDataException("kills is a required property for GetFwLeaderboardsCorporationsOk and cannot be null");
            }
            else
            {
                this.Kills = kills;
            }
            // to ensure "victoryPoints" is required (not null)
            if (victoryPoints == null)
            {
                throw new InvalidDataException("victoryPoints is a required property for GetFwLeaderboardsCorporationsOk and cannot be null");
            }
            else
            {
                this.VictoryPoints = victoryPoints;
            }
        }
        
        /// <summary>
        /// Gets or Sets Kills
        /// </summary>
        [DataMember(Name="kills", EmitDefaultValue=false)]
        public GetFwLeaderboardsCorporationsKills Kills { get; set; }

        /// <summary>
        /// Gets or Sets VictoryPoints
        /// </summary>
        [DataMember(Name="victory_points", EmitDefaultValue=false)]
        public GetFwLeaderboardsCorporationsVictoryPoints VictoryPoints { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetFwLeaderboardsCorporationsOk {\n");
            sb.Append("  Kills: ").Append(Kills).Append("\n");
            sb.Append("  VictoryPoints: ").Append(VictoryPoints).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetFwLeaderboardsCorporationsOk);
        }

        /// <summary>
        /// Returns true if GetFwLeaderboardsCorporationsOk instances are equal
        /// </summary>
        /// <param name="input">Instance of GetFwLeaderboardsCorporationsOk to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetFwLeaderboardsCorporationsOk input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Kills == input.Kills ||
                    (this.Kills != null &&
                    this.Kills.Equals(input.Kills))
                ) && 
                (
                    this.VictoryPoints == input.VictoryPoints ||
                    (this.VictoryPoints != null &&
                    this.VictoryPoints.Equals(input.VictoryPoints))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Kills != null)
                    hashCode = hashCode * 59 + this.Kills.GetHashCode();
                if (this.VictoryPoints != null)
                    hashCode = hashCode * 59 + this.VictoryPoints.GetHashCode();
                return hashCode;
            }
        }
    }

}
