/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.8.5
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = ESIClient.Dotcore.Client.SwaggerDateConverter;

namespace ESIClient.Dotcore.Model
{
    /// <summary>
    /// 200 ok object
    /// </summary>
    [DataContract]
    public partial class GetCorporationsCorporationIdRolesHistory200Ok :  IEquatable<GetCorporationsCorporationIdRolesHistory200Ok>
    {
        /// <summary>
        /// new_role string
        /// </summary>
        /// <value>new_role string</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum NewRolesEnum
        {
            
            /// <summary>
            /// Enum AccountTake1 for value: Account_Take_1
            /// </summary>
            [EnumMember(Value = "Account_Take_1")]
            AccountTake1 = 1,
            
            /// <summary>
            /// Enum AccountTake2 for value: Account_Take_2
            /// </summary>
            [EnumMember(Value = "Account_Take_2")]
            AccountTake2 = 2,
            
            /// <summary>
            /// Enum AccountTake3 for value: Account_Take_3
            /// </summary>
            [EnumMember(Value = "Account_Take_3")]
            AccountTake3 = 3,
            
            /// <summary>
            /// Enum AccountTake4 for value: Account_Take_4
            /// </summary>
            [EnumMember(Value = "Account_Take_4")]
            AccountTake4 = 4,
            
            /// <summary>
            /// Enum AccountTake5 for value: Account_Take_5
            /// </summary>
            [EnumMember(Value = "Account_Take_5")]
            AccountTake5 = 5,
            
            /// <summary>
            /// Enum AccountTake6 for value: Account_Take_6
            /// </summary>
            [EnumMember(Value = "Account_Take_6")]
            AccountTake6 = 6,
            
            /// <summary>
            /// Enum AccountTake7 for value: Account_Take_7
            /// </summary>
            [EnumMember(Value = "Account_Take_7")]
            AccountTake7 = 7,
            
            /// <summary>
            /// Enum Accountant for value: Accountant
            /// </summary>
            [EnumMember(Value = "Accountant")]
            Accountant = 8,
            
            /// <summary>
            /// Enum Auditor for value: Auditor
            /// </summary>
            [EnumMember(Value = "Auditor")]
            Auditor = 9,
            
            /// <summary>
            /// Enum CommunicationsOfficer for value: Communications_Officer
            /// </summary>
            [EnumMember(Value = "Communications_Officer")]
            CommunicationsOfficer = 10,
            
            /// <summary>
            /// Enum ConfigEquipment for value: Config_Equipment
            /// </summary>
            [EnumMember(Value = "Config_Equipment")]
            ConfigEquipment = 11,
            
            /// <summary>
            /// Enum ConfigStarbaseEquipment for value: Config_Starbase_Equipment
            /// </summary>
            [EnumMember(Value = "Config_Starbase_Equipment")]
            ConfigStarbaseEquipment = 12,
            
            /// <summary>
            /// Enum ContainerTake1 for value: Container_Take_1
            /// </summary>
            [EnumMember(Value = "Container_Take_1")]
            ContainerTake1 = 13,
            
            /// <summary>
            /// Enum ContainerTake2 for value: Container_Take_2
            /// </summary>
            [EnumMember(Value = "Container_Take_2")]
            ContainerTake2 = 14,
            
            /// <summary>
            /// Enum ContainerTake3 for value: Container_Take_3
            /// </summary>
            [EnumMember(Value = "Container_Take_3")]
            ContainerTake3 = 15,
            
            /// <summary>
            /// Enum ContainerTake4 for value: Container_Take_4
            /// </summary>
            [EnumMember(Value = "Container_Take_4")]
            ContainerTake4 = 16,
            
            /// <summary>
            /// Enum ContainerTake5 for value: Container_Take_5
            /// </summary>
            [EnumMember(Value = "Container_Take_5")]
            ContainerTake5 = 17,
            
            /// <summary>
            /// Enum ContainerTake6 for value: Container_Take_6
            /// </summary>
            [EnumMember(Value = "Container_Take_6")]
            ContainerTake6 = 18,
            
            /// <summary>
            /// Enum ContainerTake7 for value: Container_Take_7
            /// </summary>
            [EnumMember(Value = "Container_Take_7")]
            ContainerTake7 = 19,
            
            /// <summary>
            /// Enum ContractManager for value: Contract_Manager
            /// </summary>
            [EnumMember(Value = "Contract_Manager")]
            ContractManager = 20,
            
            /// <summary>
            /// Enum Diplomat for value: Diplomat
            /// </summary>
            [EnumMember(Value = "Diplomat")]
            Diplomat = 21,
            
            /// <summary>
            /// Enum Director for value: Director
            /// </summary>
            [EnumMember(Value = "Director")]
            Director = 22,
            
            /// <summary>
            /// Enum FactoryManager for value: Factory_Manager
            /// </summary>
            [EnumMember(Value = "Factory_Manager")]
            FactoryManager = 23,
            
            /// <summary>
            /// Enum FittingManager for value: Fitting_Manager
            /// </summary>
            [EnumMember(Value = "Fitting_Manager")]
            FittingManager = 24,
            
            /// <summary>
            /// Enum HangarQuery1 for value: Hangar_Query_1
            /// </summary>
            [EnumMember(Value = "Hangar_Query_1")]
            HangarQuery1 = 25,
            
            /// <summary>
            /// Enum HangarQuery2 for value: Hangar_Query_2
            /// </summary>
            [EnumMember(Value = "Hangar_Query_2")]
            HangarQuery2 = 26,
            
            /// <summary>
            /// Enum HangarQuery3 for value: Hangar_Query_3
            /// </summary>
            [EnumMember(Value = "Hangar_Query_3")]
            HangarQuery3 = 27,
            
            /// <summary>
            /// Enum HangarQuery4 for value: Hangar_Query_4
            /// </summary>
            [EnumMember(Value = "Hangar_Query_4")]
            HangarQuery4 = 28,
            
            /// <summary>
            /// Enum HangarQuery5 for value: Hangar_Query_5
            /// </summary>
            [EnumMember(Value = "Hangar_Query_5")]
            HangarQuery5 = 29,
            
            /// <summary>
            /// Enum HangarQuery6 for value: Hangar_Query_6
            /// </summary>
            [EnumMember(Value = "Hangar_Query_6")]
            HangarQuery6 = 30,
            
            /// <summary>
            /// Enum HangarQuery7 for value: Hangar_Query_7
            /// </summary>
            [EnumMember(Value = "Hangar_Query_7")]
            HangarQuery7 = 31,
            
            /// <summary>
            /// Enum HangarTake1 for value: Hangar_Take_1
            /// </summary>
            [EnumMember(Value = "Hangar_Take_1")]
            HangarTake1 = 32,
            
            /// <summary>
            /// Enum HangarTake2 for value: Hangar_Take_2
            /// </summary>
            [EnumMember(Value = "Hangar_Take_2")]
            HangarTake2 = 33,
            
            /// <summary>
            /// Enum HangarTake3 for value: Hangar_Take_3
            /// </summary>
            [EnumMember(Value = "Hangar_Take_3")]
            HangarTake3 = 34,
            
            /// <summary>
            /// Enum HangarTake4 for value: Hangar_Take_4
            /// </summary>
            [EnumMember(Value = "Hangar_Take_4")]
            HangarTake4 = 35,
            
            /// <summary>
            /// Enum HangarTake5 for value: Hangar_Take_5
            /// </summary>
            [EnumMember(Value = "Hangar_Take_5")]
            HangarTake5 = 36,
            
            /// <summary>
            /// Enum HangarTake6 for value: Hangar_Take_6
            /// </summary>
            [EnumMember(Value = "Hangar_Take_6")]
            HangarTake6 = 37,
            
            /// <summary>
            /// Enum HangarTake7 for value: Hangar_Take_7
            /// </summary>
            [EnumMember(Value = "Hangar_Take_7")]
            HangarTake7 = 38,
            
            /// <summary>
            /// Enum JuniorAccountant for value: Junior_Accountant
            /// </summary>
            [EnumMember(Value = "Junior_Accountant")]
            JuniorAccountant = 39,
            
            /// <summary>
            /// Enum PersonnelManager for value: Personnel_Manager
            /// </summary>
            [EnumMember(Value = "Personnel_Manager")]
            PersonnelManager = 40,
            
            /// <summary>
            /// Enum RentFactoryFacility for value: Rent_Factory_Facility
            /// </summary>
            [EnumMember(Value = "Rent_Factory_Facility")]
            RentFactoryFacility = 41,
            
            /// <summary>
            /// Enum RentOffice for value: Rent_Office
            /// </summary>
            [EnumMember(Value = "Rent_Office")]
            RentOffice = 42,
            
            /// <summary>
            /// Enum RentResearchFacility for value: Rent_Research_Facility
            /// </summary>
            [EnumMember(Value = "Rent_Research_Facility")]
            RentResearchFacility = 43,
            
            /// <summary>
            /// Enum SecurityOfficer for value: Security_Officer
            /// </summary>
            [EnumMember(Value = "Security_Officer")]
            SecurityOfficer = 44,
            
            /// <summary>
            /// Enum StarbaseDefenseOperator for value: Starbase_Defense_Operator
            /// </summary>
            [EnumMember(Value = "Starbase_Defense_Operator")]
            StarbaseDefenseOperator = 45,
            
            /// <summary>
            /// Enum StarbaseFuelTechnician for value: Starbase_Fuel_Technician
            /// </summary>
            [EnumMember(Value = "Starbase_Fuel_Technician")]
            StarbaseFuelTechnician = 46,
            
            /// <summary>
            /// Enum StationManager for value: Station_Manager
            /// </summary>
            [EnumMember(Value = "Station_Manager")]
            StationManager = 47,
            
            /// <summary>
            /// Enum TerrestrialCombatOfficer for value: Terrestrial_Combat_Officer
            /// </summary>
            [EnumMember(Value = "Terrestrial_Combat_Officer")]
            TerrestrialCombatOfficer = 48,
            
            /// <summary>
            /// Enum TerrestrialLogisticsOfficer for value: Terrestrial_Logistics_Officer
            /// </summary>
            [EnumMember(Value = "Terrestrial_Logistics_Officer")]
            TerrestrialLogisticsOfficer = 49,
            
            /// <summary>
            /// Enum Trader for value: Trader
            /// </summary>
            [EnumMember(Value = "Trader")]
            Trader = 50
        }


        /// <summary>
        /// new_roles array
        /// </summary>
        /// <value>new_roles array</value>
        [DataMember(Name="new_roles", EmitDefaultValue=false)]
        public List<NewRolesEnum> NewRoles { get; set; }
        /// <summary>
        /// old_role string
        /// </summary>
        /// <value>old_role string</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum OldRolesEnum
        {
            
            /// <summary>
            /// Enum AccountTake1 for value: Account_Take_1
            /// </summary>
            [EnumMember(Value = "Account_Take_1")]
            AccountTake1 = 1,
            
            /// <summary>
            /// Enum AccountTake2 for value: Account_Take_2
            /// </summary>
            [EnumMember(Value = "Account_Take_2")]
            AccountTake2 = 2,
            
            /// <summary>
            /// Enum AccountTake3 for value: Account_Take_3
            /// </summary>
            [EnumMember(Value = "Account_Take_3")]
            AccountTake3 = 3,
            
            /// <summary>
            /// Enum AccountTake4 for value: Account_Take_4
            /// </summary>
            [EnumMember(Value = "Account_Take_4")]
            AccountTake4 = 4,
            
            /// <summary>
            /// Enum AccountTake5 for value: Account_Take_5
            /// </summary>
            [EnumMember(Value = "Account_Take_5")]
            AccountTake5 = 5,
            
            /// <summary>
            /// Enum AccountTake6 for value: Account_Take_6
            /// </summary>
            [EnumMember(Value = "Account_Take_6")]
            AccountTake6 = 6,
            
            /// <summary>
            /// Enum AccountTake7 for value: Account_Take_7
            /// </summary>
            [EnumMember(Value = "Account_Take_7")]
            AccountTake7 = 7,
            
            /// <summary>
            /// Enum Accountant for value: Accountant
            /// </summary>
            [EnumMember(Value = "Accountant")]
            Accountant = 8,
            
            /// <summary>
            /// Enum Auditor for value: Auditor
            /// </summary>
            [EnumMember(Value = "Auditor")]
            Auditor = 9,
            
            /// <summary>
            /// Enum CommunicationsOfficer for value: Communications_Officer
            /// </summary>
            [EnumMember(Value = "Communications_Officer")]
            CommunicationsOfficer = 10,
            
            /// <summary>
            /// Enum ConfigEquipment for value: Config_Equipment
            /// </summary>
            [EnumMember(Value = "Config_Equipment")]
            ConfigEquipment = 11,
            
            /// <summary>
            /// Enum ConfigStarbaseEquipment for value: Config_Starbase_Equipment
            /// </summary>
            [EnumMember(Value = "Config_Starbase_Equipment")]
            ConfigStarbaseEquipment = 12,
            
            /// <summary>
            /// Enum ContainerTake1 for value: Container_Take_1
            /// </summary>
            [EnumMember(Value = "Container_Take_1")]
            ContainerTake1 = 13,
            
            /// <summary>
            /// Enum ContainerTake2 for value: Container_Take_2
            /// </summary>
            [EnumMember(Value = "Container_Take_2")]
            ContainerTake2 = 14,
            
            /// <summary>
            /// Enum ContainerTake3 for value: Container_Take_3
            /// </summary>
            [EnumMember(Value = "Container_Take_3")]
            ContainerTake3 = 15,
            
            /// <summary>
            /// Enum ContainerTake4 for value: Container_Take_4
            /// </summary>
            [EnumMember(Value = "Container_Take_4")]
            ContainerTake4 = 16,
            
            /// <summary>
            /// Enum ContainerTake5 for value: Container_Take_5
            /// </summary>
            [EnumMember(Value = "Container_Take_5")]
            ContainerTake5 = 17,
            
            /// <summary>
            /// Enum ContainerTake6 for value: Container_Take_6
            /// </summary>
            [EnumMember(Value = "Container_Take_6")]
            ContainerTake6 = 18,
            
            /// <summary>
            /// Enum ContainerTake7 for value: Container_Take_7
            /// </summary>
            [EnumMember(Value = "Container_Take_7")]
            ContainerTake7 = 19,
            
            /// <summary>
            /// Enum ContractManager for value: Contract_Manager
            /// </summary>
            [EnumMember(Value = "Contract_Manager")]
            ContractManager = 20,
            
            /// <summary>
            /// Enum Diplomat for value: Diplomat
            /// </summary>
            [EnumMember(Value = "Diplomat")]
            Diplomat = 21,
            
            /// <summary>
            /// Enum Director for value: Director
            /// </summary>
            [EnumMember(Value = "Director")]
            Director = 22,
            
            /// <summary>
            /// Enum FactoryManager for value: Factory_Manager
            /// </summary>
            [EnumMember(Value = "Factory_Manager")]
            FactoryManager = 23,
            
            /// <summary>
            /// Enum FittingManager for value: Fitting_Manager
            /// </summary>
            [EnumMember(Value = "Fitting_Manager")]
            FittingManager = 24,
            
            /// <summary>
            /// Enum HangarQuery1 for value: Hangar_Query_1
            /// </summary>
            [EnumMember(Value = "Hangar_Query_1")]
            HangarQuery1 = 25,
            
            /// <summary>
            /// Enum HangarQuery2 for value: Hangar_Query_2
            /// </summary>
            [EnumMember(Value = "Hangar_Query_2")]
            HangarQuery2 = 26,
            
            /// <summary>
            /// Enum HangarQuery3 for value: Hangar_Query_3
            /// </summary>
            [EnumMember(Value = "Hangar_Query_3")]
            HangarQuery3 = 27,
            
            /// <summary>
            /// Enum HangarQuery4 for value: Hangar_Query_4
            /// </summary>
            [EnumMember(Value = "Hangar_Query_4")]
            HangarQuery4 = 28,
            
            /// <summary>
            /// Enum HangarQuery5 for value: Hangar_Query_5
            /// </summary>
            [EnumMember(Value = "Hangar_Query_5")]
            HangarQuery5 = 29,
            
            /// <summary>
            /// Enum HangarQuery6 for value: Hangar_Query_6
            /// </summary>
            [EnumMember(Value = "Hangar_Query_6")]
            HangarQuery6 = 30,
            
            /// <summary>
            /// Enum HangarQuery7 for value: Hangar_Query_7
            /// </summary>
            [EnumMember(Value = "Hangar_Query_7")]
            HangarQuery7 = 31,
            
            /// <summary>
            /// Enum HangarTake1 for value: Hangar_Take_1
            /// </summary>
            [EnumMember(Value = "Hangar_Take_1")]
            HangarTake1 = 32,
            
            /// <summary>
            /// Enum HangarTake2 for value: Hangar_Take_2
            /// </summary>
            [EnumMember(Value = "Hangar_Take_2")]
            HangarTake2 = 33,
            
            /// <summary>
            /// Enum HangarTake3 for value: Hangar_Take_3
            /// </summary>
            [EnumMember(Value = "Hangar_Take_3")]
            HangarTake3 = 34,
            
            /// <summary>
            /// Enum HangarTake4 for value: Hangar_Take_4
            /// </summary>
            [EnumMember(Value = "Hangar_Take_4")]
            HangarTake4 = 35,
            
            /// <summary>
            /// Enum HangarTake5 for value: Hangar_Take_5
            /// </summary>
            [EnumMember(Value = "Hangar_Take_5")]
            HangarTake5 = 36,
            
            /// <summary>
            /// Enum HangarTake6 for value: Hangar_Take_6
            /// </summary>
            [EnumMember(Value = "Hangar_Take_6")]
            HangarTake6 = 37,
            
            /// <summary>
            /// Enum HangarTake7 for value: Hangar_Take_7
            /// </summary>
            [EnumMember(Value = "Hangar_Take_7")]
            HangarTake7 = 38,
            
            /// <summary>
            /// Enum JuniorAccountant for value: Junior_Accountant
            /// </summary>
            [EnumMember(Value = "Junior_Accountant")]
            JuniorAccountant = 39,
            
            /// <summary>
            /// Enum PersonnelManager for value: Personnel_Manager
            /// </summary>
            [EnumMember(Value = "Personnel_Manager")]
            PersonnelManager = 40,
            
            /// <summary>
            /// Enum RentFactoryFacility for value: Rent_Factory_Facility
            /// </summary>
            [EnumMember(Value = "Rent_Factory_Facility")]
            RentFactoryFacility = 41,
            
            /// <summary>
            /// Enum RentOffice for value: Rent_Office
            /// </summary>
            [EnumMember(Value = "Rent_Office")]
            RentOffice = 42,
            
            /// <summary>
            /// Enum RentResearchFacility for value: Rent_Research_Facility
            /// </summary>
            [EnumMember(Value = "Rent_Research_Facility")]
            RentResearchFacility = 43,
            
            /// <summary>
            /// Enum SecurityOfficer for value: Security_Officer
            /// </summary>
            [EnumMember(Value = "Security_Officer")]
            SecurityOfficer = 44,
            
            /// <summary>
            /// Enum StarbaseDefenseOperator for value: Starbase_Defense_Operator
            /// </summary>
            [EnumMember(Value = "Starbase_Defense_Operator")]
            StarbaseDefenseOperator = 45,
            
            /// <summary>
            /// Enum StarbaseFuelTechnician for value: Starbase_Fuel_Technician
            /// </summary>
            [EnumMember(Value = "Starbase_Fuel_Technician")]
            StarbaseFuelTechnician = 46,
            
            /// <summary>
            /// Enum StationManager for value: Station_Manager
            /// </summary>
            [EnumMember(Value = "Station_Manager")]
            StationManager = 47,
            
            /// <summary>
            /// Enum TerrestrialCombatOfficer for value: Terrestrial_Combat_Officer
            /// </summary>
            [EnumMember(Value = "Terrestrial_Combat_Officer")]
            TerrestrialCombatOfficer = 48,
            
            /// <summary>
            /// Enum TerrestrialLogisticsOfficer for value: Terrestrial_Logistics_Officer
            /// </summary>
            [EnumMember(Value = "Terrestrial_Logistics_Officer")]
            TerrestrialLogisticsOfficer = 49,
            
            /// <summary>
            /// Enum Trader for value: Trader
            /// </summary>
            [EnumMember(Value = "Trader")]
            Trader = 50
        }


        /// <summary>
        /// old_roles array
        /// </summary>
        /// <value>old_roles array</value>
        [DataMember(Name="old_roles", EmitDefaultValue=false)]
        public List<OldRolesEnum> OldRoles { get; set; }
        /// <summary>
        /// role_type string
        /// </summary>
        /// <value>role_type string</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum RoleTypeEnum
        {
            
            /// <summary>
            /// Enum Grantableroles for value: grantable_roles
            /// </summary>
            [EnumMember(Value = "grantable_roles")]
            Grantableroles = 1,
            
            /// <summary>
            /// Enum Grantablerolesatbase for value: grantable_roles_at_base
            /// </summary>
            [EnumMember(Value = "grantable_roles_at_base")]
            Grantablerolesatbase = 2,
            
            /// <summary>
            /// Enum Grantablerolesathq for value: grantable_roles_at_hq
            /// </summary>
            [EnumMember(Value = "grantable_roles_at_hq")]
            Grantablerolesathq = 3,
            
            /// <summary>
            /// Enum Grantablerolesatother for value: grantable_roles_at_other
            /// </summary>
            [EnumMember(Value = "grantable_roles_at_other")]
            Grantablerolesatother = 4,
            
            /// <summary>
            /// Enum Roles for value: roles
            /// </summary>
            [EnumMember(Value = "roles")]
            Roles = 5,
            
            /// <summary>
            /// Enum Rolesatbase for value: roles_at_base
            /// </summary>
            [EnumMember(Value = "roles_at_base")]
            Rolesatbase = 6,
            
            /// <summary>
            /// Enum Rolesathq for value: roles_at_hq
            /// </summary>
            [EnumMember(Value = "roles_at_hq")]
            Rolesathq = 7,
            
            /// <summary>
            /// Enum Rolesatother for value: roles_at_other
            /// </summary>
            [EnumMember(Value = "roles_at_other")]
            Rolesatother = 8
        }

        /// <summary>
        /// role_type string
        /// </summary>
        /// <value>role_type string</value>
        [DataMember(Name="role_type", EmitDefaultValue=false)]
        public RoleTypeEnum RoleType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetCorporationsCorporationIdRolesHistory200Ok" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetCorporationsCorporationIdRolesHistory200Ok() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetCorporationsCorporationIdRolesHistory200Ok" /> class.
        /// </summary>
        /// <param name="changedAt">changed_at string (required).</param>
        /// <param name="characterId">The character whose roles are changed (required).</param>
        /// <param name="issuerId">ID of the character who issued this change (required).</param>
        /// <param name="newRoles">new_roles array (required).</param>
        /// <param name="oldRoles">old_roles array (required).</param>
        /// <param name="roleType">role_type string (required).</param>
        public GetCorporationsCorporationIdRolesHistory200Ok(DateTime? changedAt = default(DateTime?), int? characterId = default(int?), int? issuerId = default(int?), List<NewRolesEnum> newRoles = default(List<NewRolesEnum>), List<OldRolesEnum> oldRoles = default(List<OldRolesEnum>), RoleTypeEnum roleType = default(RoleTypeEnum))
        {
            // to ensure "changedAt" is required (not null)
            if (changedAt == null)
            {
                throw new InvalidDataException("changedAt is a required property for GetCorporationsCorporationIdRolesHistory200Ok and cannot be null");
            }
            else
            {
                this.ChangedAt = changedAt;
            }
            // to ensure "characterId" is required (not null)
            if (characterId == null)
            {
                throw new InvalidDataException("characterId is a required property for GetCorporationsCorporationIdRolesHistory200Ok and cannot be null");
            }
            else
            {
                this.CharacterId = characterId;
            }
            // to ensure "issuerId" is required (not null)
            if (issuerId == null)
            {
                throw new InvalidDataException("issuerId is a required property for GetCorporationsCorporationIdRolesHistory200Ok and cannot be null");
            }
            else
            {
                this.IssuerId = issuerId;
            }
            // to ensure "newRoles" is required (not null)
            if (newRoles == null)
            {
                throw new InvalidDataException("newRoles is a required property for GetCorporationsCorporationIdRolesHistory200Ok and cannot be null");
            }
            else
            {
                this.NewRoles = newRoles;
            }
            // to ensure "oldRoles" is required (not null)
            if (oldRoles == null)
            {
                throw new InvalidDataException("oldRoles is a required property for GetCorporationsCorporationIdRolesHistory200Ok and cannot be null");
            }
            else
            {
                this.OldRoles = oldRoles;
            }
            // to ensure "roleType" is required (not null)
            if (roleType == null)
            {
                throw new InvalidDataException("roleType is a required property for GetCorporationsCorporationIdRolesHistory200Ok and cannot be null");
            }
            else
            {
                this.RoleType = roleType;
            }
        }
        
        /// <summary>
        /// changed_at string
        /// </summary>
        /// <value>changed_at string</value>
        [DataMember(Name="changed_at", EmitDefaultValue=false)]
        public DateTime? ChangedAt { get; set; }

        /// <summary>
        /// The character whose roles are changed
        /// </summary>
        /// <value>The character whose roles are changed</value>
        [DataMember(Name="character_id", EmitDefaultValue=false)]
        public int? CharacterId { get; set; }

        /// <summary>
        /// ID of the character who issued this change
        /// </summary>
        /// <value>ID of the character who issued this change</value>
        [DataMember(Name="issuer_id", EmitDefaultValue=false)]
        public int? IssuerId { get; set; }




        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetCorporationsCorporationIdRolesHistory200Ok {\n");
            sb.Append("  ChangedAt: ").Append(ChangedAt).Append("\n");
            sb.Append("  CharacterId: ").Append(CharacterId).Append("\n");
            sb.Append("  IssuerId: ").Append(IssuerId).Append("\n");
            sb.Append("  NewRoles: ").Append(NewRoles).Append("\n");
            sb.Append("  OldRoles: ").Append(OldRoles).Append("\n");
            sb.Append("  RoleType: ").Append(RoleType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetCorporationsCorporationIdRolesHistory200Ok);
        }

        /// <summary>
        /// Returns true if GetCorporationsCorporationIdRolesHistory200Ok instances are equal
        /// </summary>
        /// <param name="input">Instance of GetCorporationsCorporationIdRolesHistory200Ok to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetCorporationsCorporationIdRolesHistory200Ok input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ChangedAt == input.ChangedAt ||
                    (this.ChangedAt != null &&
                    this.ChangedAt.Equals(input.ChangedAt))
                ) && 
                (
                    this.CharacterId == input.CharacterId ||
                    (this.CharacterId != null &&
                    this.CharacterId.Equals(input.CharacterId))
                ) && 
                (
                    this.IssuerId == input.IssuerId ||
                    (this.IssuerId != null &&
                    this.IssuerId.Equals(input.IssuerId))
                ) && 
                (
                    this.NewRoles == input.NewRoles ||
                    this.NewRoles != null &&
                    this.NewRoles.SequenceEqual(input.NewRoles)
                ) && 
                (
                    this.OldRoles == input.OldRoles ||
                    this.OldRoles != null &&
                    this.OldRoles.SequenceEqual(input.OldRoles)
                ) && 
                (
                    this.RoleType == input.RoleType ||
                    (this.RoleType != null &&
                    this.RoleType.Equals(input.RoleType))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ChangedAt != null)
                    hashCode = hashCode * 59 + this.ChangedAt.GetHashCode();
                if (this.CharacterId != null)
                    hashCode = hashCode * 59 + this.CharacterId.GetHashCode();
                if (this.IssuerId != null)
                    hashCode = hashCode * 59 + this.IssuerId.GetHashCode();
                if (this.NewRoles != null)
                    hashCode = hashCode * 59 + this.NewRoles.GetHashCode();
                if (this.OldRoles != null)
                    hashCode = hashCode * 59 + this.OldRoles.GetHashCode();
                if (this.RoleType != null)
                    hashCode = hashCode * 59 + this.RoleType.GetHashCode();
                return hashCode;
            }
        }
    }

}
