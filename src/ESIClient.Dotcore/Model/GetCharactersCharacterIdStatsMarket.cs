/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.8.5
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = ESIClient.Dotcore.Client.SwaggerDateConverter;

namespace ESIClient.Dotcore.Model
{
    /// <summary>
    /// market object
    /// </summary>
    [DataContract]
    public partial class GetCharactersCharacterIdStatsMarket :  IEquatable<GetCharactersCharacterIdStatsMarket>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetCharactersCharacterIdStatsMarket" /> class.
        /// </summary>
        /// <param name="acceptContractsCourier">accept_contracts_courier integer.</param>
        /// <param name="acceptContractsItemExchange">accept_contracts_item_exchange integer.</param>
        /// <param name="buyOrdersPlaced">buy_orders_placed integer.</param>
        /// <param name="cancelMarketOrder">cancel_market_order integer.</param>
        /// <param name="createContractsAuction">create_contracts_auction integer.</param>
        /// <param name="createContractsCourier">create_contracts_courier integer.</param>
        /// <param name="createContractsItemExchange">create_contracts_item_exchange integer.</param>
        /// <param name="deliverCourierContract">deliver_courier_contract integer.</param>
        /// <param name="iskGained">isk_gained integer.</param>
        /// <param name="iskSpent">isk_spent integer.</param>
        /// <param name="modifyMarketOrder">modify_market_order integer.</param>
        /// <param name="searchContracts">search_contracts integer.</param>
        /// <param name="sellOrdersPlaced">sell_orders_placed integer.</param>
        public GetCharactersCharacterIdStatsMarket(long? acceptContractsCourier = default(long?), long? acceptContractsItemExchange = default(long?), long? buyOrdersPlaced = default(long?), long? cancelMarketOrder = default(long?), long? createContractsAuction = default(long?), long? createContractsCourier = default(long?), long? createContractsItemExchange = default(long?), long? deliverCourierContract = default(long?), long? iskGained = default(long?), long? iskSpent = default(long?), long? modifyMarketOrder = default(long?), long? searchContracts = default(long?), long? sellOrdersPlaced = default(long?))
        {
            this.AcceptContractsCourier = acceptContractsCourier;
            this.AcceptContractsItemExchange = acceptContractsItemExchange;
            this.BuyOrdersPlaced = buyOrdersPlaced;
            this.CancelMarketOrder = cancelMarketOrder;
            this.CreateContractsAuction = createContractsAuction;
            this.CreateContractsCourier = createContractsCourier;
            this.CreateContractsItemExchange = createContractsItemExchange;
            this.DeliverCourierContract = deliverCourierContract;
            this.IskGained = iskGained;
            this.IskSpent = iskSpent;
            this.ModifyMarketOrder = modifyMarketOrder;
            this.SearchContracts = searchContracts;
            this.SellOrdersPlaced = sellOrdersPlaced;
        }
        
        /// <summary>
        /// accept_contracts_courier integer
        /// </summary>
        /// <value>accept_contracts_courier integer</value>
        [DataMember(Name="accept_contracts_courier", EmitDefaultValue=false)]
        public long? AcceptContractsCourier { get; set; }

        /// <summary>
        /// accept_contracts_item_exchange integer
        /// </summary>
        /// <value>accept_contracts_item_exchange integer</value>
        [DataMember(Name="accept_contracts_item_exchange", EmitDefaultValue=false)]
        public long? AcceptContractsItemExchange { get; set; }

        /// <summary>
        /// buy_orders_placed integer
        /// </summary>
        /// <value>buy_orders_placed integer</value>
        [DataMember(Name="buy_orders_placed", EmitDefaultValue=false)]
        public long? BuyOrdersPlaced { get; set; }

        /// <summary>
        /// cancel_market_order integer
        /// </summary>
        /// <value>cancel_market_order integer</value>
        [DataMember(Name="cancel_market_order", EmitDefaultValue=false)]
        public long? CancelMarketOrder { get; set; }

        /// <summary>
        /// create_contracts_auction integer
        /// </summary>
        /// <value>create_contracts_auction integer</value>
        [DataMember(Name="create_contracts_auction", EmitDefaultValue=false)]
        public long? CreateContractsAuction { get; set; }

        /// <summary>
        /// create_contracts_courier integer
        /// </summary>
        /// <value>create_contracts_courier integer</value>
        [DataMember(Name="create_contracts_courier", EmitDefaultValue=false)]
        public long? CreateContractsCourier { get; set; }

        /// <summary>
        /// create_contracts_item_exchange integer
        /// </summary>
        /// <value>create_contracts_item_exchange integer</value>
        [DataMember(Name="create_contracts_item_exchange", EmitDefaultValue=false)]
        public long? CreateContractsItemExchange { get; set; }

        /// <summary>
        /// deliver_courier_contract integer
        /// </summary>
        /// <value>deliver_courier_contract integer</value>
        [DataMember(Name="deliver_courier_contract", EmitDefaultValue=false)]
        public long? DeliverCourierContract { get; set; }

        /// <summary>
        /// isk_gained integer
        /// </summary>
        /// <value>isk_gained integer</value>
        [DataMember(Name="isk_gained", EmitDefaultValue=false)]
        public long? IskGained { get; set; }

        /// <summary>
        /// isk_spent integer
        /// </summary>
        /// <value>isk_spent integer</value>
        [DataMember(Name="isk_spent", EmitDefaultValue=false)]
        public long? IskSpent { get; set; }

        /// <summary>
        /// modify_market_order integer
        /// </summary>
        /// <value>modify_market_order integer</value>
        [DataMember(Name="modify_market_order", EmitDefaultValue=false)]
        public long? ModifyMarketOrder { get; set; }

        /// <summary>
        /// search_contracts integer
        /// </summary>
        /// <value>search_contracts integer</value>
        [DataMember(Name="search_contracts", EmitDefaultValue=false)]
        public long? SearchContracts { get; set; }

        /// <summary>
        /// sell_orders_placed integer
        /// </summary>
        /// <value>sell_orders_placed integer</value>
        [DataMember(Name="sell_orders_placed", EmitDefaultValue=false)]
        public long? SellOrdersPlaced { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetCharactersCharacterIdStatsMarket {\n");
            sb.Append("  AcceptContractsCourier: ").Append(AcceptContractsCourier).Append("\n");
            sb.Append("  AcceptContractsItemExchange: ").Append(AcceptContractsItemExchange).Append("\n");
            sb.Append("  BuyOrdersPlaced: ").Append(BuyOrdersPlaced).Append("\n");
            sb.Append("  CancelMarketOrder: ").Append(CancelMarketOrder).Append("\n");
            sb.Append("  CreateContractsAuction: ").Append(CreateContractsAuction).Append("\n");
            sb.Append("  CreateContractsCourier: ").Append(CreateContractsCourier).Append("\n");
            sb.Append("  CreateContractsItemExchange: ").Append(CreateContractsItemExchange).Append("\n");
            sb.Append("  DeliverCourierContract: ").Append(DeliverCourierContract).Append("\n");
            sb.Append("  IskGained: ").Append(IskGained).Append("\n");
            sb.Append("  IskSpent: ").Append(IskSpent).Append("\n");
            sb.Append("  ModifyMarketOrder: ").Append(ModifyMarketOrder).Append("\n");
            sb.Append("  SearchContracts: ").Append(SearchContracts).Append("\n");
            sb.Append("  SellOrdersPlaced: ").Append(SellOrdersPlaced).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetCharactersCharacterIdStatsMarket);
        }

        /// <summary>
        /// Returns true if GetCharactersCharacterIdStatsMarket instances are equal
        /// </summary>
        /// <param name="input">Instance of GetCharactersCharacterIdStatsMarket to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetCharactersCharacterIdStatsMarket input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AcceptContractsCourier == input.AcceptContractsCourier ||
                    (this.AcceptContractsCourier != null &&
                    this.AcceptContractsCourier.Equals(input.AcceptContractsCourier))
                ) && 
                (
                    this.AcceptContractsItemExchange == input.AcceptContractsItemExchange ||
                    (this.AcceptContractsItemExchange != null &&
                    this.AcceptContractsItemExchange.Equals(input.AcceptContractsItemExchange))
                ) && 
                (
                    this.BuyOrdersPlaced == input.BuyOrdersPlaced ||
                    (this.BuyOrdersPlaced != null &&
                    this.BuyOrdersPlaced.Equals(input.BuyOrdersPlaced))
                ) && 
                (
                    this.CancelMarketOrder == input.CancelMarketOrder ||
                    (this.CancelMarketOrder != null &&
                    this.CancelMarketOrder.Equals(input.CancelMarketOrder))
                ) && 
                (
                    this.CreateContractsAuction == input.CreateContractsAuction ||
                    (this.CreateContractsAuction != null &&
                    this.CreateContractsAuction.Equals(input.CreateContractsAuction))
                ) && 
                (
                    this.CreateContractsCourier == input.CreateContractsCourier ||
                    (this.CreateContractsCourier != null &&
                    this.CreateContractsCourier.Equals(input.CreateContractsCourier))
                ) && 
                (
                    this.CreateContractsItemExchange == input.CreateContractsItemExchange ||
                    (this.CreateContractsItemExchange != null &&
                    this.CreateContractsItemExchange.Equals(input.CreateContractsItemExchange))
                ) && 
                (
                    this.DeliverCourierContract == input.DeliverCourierContract ||
                    (this.DeliverCourierContract != null &&
                    this.DeliverCourierContract.Equals(input.DeliverCourierContract))
                ) && 
                (
                    this.IskGained == input.IskGained ||
                    (this.IskGained != null &&
                    this.IskGained.Equals(input.IskGained))
                ) && 
                (
                    this.IskSpent == input.IskSpent ||
                    (this.IskSpent != null &&
                    this.IskSpent.Equals(input.IskSpent))
                ) && 
                (
                    this.ModifyMarketOrder == input.ModifyMarketOrder ||
                    (this.ModifyMarketOrder != null &&
                    this.ModifyMarketOrder.Equals(input.ModifyMarketOrder))
                ) && 
                (
                    this.SearchContracts == input.SearchContracts ||
                    (this.SearchContracts != null &&
                    this.SearchContracts.Equals(input.SearchContracts))
                ) && 
                (
                    this.SellOrdersPlaced == input.SellOrdersPlaced ||
                    (this.SellOrdersPlaced != null &&
                    this.SellOrdersPlaced.Equals(input.SellOrdersPlaced))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AcceptContractsCourier != null)
                    hashCode = hashCode * 59 + this.AcceptContractsCourier.GetHashCode();
                if (this.AcceptContractsItemExchange != null)
                    hashCode = hashCode * 59 + this.AcceptContractsItemExchange.GetHashCode();
                if (this.BuyOrdersPlaced != null)
                    hashCode = hashCode * 59 + this.BuyOrdersPlaced.GetHashCode();
                if (this.CancelMarketOrder != null)
                    hashCode = hashCode * 59 + this.CancelMarketOrder.GetHashCode();
                if (this.CreateContractsAuction != null)
                    hashCode = hashCode * 59 + this.CreateContractsAuction.GetHashCode();
                if (this.CreateContractsCourier != null)
                    hashCode = hashCode * 59 + this.CreateContractsCourier.GetHashCode();
                if (this.CreateContractsItemExchange != null)
                    hashCode = hashCode * 59 + this.CreateContractsItemExchange.GetHashCode();
                if (this.DeliverCourierContract != null)
                    hashCode = hashCode * 59 + this.DeliverCourierContract.GetHashCode();
                if (this.IskGained != null)
                    hashCode = hashCode * 59 + this.IskGained.GetHashCode();
                if (this.IskSpent != null)
                    hashCode = hashCode * 59 + this.IskSpent.GetHashCode();
                if (this.ModifyMarketOrder != null)
                    hashCode = hashCode * 59 + this.ModifyMarketOrder.GetHashCode();
                if (this.SearchContracts != null)
                    hashCode = hashCode * 59 + this.SearchContracts.GetHashCode();
                if (this.SellOrdersPlaced != null)
                    hashCode = hashCode * 59 + this.SellOrdersPlaced.GetHashCode();
                return hashCode;
            }
        }
    }

}
