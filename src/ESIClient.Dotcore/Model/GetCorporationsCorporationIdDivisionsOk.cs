/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.8.5
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = ESIClient.Dotcore.Client.SwaggerDateConverter;

namespace ESIClient.Dotcore.Model
{
    /// <summary>
    /// 200 ok object
    /// </summary>
    [DataContract]
    public partial class GetCorporationsCorporationIdDivisionsOk :  IEquatable<GetCorporationsCorporationIdDivisionsOk>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetCorporationsCorporationIdDivisionsOk" /> class.
        /// </summary>
        /// <param name="hangar">hangar array.</param>
        /// <param name="wallet">wallet array.</param>
        public GetCorporationsCorporationIdDivisionsOk(List<GetCorporationsCorporationIdDivisionsHangarHangar> hangar = default(List<GetCorporationsCorporationIdDivisionsHangarHangar>), List<GetCorporationsCorporationIdDivisionsWalletWallet> wallet = default(List<GetCorporationsCorporationIdDivisionsWalletWallet>))
        {
            this.Hangar = hangar;
            this.Wallet = wallet;
        }
        
        /// <summary>
        /// hangar array
        /// </summary>
        /// <value>hangar array</value>
        [DataMember(Name="hangar", EmitDefaultValue=false)]
        public List<GetCorporationsCorporationIdDivisionsHangarHangar> Hangar { get; set; }

        /// <summary>
        /// wallet array
        /// </summary>
        /// <value>wallet array</value>
        [DataMember(Name="wallet", EmitDefaultValue=false)]
        public List<GetCorporationsCorporationIdDivisionsWalletWallet> Wallet { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetCorporationsCorporationIdDivisionsOk {\n");
            sb.Append("  Hangar: ").Append(Hangar).Append("\n");
            sb.Append("  Wallet: ").Append(Wallet).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetCorporationsCorporationIdDivisionsOk);
        }

        /// <summary>
        /// Returns true if GetCorporationsCorporationIdDivisionsOk instances are equal
        /// </summary>
        /// <param name="input">Instance of GetCorporationsCorporationIdDivisionsOk to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetCorporationsCorporationIdDivisionsOk input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Hangar == input.Hangar ||
                    this.Hangar != null &&
                    this.Hangar.SequenceEqual(input.Hangar)
                ) && 
                (
                    this.Wallet == input.Wallet ||
                    this.Wallet != null &&
                    this.Wallet.SequenceEqual(input.Wallet)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Hangar != null)
                    hashCode = hashCode * 59 + this.Hangar.GetHashCode();
                if (this.Wallet != null)
                    hashCode = hashCode * 59 + this.Wallet.GetHashCode();
                return hashCode;
            }
        }
    }

}
