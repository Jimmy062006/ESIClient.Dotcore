/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.7.5
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ESIClient.Client.SwaggerDateConverter;

namespace ESIClient.Model
{
    /// <summary>
    /// 200 ok object
    /// </summary>
    [DataContract]
    public partial class GetCorporationsCorporationIdMembertracking200Ok :  IEquatable<GetCorporationsCorporationIdMembertracking200Ok>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetCorporationsCorporationIdMembertracking200Ok" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetCorporationsCorporationIdMembertracking200Ok() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetCorporationsCorporationIdMembertracking200Ok" /> class.
        /// </summary>
        /// <param name="characterId">character_id integer (required).</param>
        /// <param name="startDate">start_date string.</param>
        /// <param name="baseId">base_id integer.</param>
        /// <param name="logonDate">logon_date string.</param>
        /// <param name="logoffDate">logoff_date string.</param>
        /// <param name="locationId">location_id integer.</param>
        /// <param name="shipTypeId">ship_type_id integer.</param>
        public GetCorporationsCorporationIdMembertracking200Ok(int? characterId = default(int?), DateTime? startDate = default(DateTime?), int? baseId = default(int?), DateTime? logonDate = default(DateTime?), DateTime? logoffDate = default(DateTime?), long? locationId = default(long?), int? shipTypeId = default(int?))
        {
            // to ensure "characterId" is required (not null)
            if (characterId == null)
            {
                throw new InvalidDataException("characterId is a required property for GetCorporationsCorporationIdMembertracking200Ok and cannot be null");
            }
            else
            {
                this.CharacterId = characterId;
            }
            this.StartDate = startDate;
            this.BaseId = baseId;
            this.LogonDate = logonDate;
            this.LogoffDate = logoffDate;
            this.LocationId = locationId;
            this.ShipTypeId = shipTypeId;
        }
        
        /// <summary>
        /// character_id integer
        /// </summary>
        /// <value>character_id integer</value>
        [DataMember(Name="character_id", EmitDefaultValue=false)]
        public int? CharacterId { get; set; }

        /// <summary>
        /// start_date string
        /// </summary>
        /// <value>start_date string</value>
        [DataMember(Name="start_date", EmitDefaultValue=false)]
        public DateTime? StartDate { get; set; }

        /// <summary>
        /// base_id integer
        /// </summary>
        /// <value>base_id integer</value>
        [DataMember(Name="base_id", EmitDefaultValue=false)]
        public int? BaseId { get; set; }

        /// <summary>
        /// logon_date string
        /// </summary>
        /// <value>logon_date string</value>
        [DataMember(Name="logon_date", EmitDefaultValue=false)]
        public DateTime? LogonDate { get; set; }

        /// <summary>
        /// logoff_date string
        /// </summary>
        /// <value>logoff_date string</value>
        [DataMember(Name="logoff_date", EmitDefaultValue=false)]
        public DateTime? LogoffDate { get; set; }

        /// <summary>
        /// location_id integer
        /// </summary>
        /// <value>location_id integer</value>
        [DataMember(Name="location_id", EmitDefaultValue=false)]
        public long? LocationId { get; set; }

        /// <summary>
        /// ship_type_id integer
        /// </summary>
        /// <value>ship_type_id integer</value>
        [DataMember(Name="ship_type_id", EmitDefaultValue=false)]
        public int? ShipTypeId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetCorporationsCorporationIdMembertracking200Ok {\n");
            sb.Append("  CharacterId: ").Append(CharacterId).Append("\n");
            sb.Append("  StartDate: ").Append(StartDate).Append("\n");
            sb.Append("  BaseId: ").Append(BaseId).Append("\n");
            sb.Append("  LogonDate: ").Append(LogonDate).Append("\n");
            sb.Append("  LogoffDate: ").Append(LogoffDate).Append("\n");
            sb.Append("  LocationId: ").Append(LocationId).Append("\n");
            sb.Append("  ShipTypeId: ").Append(ShipTypeId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetCorporationsCorporationIdMembertracking200Ok);
        }

        /// <summary>
        /// Returns true if GetCorporationsCorporationIdMembertracking200Ok instances are equal
        /// </summary>
        /// <param name="input">Instance of GetCorporationsCorporationIdMembertracking200Ok to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetCorporationsCorporationIdMembertracking200Ok input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CharacterId == input.CharacterId ||
                    (this.CharacterId != null &&
                    this.CharacterId.Equals(input.CharacterId))
                ) && 
                (
                    this.StartDate == input.StartDate ||
                    (this.StartDate != null &&
                    this.StartDate.Equals(input.StartDate))
                ) && 
                (
                    this.BaseId == input.BaseId ||
                    (this.BaseId != null &&
                    this.BaseId.Equals(input.BaseId))
                ) && 
                (
                    this.LogonDate == input.LogonDate ||
                    (this.LogonDate != null &&
                    this.LogonDate.Equals(input.LogonDate))
                ) && 
                (
                    this.LogoffDate == input.LogoffDate ||
                    (this.LogoffDate != null &&
                    this.LogoffDate.Equals(input.LogoffDate))
                ) && 
                (
                    this.LocationId == input.LocationId ||
                    (this.LocationId != null &&
                    this.LocationId.Equals(input.LocationId))
                ) && 
                (
                    this.ShipTypeId == input.ShipTypeId ||
                    (this.ShipTypeId != null &&
                    this.ShipTypeId.Equals(input.ShipTypeId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CharacterId != null)
                    hashCode = hashCode * 59 + this.CharacterId.GetHashCode();
                if (this.StartDate != null)
                    hashCode = hashCode * 59 + this.StartDate.GetHashCode();
                if (this.BaseId != null)
                    hashCode = hashCode * 59 + this.BaseId.GetHashCode();
                if (this.LogonDate != null)
                    hashCode = hashCode * 59 + this.LogonDate.GetHashCode();
                if (this.LogoffDate != null)
                    hashCode = hashCode * 59 + this.LogoffDate.GetHashCode();
                if (this.LocationId != null)
                    hashCode = hashCode * 59 + this.LocationId.GetHashCode();
                if (this.ShipTypeId != null)
                    hashCode = hashCode * 59 + this.ShipTypeId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
