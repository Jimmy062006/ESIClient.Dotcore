/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.7.5
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ESIClient.Client.SwaggerDateConverter;

namespace ESIClient.Model
{
    /// <summary>
    /// module object
    /// </summary>
    [DataContract]
    public partial class GetCharactersCharacterIdStatsModule :  IEquatable<GetCharactersCharacterIdStatsModule>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetCharactersCharacterIdStatsModule" /> class.
        /// </summary>
        /// <param name="activationsArmorHardener">activations_armor_hardener integer.</param>
        /// <param name="activationsArmorRepairUnit">activations_armor_repair_unit integer.</param>
        /// <param name="activationsArmorResistanceShiftHardener">activations_armor_resistance_shift_hardener integer.</param>
        /// <param name="activationsAutomatedTargetingSystem">activations_automated_targeting_system integer.</param>
        /// <param name="activationsBastion">activations_bastion integer.</param>
        /// <param name="activationsBombLauncher">activations_bomb_launcher integer.</param>
        /// <param name="activationsCapacitorBooster">activations_capacitor_booster integer.</param>
        /// <param name="activationsCargoScanner">activations_cargo_scanner integer.</param>
        /// <param name="activationsCloakingDevice">activations_cloaking_device integer.</param>
        /// <param name="activationsCloneVatBay">activations_clone_vat_bay integer.</param>
        /// <param name="activationsCynosuralField">activations_cynosural_field integer.</param>
        /// <param name="activationsDamageControl">activations_damage_control integer.</param>
        /// <param name="activationsDataMiners">activations_data_miners integer.</param>
        /// <param name="activationsDroneControlUnit">activations_drone_control_unit integer.</param>
        /// <param name="activationsDroneTrackingModules">activations_drone_tracking_modules integer.</param>
        /// <param name="activationsEccm">activations_eccm integer.</param>
        /// <param name="activationsEcm">activations_ecm integer.</param>
        /// <param name="activationsEcmBurst">activations_ecm_burst integer.</param>
        /// <param name="activationsEnergyDestabilizer">activations_energy_destabilizer integer.</param>
        /// <param name="activationsEnergyVampire">activations_energy_vampire integer.</param>
        /// <param name="activationsEnergyWeapon">activations_energy_weapon integer.</param>
        /// <param name="activationsFestivalLauncher">activations_festival_launcher integer.</param>
        /// <param name="activationsFrequencyMiningLaser">activations_frequency_mining_laser integer.</param>
        /// <param name="activationsFueledArmorRepairer">activations_fueled_armor_repairer integer.</param>
        /// <param name="activationsFueledShieldBooster">activations_fueled_shield_booster integer.</param>
        /// <param name="activationsGangCoordinator">activations_gang_coordinator integer.</param>
        /// <param name="activationsGasCloudHarvester">activations_gas_cloud_harvester integer.</param>
        /// <param name="activationsHullRepairUnit">activations_hull_repair_unit integer.</param>
        /// <param name="activationsHybridWeapon">activations_hybrid_weapon integer.</param>
        /// <param name="activationsIndustrialCore">activations_industrial_core integer.</param>
        /// <param name="activationsInterdictionSphereLauncher">activations_interdiction_sphere_launcher integer.</param>
        /// <param name="activationsMicroJumpDrive">activations_micro_jump_drive integer.</param>
        /// <param name="activationsMiningLaser">activations_mining_laser integer.</param>
        /// <param name="activationsMissileLauncher">activations_missile_launcher integer.</param>
        /// <param name="activationsPassiveTargetingSystem">activations_passive_targeting_system integer.</param>
        /// <param name="activationsProbeLauncher">activations_probe_launcher integer.</param>
        /// <param name="activationsProjectedEccm">activations_projected_eccm integer.</param>
        /// <param name="activationsProjectileWeapon">activations_projectile_weapon integer.</param>
        /// <param name="activationsPropulsionModule">activations_propulsion_module integer.</param>
        /// <param name="activationsRemoteArmorRepairer">activations_remote_armor_repairer integer.</param>
        /// <param name="activationsRemoteCapacitorTransmitter">activations_remote_capacitor_transmitter integer.</param>
        /// <param name="activationsRemoteEcmBurst">activations_remote_ecm_burst integer.</param>
        /// <param name="activationsRemoteHullRepairer">activations_remote_hull_repairer integer.</param>
        /// <param name="activationsRemoteSensorBooster">activations_remote_sensor_booster integer.</param>
        /// <param name="activationsRemoteSensorDamper">activations_remote_sensor_damper integer.</param>
        /// <param name="activationsRemoteShieldBooster">activations_remote_shield_booster integer.</param>
        /// <param name="activationsRemoteTrackingComputer">activations_remote_tracking_computer integer.</param>
        /// <param name="activationsSalvager">activations_salvager integer.</param>
        /// <param name="activationsSensorBooster">activations_sensor_booster integer.</param>
        /// <param name="activationsShieldBooster">activations_shield_booster integer.</param>
        /// <param name="activationsShieldHardener">activations_shield_hardener integer.</param>
        /// <param name="activationsShipScanner">activations_ship_scanner integer.</param>
        /// <param name="activationsSiege">activations_siege integer.</param>
        /// <param name="activationsSmartBomb">activations_smart_bomb integer.</param>
        /// <param name="activationsStasisWeb">activations_stasis_web integer.</param>
        /// <param name="activationsStripMiner">activations_strip_miner integer.</param>
        /// <param name="activationsSuperWeapon">activations_super_weapon integer.</param>
        /// <param name="activationsSurveyScanner">activations_survey_scanner integer.</param>
        /// <param name="activationsTargetBreaker">activations_target_breaker integer.</param>
        /// <param name="activationsTargetPainter">activations_target_painter integer.</param>
        /// <param name="activationsTrackingComputer">activations_tracking_computer integer.</param>
        /// <param name="activationsTrackingDisruptor">activations_tracking_disruptor integer.</param>
        /// <param name="activationsTractorBeam">activations_tractor_beam integer.</param>
        /// <param name="activationsTriage">activations_triage integer.</param>
        /// <param name="activationsWarpDisruptFieldGenerator">activations_warp_disrupt_field_generator integer.</param>
        /// <param name="activationsWarpScrambler">activations_warp_scrambler integer.</param>
        /// <param name="linkWeapons">link_weapons integer.</param>
        /// <param name="overload">overload integer.</param>
        /// <param name="repairs">repairs integer.</param>
        public GetCharactersCharacterIdStatsModule(long? activationsArmorHardener = default(long?), long? activationsArmorRepairUnit = default(long?), long? activationsArmorResistanceShiftHardener = default(long?), long? activationsAutomatedTargetingSystem = default(long?), long? activationsBastion = default(long?), long? activationsBombLauncher = default(long?), long? activationsCapacitorBooster = default(long?), long? activationsCargoScanner = default(long?), long? activationsCloakingDevice = default(long?), long? activationsCloneVatBay = default(long?), long? activationsCynosuralField = default(long?), long? activationsDamageControl = default(long?), long? activationsDataMiners = default(long?), long? activationsDroneControlUnit = default(long?), long? activationsDroneTrackingModules = default(long?), long? activationsEccm = default(long?), long? activationsEcm = default(long?), long? activationsEcmBurst = default(long?), long? activationsEnergyDestabilizer = default(long?), long? activationsEnergyVampire = default(long?), long? activationsEnergyWeapon = default(long?), long? activationsFestivalLauncher = default(long?), long? activationsFrequencyMiningLaser = default(long?), long? activationsFueledArmorRepairer = default(long?), long? activationsFueledShieldBooster = default(long?), long? activationsGangCoordinator = default(long?), long? activationsGasCloudHarvester = default(long?), long? activationsHullRepairUnit = default(long?), long? activationsHybridWeapon = default(long?), long? activationsIndustrialCore = default(long?), long? activationsInterdictionSphereLauncher = default(long?), long? activationsMicroJumpDrive = default(long?), long? activationsMiningLaser = default(long?), long? activationsMissileLauncher = default(long?), long? activationsPassiveTargetingSystem = default(long?), long? activationsProbeLauncher = default(long?), long? activationsProjectedEccm = default(long?), long? activationsProjectileWeapon = default(long?), long? activationsPropulsionModule = default(long?), long? activationsRemoteArmorRepairer = default(long?), long? activationsRemoteCapacitorTransmitter = default(long?), long? activationsRemoteEcmBurst = default(long?), long? activationsRemoteHullRepairer = default(long?), long? activationsRemoteSensorBooster = default(long?), long? activationsRemoteSensorDamper = default(long?), long? activationsRemoteShieldBooster = default(long?), long? activationsRemoteTrackingComputer = default(long?), long? activationsSalvager = default(long?), long? activationsSensorBooster = default(long?), long? activationsShieldBooster = default(long?), long? activationsShieldHardener = default(long?), long? activationsShipScanner = default(long?), long? activationsSiege = default(long?), long? activationsSmartBomb = default(long?), long? activationsStasisWeb = default(long?), long? activationsStripMiner = default(long?), long? activationsSuperWeapon = default(long?), long? activationsSurveyScanner = default(long?), long? activationsTargetBreaker = default(long?), long? activationsTargetPainter = default(long?), long? activationsTrackingComputer = default(long?), long? activationsTrackingDisruptor = default(long?), long? activationsTractorBeam = default(long?), long? activationsTriage = default(long?), long? activationsWarpDisruptFieldGenerator = default(long?), long? activationsWarpScrambler = default(long?), long? linkWeapons = default(long?), long? overload = default(long?), long? repairs = default(long?))
        {
            this.ActivationsArmorHardener = activationsArmorHardener;
            this.ActivationsArmorRepairUnit = activationsArmorRepairUnit;
            this.ActivationsArmorResistanceShiftHardener = activationsArmorResistanceShiftHardener;
            this.ActivationsAutomatedTargetingSystem = activationsAutomatedTargetingSystem;
            this.ActivationsBastion = activationsBastion;
            this.ActivationsBombLauncher = activationsBombLauncher;
            this.ActivationsCapacitorBooster = activationsCapacitorBooster;
            this.ActivationsCargoScanner = activationsCargoScanner;
            this.ActivationsCloakingDevice = activationsCloakingDevice;
            this.ActivationsCloneVatBay = activationsCloneVatBay;
            this.ActivationsCynosuralField = activationsCynosuralField;
            this.ActivationsDamageControl = activationsDamageControl;
            this.ActivationsDataMiners = activationsDataMiners;
            this.ActivationsDroneControlUnit = activationsDroneControlUnit;
            this.ActivationsDroneTrackingModules = activationsDroneTrackingModules;
            this.ActivationsEccm = activationsEccm;
            this.ActivationsEcm = activationsEcm;
            this.ActivationsEcmBurst = activationsEcmBurst;
            this.ActivationsEnergyDestabilizer = activationsEnergyDestabilizer;
            this.ActivationsEnergyVampire = activationsEnergyVampire;
            this.ActivationsEnergyWeapon = activationsEnergyWeapon;
            this.ActivationsFestivalLauncher = activationsFestivalLauncher;
            this.ActivationsFrequencyMiningLaser = activationsFrequencyMiningLaser;
            this.ActivationsFueledArmorRepairer = activationsFueledArmorRepairer;
            this.ActivationsFueledShieldBooster = activationsFueledShieldBooster;
            this.ActivationsGangCoordinator = activationsGangCoordinator;
            this.ActivationsGasCloudHarvester = activationsGasCloudHarvester;
            this.ActivationsHullRepairUnit = activationsHullRepairUnit;
            this.ActivationsHybridWeapon = activationsHybridWeapon;
            this.ActivationsIndustrialCore = activationsIndustrialCore;
            this.ActivationsInterdictionSphereLauncher = activationsInterdictionSphereLauncher;
            this.ActivationsMicroJumpDrive = activationsMicroJumpDrive;
            this.ActivationsMiningLaser = activationsMiningLaser;
            this.ActivationsMissileLauncher = activationsMissileLauncher;
            this.ActivationsPassiveTargetingSystem = activationsPassiveTargetingSystem;
            this.ActivationsProbeLauncher = activationsProbeLauncher;
            this.ActivationsProjectedEccm = activationsProjectedEccm;
            this.ActivationsProjectileWeapon = activationsProjectileWeapon;
            this.ActivationsPropulsionModule = activationsPropulsionModule;
            this.ActivationsRemoteArmorRepairer = activationsRemoteArmorRepairer;
            this.ActivationsRemoteCapacitorTransmitter = activationsRemoteCapacitorTransmitter;
            this.ActivationsRemoteEcmBurst = activationsRemoteEcmBurst;
            this.ActivationsRemoteHullRepairer = activationsRemoteHullRepairer;
            this.ActivationsRemoteSensorBooster = activationsRemoteSensorBooster;
            this.ActivationsRemoteSensorDamper = activationsRemoteSensorDamper;
            this.ActivationsRemoteShieldBooster = activationsRemoteShieldBooster;
            this.ActivationsRemoteTrackingComputer = activationsRemoteTrackingComputer;
            this.ActivationsSalvager = activationsSalvager;
            this.ActivationsSensorBooster = activationsSensorBooster;
            this.ActivationsShieldBooster = activationsShieldBooster;
            this.ActivationsShieldHardener = activationsShieldHardener;
            this.ActivationsShipScanner = activationsShipScanner;
            this.ActivationsSiege = activationsSiege;
            this.ActivationsSmartBomb = activationsSmartBomb;
            this.ActivationsStasisWeb = activationsStasisWeb;
            this.ActivationsStripMiner = activationsStripMiner;
            this.ActivationsSuperWeapon = activationsSuperWeapon;
            this.ActivationsSurveyScanner = activationsSurveyScanner;
            this.ActivationsTargetBreaker = activationsTargetBreaker;
            this.ActivationsTargetPainter = activationsTargetPainter;
            this.ActivationsTrackingComputer = activationsTrackingComputer;
            this.ActivationsTrackingDisruptor = activationsTrackingDisruptor;
            this.ActivationsTractorBeam = activationsTractorBeam;
            this.ActivationsTriage = activationsTriage;
            this.ActivationsWarpDisruptFieldGenerator = activationsWarpDisruptFieldGenerator;
            this.ActivationsWarpScrambler = activationsWarpScrambler;
            this.LinkWeapons = linkWeapons;
            this.Overload = overload;
            this.Repairs = repairs;
        }
        
        /// <summary>
        /// activations_armor_hardener integer
        /// </summary>
        /// <value>activations_armor_hardener integer</value>
        [DataMember(Name="activations_armor_hardener", EmitDefaultValue=false)]
        public long? ActivationsArmorHardener { get; set; }

        /// <summary>
        /// activations_armor_repair_unit integer
        /// </summary>
        /// <value>activations_armor_repair_unit integer</value>
        [DataMember(Name="activations_armor_repair_unit", EmitDefaultValue=false)]
        public long? ActivationsArmorRepairUnit { get; set; }

        /// <summary>
        /// activations_armor_resistance_shift_hardener integer
        /// </summary>
        /// <value>activations_armor_resistance_shift_hardener integer</value>
        [DataMember(Name="activations_armor_resistance_shift_hardener", EmitDefaultValue=false)]
        public long? ActivationsArmorResistanceShiftHardener { get; set; }

        /// <summary>
        /// activations_automated_targeting_system integer
        /// </summary>
        /// <value>activations_automated_targeting_system integer</value>
        [DataMember(Name="activations_automated_targeting_system", EmitDefaultValue=false)]
        public long? ActivationsAutomatedTargetingSystem { get; set; }

        /// <summary>
        /// activations_bastion integer
        /// </summary>
        /// <value>activations_bastion integer</value>
        [DataMember(Name="activations_bastion", EmitDefaultValue=false)]
        public long? ActivationsBastion { get; set; }

        /// <summary>
        /// activations_bomb_launcher integer
        /// </summary>
        /// <value>activations_bomb_launcher integer</value>
        [DataMember(Name="activations_bomb_launcher", EmitDefaultValue=false)]
        public long? ActivationsBombLauncher { get; set; }

        /// <summary>
        /// activations_capacitor_booster integer
        /// </summary>
        /// <value>activations_capacitor_booster integer</value>
        [DataMember(Name="activations_capacitor_booster", EmitDefaultValue=false)]
        public long? ActivationsCapacitorBooster { get; set; }

        /// <summary>
        /// activations_cargo_scanner integer
        /// </summary>
        /// <value>activations_cargo_scanner integer</value>
        [DataMember(Name="activations_cargo_scanner", EmitDefaultValue=false)]
        public long? ActivationsCargoScanner { get; set; }

        /// <summary>
        /// activations_cloaking_device integer
        /// </summary>
        /// <value>activations_cloaking_device integer</value>
        [DataMember(Name="activations_cloaking_device", EmitDefaultValue=false)]
        public long? ActivationsCloakingDevice { get; set; }

        /// <summary>
        /// activations_clone_vat_bay integer
        /// </summary>
        /// <value>activations_clone_vat_bay integer</value>
        [DataMember(Name="activations_clone_vat_bay", EmitDefaultValue=false)]
        public long? ActivationsCloneVatBay { get; set; }

        /// <summary>
        /// activations_cynosural_field integer
        /// </summary>
        /// <value>activations_cynosural_field integer</value>
        [DataMember(Name="activations_cynosural_field", EmitDefaultValue=false)]
        public long? ActivationsCynosuralField { get; set; }

        /// <summary>
        /// activations_damage_control integer
        /// </summary>
        /// <value>activations_damage_control integer</value>
        [DataMember(Name="activations_damage_control", EmitDefaultValue=false)]
        public long? ActivationsDamageControl { get; set; }

        /// <summary>
        /// activations_data_miners integer
        /// </summary>
        /// <value>activations_data_miners integer</value>
        [DataMember(Name="activations_data_miners", EmitDefaultValue=false)]
        public long? ActivationsDataMiners { get; set; }

        /// <summary>
        /// activations_drone_control_unit integer
        /// </summary>
        /// <value>activations_drone_control_unit integer</value>
        [DataMember(Name="activations_drone_control_unit", EmitDefaultValue=false)]
        public long? ActivationsDroneControlUnit { get; set; }

        /// <summary>
        /// activations_drone_tracking_modules integer
        /// </summary>
        /// <value>activations_drone_tracking_modules integer</value>
        [DataMember(Name="activations_drone_tracking_modules", EmitDefaultValue=false)]
        public long? ActivationsDroneTrackingModules { get; set; }

        /// <summary>
        /// activations_eccm integer
        /// </summary>
        /// <value>activations_eccm integer</value>
        [DataMember(Name="activations_eccm", EmitDefaultValue=false)]
        public long? ActivationsEccm { get; set; }

        /// <summary>
        /// activations_ecm integer
        /// </summary>
        /// <value>activations_ecm integer</value>
        [DataMember(Name="activations_ecm", EmitDefaultValue=false)]
        public long? ActivationsEcm { get; set; }

        /// <summary>
        /// activations_ecm_burst integer
        /// </summary>
        /// <value>activations_ecm_burst integer</value>
        [DataMember(Name="activations_ecm_burst", EmitDefaultValue=false)]
        public long? ActivationsEcmBurst { get; set; }

        /// <summary>
        /// activations_energy_destabilizer integer
        /// </summary>
        /// <value>activations_energy_destabilizer integer</value>
        [DataMember(Name="activations_energy_destabilizer", EmitDefaultValue=false)]
        public long? ActivationsEnergyDestabilizer { get; set; }

        /// <summary>
        /// activations_energy_vampire integer
        /// </summary>
        /// <value>activations_energy_vampire integer</value>
        [DataMember(Name="activations_energy_vampire", EmitDefaultValue=false)]
        public long? ActivationsEnergyVampire { get; set; }

        /// <summary>
        /// activations_energy_weapon integer
        /// </summary>
        /// <value>activations_energy_weapon integer</value>
        [DataMember(Name="activations_energy_weapon", EmitDefaultValue=false)]
        public long? ActivationsEnergyWeapon { get; set; }

        /// <summary>
        /// activations_festival_launcher integer
        /// </summary>
        /// <value>activations_festival_launcher integer</value>
        [DataMember(Name="activations_festival_launcher", EmitDefaultValue=false)]
        public long? ActivationsFestivalLauncher { get; set; }

        /// <summary>
        /// activations_frequency_mining_laser integer
        /// </summary>
        /// <value>activations_frequency_mining_laser integer</value>
        [DataMember(Name="activations_frequency_mining_laser", EmitDefaultValue=false)]
        public long? ActivationsFrequencyMiningLaser { get; set; }

        /// <summary>
        /// activations_fueled_armor_repairer integer
        /// </summary>
        /// <value>activations_fueled_armor_repairer integer</value>
        [DataMember(Name="activations_fueled_armor_repairer", EmitDefaultValue=false)]
        public long? ActivationsFueledArmorRepairer { get; set; }

        /// <summary>
        /// activations_fueled_shield_booster integer
        /// </summary>
        /// <value>activations_fueled_shield_booster integer</value>
        [DataMember(Name="activations_fueled_shield_booster", EmitDefaultValue=false)]
        public long? ActivationsFueledShieldBooster { get; set; }

        /// <summary>
        /// activations_gang_coordinator integer
        /// </summary>
        /// <value>activations_gang_coordinator integer</value>
        [DataMember(Name="activations_gang_coordinator", EmitDefaultValue=false)]
        public long? ActivationsGangCoordinator { get; set; }

        /// <summary>
        /// activations_gas_cloud_harvester integer
        /// </summary>
        /// <value>activations_gas_cloud_harvester integer</value>
        [DataMember(Name="activations_gas_cloud_harvester", EmitDefaultValue=false)]
        public long? ActivationsGasCloudHarvester { get; set; }

        /// <summary>
        /// activations_hull_repair_unit integer
        /// </summary>
        /// <value>activations_hull_repair_unit integer</value>
        [DataMember(Name="activations_hull_repair_unit", EmitDefaultValue=false)]
        public long? ActivationsHullRepairUnit { get; set; }

        /// <summary>
        /// activations_hybrid_weapon integer
        /// </summary>
        /// <value>activations_hybrid_weapon integer</value>
        [DataMember(Name="activations_hybrid_weapon", EmitDefaultValue=false)]
        public long? ActivationsHybridWeapon { get; set; }

        /// <summary>
        /// activations_industrial_core integer
        /// </summary>
        /// <value>activations_industrial_core integer</value>
        [DataMember(Name="activations_industrial_core", EmitDefaultValue=false)]
        public long? ActivationsIndustrialCore { get; set; }

        /// <summary>
        /// activations_interdiction_sphere_launcher integer
        /// </summary>
        /// <value>activations_interdiction_sphere_launcher integer</value>
        [DataMember(Name="activations_interdiction_sphere_launcher", EmitDefaultValue=false)]
        public long? ActivationsInterdictionSphereLauncher { get; set; }

        /// <summary>
        /// activations_micro_jump_drive integer
        /// </summary>
        /// <value>activations_micro_jump_drive integer</value>
        [DataMember(Name="activations_micro_jump_drive", EmitDefaultValue=false)]
        public long? ActivationsMicroJumpDrive { get; set; }

        /// <summary>
        /// activations_mining_laser integer
        /// </summary>
        /// <value>activations_mining_laser integer</value>
        [DataMember(Name="activations_mining_laser", EmitDefaultValue=false)]
        public long? ActivationsMiningLaser { get; set; }

        /// <summary>
        /// activations_missile_launcher integer
        /// </summary>
        /// <value>activations_missile_launcher integer</value>
        [DataMember(Name="activations_missile_launcher", EmitDefaultValue=false)]
        public long? ActivationsMissileLauncher { get; set; }

        /// <summary>
        /// activations_passive_targeting_system integer
        /// </summary>
        /// <value>activations_passive_targeting_system integer</value>
        [DataMember(Name="activations_passive_targeting_system", EmitDefaultValue=false)]
        public long? ActivationsPassiveTargetingSystem { get; set; }

        /// <summary>
        /// activations_probe_launcher integer
        /// </summary>
        /// <value>activations_probe_launcher integer</value>
        [DataMember(Name="activations_probe_launcher", EmitDefaultValue=false)]
        public long? ActivationsProbeLauncher { get; set; }

        /// <summary>
        /// activations_projected_eccm integer
        /// </summary>
        /// <value>activations_projected_eccm integer</value>
        [DataMember(Name="activations_projected_eccm", EmitDefaultValue=false)]
        public long? ActivationsProjectedEccm { get; set; }

        /// <summary>
        /// activations_projectile_weapon integer
        /// </summary>
        /// <value>activations_projectile_weapon integer</value>
        [DataMember(Name="activations_projectile_weapon", EmitDefaultValue=false)]
        public long? ActivationsProjectileWeapon { get; set; }

        /// <summary>
        /// activations_propulsion_module integer
        /// </summary>
        /// <value>activations_propulsion_module integer</value>
        [DataMember(Name="activations_propulsion_module", EmitDefaultValue=false)]
        public long? ActivationsPropulsionModule { get; set; }

        /// <summary>
        /// activations_remote_armor_repairer integer
        /// </summary>
        /// <value>activations_remote_armor_repairer integer</value>
        [DataMember(Name="activations_remote_armor_repairer", EmitDefaultValue=false)]
        public long? ActivationsRemoteArmorRepairer { get; set; }

        /// <summary>
        /// activations_remote_capacitor_transmitter integer
        /// </summary>
        /// <value>activations_remote_capacitor_transmitter integer</value>
        [DataMember(Name="activations_remote_capacitor_transmitter", EmitDefaultValue=false)]
        public long? ActivationsRemoteCapacitorTransmitter { get; set; }

        /// <summary>
        /// activations_remote_ecm_burst integer
        /// </summary>
        /// <value>activations_remote_ecm_burst integer</value>
        [DataMember(Name="activations_remote_ecm_burst", EmitDefaultValue=false)]
        public long? ActivationsRemoteEcmBurst { get; set; }

        /// <summary>
        /// activations_remote_hull_repairer integer
        /// </summary>
        /// <value>activations_remote_hull_repairer integer</value>
        [DataMember(Name="activations_remote_hull_repairer", EmitDefaultValue=false)]
        public long? ActivationsRemoteHullRepairer { get; set; }

        /// <summary>
        /// activations_remote_sensor_booster integer
        /// </summary>
        /// <value>activations_remote_sensor_booster integer</value>
        [DataMember(Name="activations_remote_sensor_booster", EmitDefaultValue=false)]
        public long? ActivationsRemoteSensorBooster { get; set; }

        /// <summary>
        /// activations_remote_sensor_damper integer
        /// </summary>
        /// <value>activations_remote_sensor_damper integer</value>
        [DataMember(Name="activations_remote_sensor_damper", EmitDefaultValue=false)]
        public long? ActivationsRemoteSensorDamper { get; set; }

        /// <summary>
        /// activations_remote_shield_booster integer
        /// </summary>
        /// <value>activations_remote_shield_booster integer</value>
        [DataMember(Name="activations_remote_shield_booster", EmitDefaultValue=false)]
        public long? ActivationsRemoteShieldBooster { get; set; }

        /// <summary>
        /// activations_remote_tracking_computer integer
        /// </summary>
        /// <value>activations_remote_tracking_computer integer</value>
        [DataMember(Name="activations_remote_tracking_computer", EmitDefaultValue=false)]
        public long? ActivationsRemoteTrackingComputer { get; set; }

        /// <summary>
        /// activations_salvager integer
        /// </summary>
        /// <value>activations_salvager integer</value>
        [DataMember(Name="activations_salvager", EmitDefaultValue=false)]
        public long? ActivationsSalvager { get; set; }

        /// <summary>
        /// activations_sensor_booster integer
        /// </summary>
        /// <value>activations_sensor_booster integer</value>
        [DataMember(Name="activations_sensor_booster", EmitDefaultValue=false)]
        public long? ActivationsSensorBooster { get; set; }

        /// <summary>
        /// activations_shield_booster integer
        /// </summary>
        /// <value>activations_shield_booster integer</value>
        [DataMember(Name="activations_shield_booster", EmitDefaultValue=false)]
        public long? ActivationsShieldBooster { get; set; }

        /// <summary>
        /// activations_shield_hardener integer
        /// </summary>
        /// <value>activations_shield_hardener integer</value>
        [DataMember(Name="activations_shield_hardener", EmitDefaultValue=false)]
        public long? ActivationsShieldHardener { get; set; }

        /// <summary>
        /// activations_ship_scanner integer
        /// </summary>
        /// <value>activations_ship_scanner integer</value>
        [DataMember(Name="activations_ship_scanner", EmitDefaultValue=false)]
        public long? ActivationsShipScanner { get; set; }

        /// <summary>
        /// activations_siege integer
        /// </summary>
        /// <value>activations_siege integer</value>
        [DataMember(Name="activations_siege", EmitDefaultValue=false)]
        public long? ActivationsSiege { get; set; }

        /// <summary>
        /// activations_smart_bomb integer
        /// </summary>
        /// <value>activations_smart_bomb integer</value>
        [DataMember(Name="activations_smart_bomb", EmitDefaultValue=false)]
        public long? ActivationsSmartBomb { get; set; }

        /// <summary>
        /// activations_stasis_web integer
        /// </summary>
        /// <value>activations_stasis_web integer</value>
        [DataMember(Name="activations_stasis_web", EmitDefaultValue=false)]
        public long? ActivationsStasisWeb { get; set; }

        /// <summary>
        /// activations_strip_miner integer
        /// </summary>
        /// <value>activations_strip_miner integer</value>
        [DataMember(Name="activations_strip_miner", EmitDefaultValue=false)]
        public long? ActivationsStripMiner { get; set; }

        /// <summary>
        /// activations_super_weapon integer
        /// </summary>
        /// <value>activations_super_weapon integer</value>
        [DataMember(Name="activations_super_weapon", EmitDefaultValue=false)]
        public long? ActivationsSuperWeapon { get; set; }

        /// <summary>
        /// activations_survey_scanner integer
        /// </summary>
        /// <value>activations_survey_scanner integer</value>
        [DataMember(Name="activations_survey_scanner", EmitDefaultValue=false)]
        public long? ActivationsSurveyScanner { get; set; }

        /// <summary>
        /// activations_target_breaker integer
        /// </summary>
        /// <value>activations_target_breaker integer</value>
        [DataMember(Name="activations_target_breaker", EmitDefaultValue=false)]
        public long? ActivationsTargetBreaker { get; set; }

        /// <summary>
        /// activations_target_painter integer
        /// </summary>
        /// <value>activations_target_painter integer</value>
        [DataMember(Name="activations_target_painter", EmitDefaultValue=false)]
        public long? ActivationsTargetPainter { get; set; }

        /// <summary>
        /// activations_tracking_computer integer
        /// </summary>
        /// <value>activations_tracking_computer integer</value>
        [DataMember(Name="activations_tracking_computer", EmitDefaultValue=false)]
        public long? ActivationsTrackingComputer { get; set; }

        /// <summary>
        /// activations_tracking_disruptor integer
        /// </summary>
        /// <value>activations_tracking_disruptor integer</value>
        [DataMember(Name="activations_tracking_disruptor", EmitDefaultValue=false)]
        public long? ActivationsTrackingDisruptor { get; set; }

        /// <summary>
        /// activations_tractor_beam integer
        /// </summary>
        /// <value>activations_tractor_beam integer</value>
        [DataMember(Name="activations_tractor_beam", EmitDefaultValue=false)]
        public long? ActivationsTractorBeam { get; set; }

        /// <summary>
        /// activations_triage integer
        /// </summary>
        /// <value>activations_triage integer</value>
        [DataMember(Name="activations_triage", EmitDefaultValue=false)]
        public long? ActivationsTriage { get; set; }

        /// <summary>
        /// activations_warp_disrupt_field_generator integer
        /// </summary>
        /// <value>activations_warp_disrupt_field_generator integer</value>
        [DataMember(Name="activations_warp_disrupt_field_generator", EmitDefaultValue=false)]
        public long? ActivationsWarpDisruptFieldGenerator { get; set; }

        /// <summary>
        /// activations_warp_scrambler integer
        /// </summary>
        /// <value>activations_warp_scrambler integer</value>
        [DataMember(Name="activations_warp_scrambler", EmitDefaultValue=false)]
        public long? ActivationsWarpScrambler { get; set; }

        /// <summary>
        /// link_weapons integer
        /// </summary>
        /// <value>link_weapons integer</value>
        [DataMember(Name="link_weapons", EmitDefaultValue=false)]
        public long? LinkWeapons { get; set; }

        /// <summary>
        /// overload integer
        /// </summary>
        /// <value>overload integer</value>
        [DataMember(Name="overload", EmitDefaultValue=false)]
        public long? Overload { get; set; }

        /// <summary>
        /// repairs integer
        /// </summary>
        /// <value>repairs integer</value>
        [DataMember(Name="repairs", EmitDefaultValue=false)]
        public long? Repairs { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetCharactersCharacterIdStatsModule {\n");
            sb.Append("  ActivationsArmorHardener: ").Append(ActivationsArmorHardener).Append("\n");
            sb.Append("  ActivationsArmorRepairUnit: ").Append(ActivationsArmorRepairUnit).Append("\n");
            sb.Append("  ActivationsArmorResistanceShiftHardener: ").Append(ActivationsArmorResistanceShiftHardener).Append("\n");
            sb.Append("  ActivationsAutomatedTargetingSystem: ").Append(ActivationsAutomatedTargetingSystem).Append("\n");
            sb.Append("  ActivationsBastion: ").Append(ActivationsBastion).Append("\n");
            sb.Append("  ActivationsBombLauncher: ").Append(ActivationsBombLauncher).Append("\n");
            sb.Append("  ActivationsCapacitorBooster: ").Append(ActivationsCapacitorBooster).Append("\n");
            sb.Append("  ActivationsCargoScanner: ").Append(ActivationsCargoScanner).Append("\n");
            sb.Append("  ActivationsCloakingDevice: ").Append(ActivationsCloakingDevice).Append("\n");
            sb.Append("  ActivationsCloneVatBay: ").Append(ActivationsCloneVatBay).Append("\n");
            sb.Append("  ActivationsCynosuralField: ").Append(ActivationsCynosuralField).Append("\n");
            sb.Append("  ActivationsDamageControl: ").Append(ActivationsDamageControl).Append("\n");
            sb.Append("  ActivationsDataMiners: ").Append(ActivationsDataMiners).Append("\n");
            sb.Append("  ActivationsDroneControlUnit: ").Append(ActivationsDroneControlUnit).Append("\n");
            sb.Append("  ActivationsDroneTrackingModules: ").Append(ActivationsDroneTrackingModules).Append("\n");
            sb.Append("  ActivationsEccm: ").Append(ActivationsEccm).Append("\n");
            sb.Append("  ActivationsEcm: ").Append(ActivationsEcm).Append("\n");
            sb.Append("  ActivationsEcmBurst: ").Append(ActivationsEcmBurst).Append("\n");
            sb.Append("  ActivationsEnergyDestabilizer: ").Append(ActivationsEnergyDestabilizer).Append("\n");
            sb.Append("  ActivationsEnergyVampire: ").Append(ActivationsEnergyVampire).Append("\n");
            sb.Append("  ActivationsEnergyWeapon: ").Append(ActivationsEnergyWeapon).Append("\n");
            sb.Append("  ActivationsFestivalLauncher: ").Append(ActivationsFestivalLauncher).Append("\n");
            sb.Append("  ActivationsFrequencyMiningLaser: ").Append(ActivationsFrequencyMiningLaser).Append("\n");
            sb.Append("  ActivationsFueledArmorRepairer: ").Append(ActivationsFueledArmorRepairer).Append("\n");
            sb.Append("  ActivationsFueledShieldBooster: ").Append(ActivationsFueledShieldBooster).Append("\n");
            sb.Append("  ActivationsGangCoordinator: ").Append(ActivationsGangCoordinator).Append("\n");
            sb.Append("  ActivationsGasCloudHarvester: ").Append(ActivationsGasCloudHarvester).Append("\n");
            sb.Append("  ActivationsHullRepairUnit: ").Append(ActivationsHullRepairUnit).Append("\n");
            sb.Append("  ActivationsHybridWeapon: ").Append(ActivationsHybridWeapon).Append("\n");
            sb.Append("  ActivationsIndustrialCore: ").Append(ActivationsIndustrialCore).Append("\n");
            sb.Append("  ActivationsInterdictionSphereLauncher: ").Append(ActivationsInterdictionSphereLauncher).Append("\n");
            sb.Append("  ActivationsMicroJumpDrive: ").Append(ActivationsMicroJumpDrive).Append("\n");
            sb.Append("  ActivationsMiningLaser: ").Append(ActivationsMiningLaser).Append("\n");
            sb.Append("  ActivationsMissileLauncher: ").Append(ActivationsMissileLauncher).Append("\n");
            sb.Append("  ActivationsPassiveTargetingSystem: ").Append(ActivationsPassiveTargetingSystem).Append("\n");
            sb.Append("  ActivationsProbeLauncher: ").Append(ActivationsProbeLauncher).Append("\n");
            sb.Append("  ActivationsProjectedEccm: ").Append(ActivationsProjectedEccm).Append("\n");
            sb.Append("  ActivationsProjectileWeapon: ").Append(ActivationsProjectileWeapon).Append("\n");
            sb.Append("  ActivationsPropulsionModule: ").Append(ActivationsPropulsionModule).Append("\n");
            sb.Append("  ActivationsRemoteArmorRepairer: ").Append(ActivationsRemoteArmorRepairer).Append("\n");
            sb.Append("  ActivationsRemoteCapacitorTransmitter: ").Append(ActivationsRemoteCapacitorTransmitter).Append("\n");
            sb.Append("  ActivationsRemoteEcmBurst: ").Append(ActivationsRemoteEcmBurst).Append("\n");
            sb.Append("  ActivationsRemoteHullRepairer: ").Append(ActivationsRemoteHullRepairer).Append("\n");
            sb.Append("  ActivationsRemoteSensorBooster: ").Append(ActivationsRemoteSensorBooster).Append("\n");
            sb.Append("  ActivationsRemoteSensorDamper: ").Append(ActivationsRemoteSensorDamper).Append("\n");
            sb.Append("  ActivationsRemoteShieldBooster: ").Append(ActivationsRemoteShieldBooster).Append("\n");
            sb.Append("  ActivationsRemoteTrackingComputer: ").Append(ActivationsRemoteTrackingComputer).Append("\n");
            sb.Append("  ActivationsSalvager: ").Append(ActivationsSalvager).Append("\n");
            sb.Append("  ActivationsSensorBooster: ").Append(ActivationsSensorBooster).Append("\n");
            sb.Append("  ActivationsShieldBooster: ").Append(ActivationsShieldBooster).Append("\n");
            sb.Append("  ActivationsShieldHardener: ").Append(ActivationsShieldHardener).Append("\n");
            sb.Append("  ActivationsShipScanner: ").Append(ActivationsShipScanner).Append("\n");
            sb.Append("  ActivationsSiege: ").Append(ActivationsSiege).Append("\n");
            sb.Append("  ActivationsSmartBomb: ").Append(ActivationsSmartBomb).Append("\n");
            sb.Append("  ActivationsStasisWeb: ").Append(ActivationsStasisWeb).Append("\n");
            sb.Append("  ActivationsStripMiner: ").Append(ActivationsStripMiner).Append("\n");
            sb.Append("  ActivationsSuperWeapon: ").Append(ActivationsSuperWeapon).Append("\n");
            sb.Append("  ActivationsSurveyScanner: ").Append(ActivationsSurveyScanner).Append("\n");
            sb.Append("  ActivationsTargetBreaker: ").Append(ActivationsTargetBreaker).Append("\n");
            sb.Append("  ActivationsTargetPainter: ").Append(ActivationsTargetPainter).Append("\n");
            sb.Append("  ActivationsTrackingComputer: ").Append(ActivationsTrackingComputer).Append("\n");
            sb.Append("  ActivationsTrackingDisruptor: ").Append(ActivationsTrackingDisruptor).Append("\n");
            sb.Append("  ActivationsTractorBeam: ").Append(ActivationsTractorBeam).Append("\n");
            sb.Append("  ActivationsTriage: ").Append(ActivationsTriage).Append("\n");
            sb.Append("  ActivationsWarpDisruptFieldGenerator: ").Append(ActivationsWarpDisruptFieldGenerator).Append("\n");
            sb.Append("  ActivationsWarpScrambler: ").Append(ActivationsWarpScrambler).Append("\n");
            sb.Append("  LinkWeapons: ").Append(LinkWeapons).Append("\n");
            sb.Append("  Overload: ").Append(Overload).Append("\n");
            sb.Append("  Repairs: ").Append(Repairs).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetCharactersCharacterIdStatsModule);
        }

        /// <summary>
        /// Returns true if GetCharactersCharacterIdStatsModule instances are equal
        /// </summary>
        /// <param name="input">Instance of GetCharactersCharacterIdStatsModule to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetCharactersCharacterIdStatsModule input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ActivationsArmorHardener == input.ActivationsArmorHardener ||
                    (this.ActivationsArmorHardener != null &&
                    this.ActivationsArmorHardener.Equals(input.ActivationsArmorHardener))
                ) && 
                (
                    this.ActivationsArmorRepairUnit == input.ActivationsArmorRepairUnit ||
                    (this.ActivationsArmorRepairUnit != null &&
                    this.ActivationsArmorRepairUnit.Equals(input.ActivationsArmorRepairUnit))
                ) && 
                (
                    this.ActivationsArmorResistanceShiftHardener == input.ActivationsArmorResistanceShiftHardener ||
                    (this.ActivationsArmorResistanceShiftHardener != null &&
                    this.ActivationsArmorResistanceShiftHardener.Equals(input.ActivationsArmorResistanceShiftHardener))
                ) && 
                (
                    this.ActivationsAutomatedTargetingSystem == input.ActivationsAutomatedTargetingSystem ||
                    (this.ActivationsAutomatedTargetingSystem != null &&
                    this.ActivationsAutomatedTargetingSystem.Equals(input.ActivationsAutomatedTargetingSystem))
                ) && 
                (
                    this.ActivationsBastion == input.ActivationsBastion ||
                    (this.ActivationsBastion != null &&
                    this.ActivationsBastion.Equals(input.ActivationsBastion))
                ) && 
                (
                    this.ActivationsBombLauncher == input.ActivationsBombLauncher ||
                    (this.ActivationsBombLauncher != null &&
                    this.ActivationsBombLauncher.Equals(input.ActivationsBombLauncher))
                ) && 
                (
                    this.ActivationsCapacitorBooster == input.ActivationsCapacitorBooster ||
                    (this.ActivationsCapacitorBooster != null &&
                    this.ActivationsCapacitorBooster.Equals(input.ActivationsCapacitorBooster))
                ) && 
                (
                    this.ActivationsCargoScanner == input.ActivationsCargoScanner ||
                    (this.ActivationsCargoScanner != null &&
                    this.ActivationsCargoScanner.Equals(input.ActivationsCargoScanner))
                ) && 
                (
                    this.ActivationsCloakingDevice == input.ActivationsCloakingDevice ||
                    (this.ActivationsCloakingDevice != null &&
                    this.ActivationsCloakingDevice.Equals(input.ActivationsCloakingDevice))
                ) && 
                (
                    this.ActivationsCloneVatBay == input.ActivationsCloneVatBay ||
                    (this.ActivationsCloneVatBay != null &&
                    this.ActivationsCloneVatBay.Equals(input.ActivationsCloneVatBay))
                ) && 
                (
                    this.ActivationsCynosuralField == input.ActivationsCynosuralField ||
                    (this.ActivationsCynosuralField != null &&
                    this.ActivationsCynosuralField.Equals(input.ActivationsCynosuralField))
                ) && 
                (
                    this.ActivationsDamageControl == input.ActivationsDamageControl ||
                    (this.ActivationsDamageControl != null &&
                    this.ActivationsDamageControl.Equals(input.ActivationsDamageControl))
                ) && 
                (
                    this.ActivationsDataMiners == input.ActivationsDataMiners ||
                    (this.ActivationsDataMiners != null &&
                    this.ActivationsDataMiners.Equals(input.ActivationsDataMiners))
                ) && 
                (
                    this.ActivationsDroneControlUnit == input.ActivationsDroneControlUnit ||
                    (this.ActivationsDroneControlUnit != null &&
                    this.ActivationsDroneControlUnit.Equals(input.ActivationsDroneControlUnit))
                ) && 
                (
                    this.ActivationsDroneTrackingModules == input.ActivationsDroneTrackingModules ||
                    (this.ActivationsDroneTrackingModules != null &&
                    this.ActivationsDroneTrackingModules.Equals(input.ActivationsDroneTrackingModules))
                ) && 
                (
                    this.ActivationsEccm == input.ActivationsEccm ||
                    (this.ActivationsEccm != null &&
                    this.ActivationsEccm.Equals(input.ActivationsEccm))
                ) && 
                (
                    this.ActivationsEcm == input.ActivationsEcm ||
                    (this.ActivationsEcm != null &&
                    this.ActivationsEcm.Equals(input.ActivationsEcm))
                ) && 
                (
                    this.ActivationsEcmBurst == input.ActivationsEcmBurst ||
                    (this.ActivationsEcmBurst != null &&
                    this.ActivationsEcmBurst.Equals(input.ActivationsEcmBurst))
                ) && 
                (
                    this.ActivationsEnergyDestabilizer == input.ActivationsEnergyDestabilizer ||
                    (this.ActivationsEnergyDestabilizer != null &&
                    this.ActivationsEnergyDestabilizer.Equals(input.ActivationsEnergyDestabilizer))
                ) && 
                (
                    this.ActivationsEnergyVampire == input.ActivationsEnergyVampire ||
                    (this.ActivationsEnergyVampire != null &&
                    this.ActivationsEnergyVampire.Equals(input.ActivationsEnergyVampire))
                ) && 
                (
                    this.ActivationsEnergyWeapon == input.ActivationsEnergyWeapon ||
                    (this.ActivationsEnergyWeapon != null &&
                    this.ActivationsEnergyWeapon.Equals(input.ActivationsEnergyWeapon))
                ) && 
                (
                    this.ActivationsFestivalLauncher == input.ActivationsFestivalLauncher ||
                    (this.ActivationsFestivalLauncher != null &&
                    this.ActivationsFestivalLauncher.Equals(input.ActivationsFestivalLauncher))
                ) && 
                (
                    this.ActivationsFrequencyMiningLaser == input.ActivationsFrequencyMiningLaser ||
                    (this.ActivationsFrequencyMiningLaser != null &&
                    this.ActivationsFrequencyMiningLaser.Equals(input.ActivationsFrequencyMiningLaser))
                ) && 
                (
                    this.ActivationsFueledArmorRepairer == input.ActivationsFueledArmorRepairer ||
                    (this.ActivationsFueledArmorRepairer != null &&
                    this.ActivationsFueledArmorRepairer.Equals(input.ActivationsFueledArmorRepairer))
                ) && 
                (
                    this.ActivationsFueledShieldBooster == input.ActivationsFueledShieldBooster ||
                    (this.ActivationsFueledShieldBooster != null &&
                    this.ActivationsFueledShieldBooster.Equals(input.ActivationsFueledShieldBooster))
                ) && 
                (
                    this.ActivationsGangCoordinator == input.ActivationsGangCoordinator ||
                    (this.ActivationsGangCoordinator != null &&
                    this.ActivationsGangCoordinator.Equals(input.ActivationsGangCoordinator))
                ) && 
                (
                    this.ActivationsGasCloudHarvester == input.ActivationsGasCloudHarvester ||
                    (this.ActivationsGasCloudHarvester != null &&
                    this.ActivationsGasCloudHarvester.Equals(input.ActivationsGasCloudHarvester))
                ) && 
                (
                    this.ActivationsHullRepairUnit == input.ActivationsHullRepairUnit ||
                    (this.ActivationsHullRepairUnit != null &&
                    this.ActivationsHullRepairUnit.Equals(input.ActivationsHullRepairUnit))
                ) && 
                (
                    this.ActivationsHybridWeapon == input.ActivationsHybridWeapon ||
                    (this.ActivationsHybridWeapon != null &&
                    this.ActivationsHybridWeapon.Equals(input.ActivationsHybridWeapon))
                ) && 
                (
                    this.ActivationsIndustrialCore == input.ActivationsIndustrialCore ||
                    (this.ActivationsIndustrialCore != null &&
                    this.ActivationsIndustrialCore.Equals(input.ActivationsIndustrialCore))
                ) && 
                (
                    this.ActivationsInterdictionSphereLauncher == input.ActivationsInterdictionSphereLauncher ||
                    (this.ActivationsInterdictionSphereLauncher != null &&
                    this.ActivationsInterdictionSphereLauncher.Equals(input.ActivationsInterdictionSphereLauncher))
                ) && 
                (
                    this.ActivationsMicroJumpDrive == input.ActivationsMicroJumpDrive ||
                    (this.ActivationsMicroJumpDrive != null &&
                    this.ActivationsMicroJumpDrive.Equals(input.ActivationsMicroJumpDrive))
                ) && 
                (
                    this.ActivationsMiningLaser == input.ActivationsMiningLaser ||
                    (this.ActivationsMiningLaser != null &&
                    this.ActivationsMiningLaser.Equals(input.ActivationsMiningLaser))
                ) && 
                (
                    this.ActivationsMissileLauncher == input.ActivationsMissileLauncher ||
                    (this.ActivationsMissileLauncher != null &&
                    this.ActivationsMissileLauncher.Equals(input.ActivationsMissileLauncher))
                ) && 
                (
                    this.ActivationsPassiveTargetingSystem == input.ActivationsPassiveTargetingSystem ||
                    (this.ActivationsPassiveTargetingSystem != null &&
                    this.ActivationsPassiveTargetingSystem.Equals(input.ActivationsPassiveTargetingSystem))
                ) && 
                (
                    this.ActivationsProbeLauncher == input.ActivationsProbeLauncher ||
                    (this.ActivationsProbeLauncher != null &&
                    this.ActivationsProbeLauncher.Equals(input.ActivationsProbeLauncher))
                ) && 
                (
                    this.ActivationsProjectedEccm == input.ActivationsProjectedEccm ||
                    (this.ActivationsProjectedEccm != null &&
                    this.ActivationsProjectedEccm.Equals(input.ActivationsProjectedEccm))
                ) && 
                (
                    this.ActivationsProjectileWeapon == input.ActivationsProjectileWeapon ||
                    (this.ActivationsProjectileWeapon != null &&
                    this.ActivationsProjectileWeapon.Equals(input.ActivationsProjectileWeapon))
                ) && 
                (
                    this.ActivationsPropulsionModule == input.ActivationsPropulsionModule ||
                    (this.ActivationsPropulsionModule != null &&
                    this.ActivationsPropulsionModule.Equals(input.ActivationsPropulsionModule))
                ) && 
                (
                    this.ActivationsRemoteArmorRepairer == input.ActivationsRemoteArmorRepairer ||
                    (this.ActivationsRemoteArmorRepairer != null &&
                    this.ActivationsRemoteArmorRepairer.Equals(input.ActivationsRemoteArmorRepairer))
                ) && 
                (
                    this.ActivationsRemoteCapacitorTransmitter == input.ActivationsRemoteCapacitorTransmitter ||
                    (this.ActivationsRemoteCapacitorTransmitter != null &&
                    this.ActivationsRemoteCapacitorTransmitter.Equals(input.ActivationsRemoteCapacitorTransmitter))
                ) && 
                (
                    this.ActivationsRemoteEcmBurst == input.ActivationsRemoteEcmBurst ||
                    (this.ActivationsRemoteEcmBurst != null &&
                    this.ActivationsRemoteEcmBurst.Equals(input.ActivationsRemoteEcmBurst))
                ) && 
                (
                    this.ActivationsRemoteHullRepairer == input.ActivationsRemoteHullRepairer ||
                    (this.ActivationsRemoteHullRepairer != null &&
                    this.ActivationsRemoteHullRepairer.Equals(input.ActivationsRemoteHullRepairer))
                ) && 
                (
                    this.ActivationsRemoteSensorBooster == input.ActivationsRemoteSensorBooster ||
                    (this.ActivationsRemoteSensorBooster != null &&
                    this.ActivationsRemoteSensorBooster.Equals(input.ActivationsRemoteSensorBooster))
                ) && 
                (
                    this.ActivationsRemoteSensorDamper == input.ActivationsRemoteSensorDamper ||
                    (this.ActivationsRemoteSensorDamper != null &&
                    this.ActivationsRemoteSensorDamper.Equals(input.ActivationsRemoteSensorDamper))
                ) && 
                (
                    this.ActivationsRemoteShieldBooster == input.ActivationsRemoteShieldBooster ||
                    (this.ActivationsRemoteShieldBooster != null &&
                    this.ActivationsRemoteShieldBooster.Equals(input.ActivationsRemoteShieldBooster))
                ) && 
                (
                    this.ActivationsRemoteTrackingComputer == input.ActivationsRemoteTrackingComputer ||
                    (this.ActivationsRemoteTrackingComputer != null &&
                    this.ActivationsRemoteTrackingComputer.Equals(input.ActivationsRemoteTrackingComputer))
                ) && 
                (
                    this.ActivationsSalvager == input.ActivationsSalvager ||
                    (this.ActivationsSalvager != null &&
                    this.ActivationsSalvager.Equals(input.ActivationsSalvager))
                ) && 
                (
                    this.ActivationsSensorBooster == input.ActivationsSensorBooster ||
                    (this.ActivationsSensorBooster != null &&
                    this.ActivationsSensorBooster.Equals(input.ActivationsSensorBooster))
                ) && 
                (
                    this.ActivationsShieldBooster == input.ActivationsShieldBooster ||
                    (this.ActivationsShieldBooster != null &&
                    this.ActivationsShieldBooster.Equals(input.ActivationsShieldBooster))
                ) && 
                (
                    this.ActivationsShieldHardener == input.ActivationsShieldHardener ||
                    (this.ActivationsShieldHardener != null &&
                    this.ActivationsShieldHardener.Equals(input.ActivationsShieldHardener))
                ) && 
                (
                    this.ActivationsShipScanner == input.ActivationsShipScanner ||
                    (this.ActivationsShipScanner != null &&
                    this.ActivationsShipScanner.Equals(input.ActivationsShipScanner))
                ) && 
                (
                    this.ActivationsSiege == input.ActivationsSiege ||
                    (this.ActivationsSiege != null &&
                    this.ActivationsSiege.Equals(input.ActivationsSiege))
                ) && 
                (
                    this.ActivationsSmartBomb == input.ActivationsSmartBomb ||
                    (this.ActivationsSmartBomb != null &&
                    this.ActivationsSmartBomb.Equals(input.ActivationsSmartBomb))
                ) && 
                (
                    this.ActivationsStasisWeb == input.ActivationsStasisWeb ||
                    (this.ActivationsStasisWeb != null &&
                    this.ActivationsStasisWeb.Equals(input.ActivationsStasisWeb))
                ) && 
                (
                    this.ActivationsStripMiner == input.ActivationsStripMiner ||
                    (this.ActivationsStripMiner != null &&
                    this.ActivationsStripMiner.Equals(input.ActivationsStripMiner))
                ) && 
                (
                    this.ActivationsSuperWeapon == input.ActivationsSuperWeapon ||
                    (this.ActivationsSuperWeapon != null &&
                    this.ActivationsSuperWeapon.Equals(input.ActivationsSuperWeapon))
                ) && 
                (
                    this.ActivationsSurveyScanner == input.ActivationsSurveyScanner ||
                    (this.ActivationsSurveyScanner != null &&
                    this.ActivationsSurveyScanner.Equals(input.ActivationsSurveyScanner))
                ) && 
                (
                    this.ActivationsTargetBreaker == input.ActivationsTargetBreaker ||
                    (this.ActivationsTargetBreaker != null &&
                    this.ActivationsTargetBreaker.Equals(input.ActivationsTargetBreaker))
                ) && 
                (
                    this.ActivationsTargetPainter == input.ActivationsTargetPainter ||
                    (this.ActivationsTargetPainter != null &&
                    this.ActivationsTargetPainter.Equals(input.ActivationsTargetPainter))
                ) && 
                (
                    this.ActivationsTrackingComputer == input.ActivationsTrackingComputer ||
                    (this.ActivationsTrackingComputer != null &&
                    this.ActivationsTrackingComputer.Equals(input.ActivationsTrackingComputer))
                ) && 
                (
                    this.ActivationsTrackingDisruptor == input.ActivationsTrackingDisruptor ||
                    (this.ActivationsTrackingDisruptor != null &&
                    this.ActivationsTrackingDisruptor.Equals(input.ActivationsTrackingDisruptor))
                ) && 
                (
                    this.ActivationsTractorBeam == input.ActivationsTractorBeam ||
                    (this.ActivationsTractorBeam != null &&
                    this.ActivationsTractorBeam.Equals(input.ActivationsTractorBeam))
                ) && 
                (
                    this.ActivationsTriage == input.ActivationsTriage ||
                    (this.ActivationsTriage != null &&
                    this.ActivationsTriage.Equals(input.ActivationsTriage))
                ) && 
                (
                    this.ActivationsWarpDisruptFieldGenerator == input.ActivationsWarpDisruptFieldGenerator ||
                    (this.ActivationsWarpDisruptFieldGenerator != null &&
                    this.ActivationsWarpDisruptFieldGenerator.Equals(input.ActivationsWarpDisruptFieldGenerator))
                ) && 
                (
                    this.ActivationsWarpScrambler == input.ActivationsWarpScrambler ||
                    (this.ActivationsWarpScrambler != null &&
                    this.ActivationsWarpScrambler.Equals(input.ActivationsWarpScrambler))
                ) && 
                (
                    this.LinkWeapons == input.LinkWeapons ||
                    (this.LinkWeapons != null &&
                    this.LinkWeapons.Equals(input.LinkWeapons))
                ) && 
                (
                    this.Overload == input.Overload ||
                    (this.Overload != null &&
                    this.Overload.Equals(input.Overload))
                ) && 
                (
                    this.Repairs == input.Repairs ||
                    (this.Repairs != null &&
                    this.Repairs.Equals(input.Repairs))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ActivationsArmorHardener != null)
                    hashCode = hashCode * 59 + this.ActivationsArmorHardener.GetHashCode();
                if (this.ActivationsArmorRepairUnit != null)
                    hashCode = hashCode * 59 + this.ActivationsArmorRepairUnit.GetHashCode();
                if (this.ActivationsArmorResistanceShiftHardener != null)
                    hashCode = hashCode * 59 + this.ActivationsArmorResistanceShiftHardener.GetHashCode();
                if (this.ActivationsAutomatedTargetingSystem != null)
                    hashCode = hashCode * 59 + this.ActivationsAutomatedTargetingSystem.GetHashCode();
                if (this.ActivationsBastion != null)
                    hashCode = hashCode * 59 + this.ActivationsBastion.GetHashCode();
                if (this.ActivationsBombLauncher != null)
                    hashCode = hashCode * 59 + this.ActivationsBombLauncher.GetHashCode();
                if (this.ActivationsCapacitorBooster != null)
                    hashCode = hashCode * 59 + this.ActivationsCapacitorBooster.GetHashCode();
                if (this.ActivationsCargoScanner != null)
                    hashCode = hashCode * 59 + this.ActivationsCargoScanner.GetHashCode();
                if (this.ActivationsCloakingDevice != null)
                    hashCode = hashCode * 59 + this.ActivationsCloakingDevice.GetHashCode();
                if (this.ActivationsCloneVatBay != null)
                    hashCode = hashCode * 59 + this.ActivationsCloneVatBay.GetHashCode();
                if (this.ActivationsCynosuralField != null)
                    hashCode = hashCode * 59 + this.ActivationsCynosuralField.GetHashCode();
                if (this.ActivationsDamageControl != null)
                    hashCode = hashCode * 59 + this.ActivationsDamageControl.GetHashCode();
                if (this.ActivationsDataMiners != null)
                    hashCode = hashCode * 59 + this.ActivationsDataMiners.GetHashCode();
                if (this.ActivationsDroneControlUnit != null)
                    hashCode = hashCode * 59 + this.ActivationsDroneControlUnit.GetHashCode();
                if (this.ActivationsDroneTrackingModules != null)
                    hashCode = hashCode * 59 + this.ActivationsDroneTrackingModules.GetHashCode();
                if (this.ActivationsEccm != null)
                    hashCode = hashCode * 59 + this.ActivationsEccm.GetHashCode();
                if (this.ActivationsEcm != null)
                    hashCode = hashCode * 59 + this.ActivationsEcm.GetHashCode();
                if (this.ActivationsEcmBurst != null)
                    hashCode = hashCode * 59 + this.ActivationsEcmBurst.GetHashCode();
                if (this.ActivationsEnergyDestabilizer != null)
                    hashCode = hashCode * 59 + this.ActivationsEnergyDestabilizer.GetHashCode();
                if (this.ActivationsEnergyVampire != null)
                    hashCode = hashCode * 59 + this.ActivationsEnergyVampire.GetHashCode();
                if (this.ActivationsEnergyWeapon != null)
                    hashCode = hashCode * 59 + this.ActivationsEnergyWeapon.GetHashCode();
                if (this.ActivationsFestivalLauncher != null)
                    hashCode = hashCode * 59 + this.ActivationsFestivalLauncher.GetHashCode();
                if (this.ActivationsFrequencyMiningLaser != null)
                    hashCode = hashCode * 59 + this.ActivationsFrequencyMiningLaser.GetHashCode();
                if (this.ActivationsFueledArmorRepairer != null)
                    hashCode = hashCode * 59 + this.ActivationsFueledArmorRepairer.GetHashCode();
                if (this.ActivationsFueledShieldBooster != null)
                    hashCode = hashCode * 59 + this.ActivationsFueledShieldBooster.GetHashCode();
                if (this.ActivationsGangCoordinator != null)
                    hashCode = hashCode * 59 + this.ActivationsGangCoordinator.GetHashCode();
                if (this.ActivationsGasCloudHarvester != null)
                    hashCode = hashCode * 59 + this.ActivationsGasCloudHarvester.GetHashCode();
                if (this.ActivationsHullRepairUnit != null)
                    hashCode = hashCode * 59 + this.ActivationsHullRepairUnit.GetHashCode();
                if (this.ActivationsHybridWeapon != null)
                    hashCode = hashCode * 59 + this.ActivationsHybridWeapon.GetHashCode();
                if (this.ActivationsIndustrialCore != null)
                    hashCode = hashCode * 59 + this.ActivationsIndustrialCore.GetHashCode();
                if (this.ActivationsInterdictionSphereLauncher != null)
                    hashCode = hashCode * 59 + this.ActivationsInterdictionSphereLauncher.GetHashCode();
                if (this.ActivationsMicroJumpDrive != null)
                    hashCode = hashCode * 59 + this.ActivationsMicroJumpDrive.GetHashCode();
                if (this.ActivationsMiningLaser != null)
                    hashCode = hashCode * 59 + this.ActivationsMiningLaser.GetHashCode();
                if (this.ActivationsMissileLauncher != null)
                    hashCode = hashCode * 59 + this.ActivationsMissileLauncher.GetHashCode();
                if (this.ActivationsPassiveTargetingSystem != null)
                    hashCode = hashCode * 59 + this.ActivationsPassiveTargetingSystem.GetHashCode();
                if (this.ActivationsProbeLauncher != null)
                    hashCode = hashCode * 59 + this.ActivationsProbeLauncher.GetHashCode();
                if (this.ActivationsProjectedEccm != null)
                    hashCode = hashCode * 59 + this.ActivationsProjectedEccm.GetHashCode();
                if (this.ActivationsProjectileWeapon != null)
                    hashCode = hashCode * 59 + this.ActivationsProjectileWeapon.GetHashCode();
                if (this.ActivationsPropulsionModule != null)
                    hashCode = hashCode * 59 + this.ActivationsPropulsionModule.GetHashCode();
                if (this.ActivationsRemoteArmorRepairer != null)
                    hashCode = hashCode * 59 + this.ActivationsRemoteArmorRepairer.GetHashCode();
                if (this.ActivationsRemoteCapacitorTransmitter != null)
                    hashCode = hashCode * 59 + this.ActivationsRemoteCapacitorTransmitter.GetHashCode();
                if (this.ActivationsRemoteEcmBurst != null)
                    hashCode = hashCode * 59 + this.ActivationsRemoteEcmBurst.GetHashCode();
                if (this.ActivationsRemoteHullRepairer != null)
                    hashCode = hashCode * 59 + this.ActivationsRemoteHullRepairer.GetHashCode();
                if (this.ActivationsRemoteSensorBooster != null)
                    hashCode = hashCode * 59 + this.ActivationsRemoteSensorBooster.GetHashCode();
                if (this.ActivationsRemoteSensorDamper != null)
                    hashCode = hashCode * 59 + this.ActivationsRemoteSensorDamper.GetHashCode();
                if (this.ActivationsRemoteShieldBooster != null)
                    hashCode = hashCode * 59 + this.ActivationsRemoteShieldBooster.GetHashCode();
                if (this.ActivationsRemoteTrackingComputer != null)
                    hashCode = hashCode * 59 + this.ActivationsRemoteTrackingComputer.GetHashCode();
                if (this.ActivationsSalvager != null)
                    hashCode = hashCode * 59 + this.ActivationsSalvager.GetHashCode();
                if (this.ActivationsSensorBooster != null)
                    hashCode = hashCode * 59 + this.ActivationsSensorBooster.GetHashCode();
                if (this.ActivationsShieldBooster != null)
                    hashCode = hashCode * 59 + this.ActivationsShieldBooster.GetHashCode();
                if (this.ActivationsShieldHardener != null)
                    hashCode = hashCode * 59 + this.ActivationsShieldHardener.GetHashCode();
                if (this.ActivationsShipScanner != null)
                    hashCode = hashCode * 59 + this.ActivationsShipScanner.GetHashCode();
                if (this.ActivationsSiege != null)
                    hashCode = hashCode * 59 + this.ActivationsSiege.GetHashCode();
                if (this.ActivationsSmartBomb != null)
                    hashCode = hashCode * 59 + this.ActivationsSmartBomb.GetHashCode();
                if (this.ActivationsStasisWeb != null)
                    hashCode = hashCode * 59 + this.ActivationsStasisWeb.GetHashCode();
                if (this.ActivationsStripMiner != null)
                    hashCode = hashCode * 59 + this.ActivationsStripMiner.GetHashCode();
                if (this.ActivationsSuperWeapon != null)
                    hashCode = hashCode * 59 + this.ActivationsSuperWeapon.GetHashCode();
                if (this.ActivationsSurveyScanner != null)
                    hashCode = hashCode * 59 + this.ActivationsSurveyScanner.GetHashCode();
                if (this.ActivationsTargetBreaker != null)
                    hashCode = hashCode * 59 + this.ActivationsTargetBreaker.GetHashCode();
                if (this.ActivationsTargetPainter != null)
                    hashCode = hashCode * 59 + this.ActivationsTargetPainter.GetHashCode();
                if (this.ActivationsTrackingComputer != null)
                    hashCode = hashCode * 59 + this.ActivationsTrackingComputer.GetHashCode();
                if (this.ActivationsTrackingDisruptor != null)
                    hashCode = hashCode * 59 + this.ActivationsTrackingDisruptor.GetHashCode();
                if (this.ActivationsTractorBeam != null)
                    hashCode = hashCode * 59 + this.ActivationsTractorBeam.GetHashCode();
                if (this.ActivationsTriage != null)
                    hashCode = hashCode * 59 + this.ActivationsTriage.GetHashCode();
                if (this.ActivationsWarpDisruptFieldGenerator != null)
                    hashCode = hashCode * 59 + this.ActivationsWarpDisruptFieldGenerator.GetHashCode();
                if (this.ActivationsWarpScrambler != null)
                    hashCode = hashCode * 59 + this.ActivationsWarpScrambler.GetHashCode();
                if (this.LinkWeapons != null)
                    hashCode = hashCode * 59 + this.LinkWeapons.GetHashCode();
                if (this.Overload != null)
                    hashCode = hashCode * 59 + this.Overload.GetHashCode();
                if (this.Repairs != null)
                    hashCode = hashCode * 59 + this.Repairs.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
