/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.7.5
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ESIClient.Client.SwaggerDateConverter;

namespace ESIClient.Model
{
    /// <summary>
    /// 200 ok object
    /// </summary>
    [DataContract]
    public partial class GetUniverseSystemKills200Ok :  IEquatable<GetUniverseSystemKills200Ok>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetUniverseSystemKills200Ok" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetUniverseSystemKills200Ok() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetUniverseSystemKills200Ok" /> class.
        /// </summary>
        /// <param name="systemId">system_id integer (required).</param>
        /// <param name="shipKills">Number of player ships killed in this system (required).</param>
        /// <param name="npcKills">Number of NPC ships killed in this system (required).</param>
        /// <param name="podKills">Number of pods killed in this system (required).</param>
        public GetUniverseSystemKills200Ok(int? systemId = default(int?), int? shipKills = default(int?), int? npcKills = default(int?), int? podKills = default(int?))
        {
            // to ensure "systemId" is required (not null)
            if (systemId == null)
            {
                throw new InvalidDataException("systemId is a required property for GetUniverseSystemKills200Ok and cannot be null");
            }
            else
            {
                this.SystemId = systemId;
            }
            // to ensure "shipKills" is required (not null)
            if (shipKills == null)
            {
                throw new InvalidDataException("shipKills is a required property for GetUniverseSystemKills200Ok and cannot be null");
            }
            else
            {
                this.ShipKills = shipKills;
            }
            // to ensure "npcKills" is required (not null)
            if (npcKills == null)
            {
                throw new InvalidDataException("npcKills is a required property for GetUniverseSystemKills200Ok and cannot be null");
            }
            else
            {
                this.NpcKills = npcKills;
            }
            // to ensure "podKills" is required (not null)
            if (podKills == null)
            {
                throw new InvalidDataException("podKills is a required property for GetUniverseSystemKills200Ok and cannot be null");
            }
            else
            {
                this.PodKills = podKills;
            }
        }
        
        /// <summary>
        /// system_id integer
        /// </summary>
        /// <value>system_id integer</value>
        [DataMember(Name="system_id", EmitDefaultValue=false)]
        public int? SystemId { get; set; }

        /// <summary>
        /// Number of player ships killed in this system
        /// </summary>
        /// <value>Number of player ships killed in this system</value>
        [DataMember(Name="ship_kills", EmitDefaultValue=false)]
        public int? ShipKills { get; set; }

        /// <summary>
        /// Number of NPC ships killed in this system
        /// </summary>
        /// <value>Number of NPC ships killed in this system</value>
        [DataMember(Name="npc_kills", EmitDefaultValue=false)]
        public int? NpcKills { get; set; }

        /// <summary>
        /// Number of pods killed in this system
        /// </summary>
        /// <value>Number of pods killed in this system</value>
        [DataMember(Name="pod_kills", EmitDefaultValue=false)]
        public int? PodKills { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetUniverseSystemKills200Ok {\n");
            sb.Append("  SystemId: ").Append(SystemId).Append("\n");
            sb.Append("  ShipKills: ").Append(ShipKills).Append("\n");
            sb.Append("  NpcKills: ").Append(NpcKills).Append("\n");
            sb.Append("  PodKills: ").Append(PodKills).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetUniverseSystemKills200Ok);
        }

        /// <summary>
        /// Returns true if GetUniverseSystemKills200Ok instances are equal
        /// </summary>
        /// <param name="input">Instance of GetUniverseSystemKills200Ok to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetUniverseSystemKills200Ok input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SystemId == input.SystemId ||
                    (this.SystemId != null &&
                    this.SystemId.Equals(input.SystemId))
                ) && 
                (
                    this.ShipKills == input.ShipKills ||
                    (this.ShipKills != null &&
                    this.ShipKills.Equals(input.ShipKills))
                ) && 
                (
                    this.NpcKills == input.NpcKills ||
                    (this.NpcKills != null &&
                    this.NpcKills.Equals(input.NpcKills))
                ) && 
                (
                    this.PodKills == input.PodKills ||
                    (this.PodKills != null &&
                    this.PodKills.Equals(input.PodKills))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SystemId != null)
                    hashCode = hashCode * 59 + this.SystemId.GetHashCode();
                if (this.ShipKills != null)
                    hashCode = hashCode * 59 + this.ShipKills.GetHashCode();
                if (this.NpcKills != null)
                    hashCode = hashCode * 59 + this.NpcKills.GetHashCode();
                if (this.PodKills != null)
                    hashCode = hashCode * 59 + this.PodKills.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
