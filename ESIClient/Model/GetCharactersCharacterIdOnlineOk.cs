/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.7.5
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ESIClient.Client.SwaggerDateConverter;

namespace ESIClient.Model
{
    /// <summary>
    /// 200 ok object
    /// </summary>
    [DataContract]
    public partial class GetCharactersCharacterIdOnlineOk :  IEquatable<GetCharactersCharacterIdOnlineOk>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetCharactersCharacterIdOnlineOk" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetCharactersCharacterIdOnlineOk() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetCharactersCharacterIdOnlineOk" /> class.
        /// </summary>
        /// <param name="online">If the character is online (required).</param>
        /// <param name="lastLogin">Timestamp of the last login.</param>
        /// <param name="lastLogout">Timestamp of the last logout.</param>
        /// <param name="logins">Total number of times the character has logged in.</param>
        public GetCharactersCharacterIdOnlineOk(bool? online = default(bool?), DateTime? lastLogin = default(DateTime?), DateTime? lastLogout = default(DateTime?), int? logins = default(int?))
        {
            // to ensure "online" is required (not null)
            if (online == null)
            {
                throw new InvalidDataException("online is a required property for GetCharactersCharacterIdOnlineOk and cannot be null");
            }
            else
            {
                this.Online = online;
            }
            this.LastLogin = lastLogin;
            this.LastLogout = lastLogout;
            this.Logins = logins;
        }
        
        /// <summary>
        /// If the character is online
        /// </summary>
        /// <value>If the character is online</value>
        [DataMember(Name="online", EmitDefaultValue=false)]
        public bool? Online { get; set; }

        /// <summary>
        /// Timestamp of the last login
        /// </summary>
        /// <value>Timestamp of the last login</value>
        [DataMember(Name="last_login", EmitDefaultValue=false)]
        public DateTime? LastLogin { get; set; }

        /// <summary>
        /// Timestamp of the last logout
        /// </summary>
        /// <value>Timestamp of the last logout</value>
        [DataMember(Name="last_logout", EmitDefaultValue=false)]
        public DateTime? LastLogout { get; set; }

        /// <summary>
        /// Total number of times the character has logged in
        /// </summary>
        /// <value>Total number of times the character has logged in</value>
        [DataMember(Name="logins", EmitDefaultValue=false)]
        public int? Logins { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetCharactersCharacterIdOnlineOk {\n");
            sb.Append("  Online: ").Append(Online).Append("\n");
            sb.Append("  LastLogin: ").Append(LastLogin).Append("\n");
            sb.Append("  LastLogout: ").Append(LastLogout).Append("\n");
            sb.Append("  Logins: ").Append(Logins).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetCharactersCharacterIdOnlineOk);
        }

        /// <summary>
        /// Returns true if GetCharactersCharacterIdOnlineOk instances are equal
        /// </summary>
        /// <param name="input">Instance of GetCharactersCharacterIdOnlineOk to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetCharactersCharacterIdOnlineOk input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Online == input.Online ||
                    (this.Online != null &&
                    this.Online.Equals(input.Online))
                ) && 
                (
                    this.LastLogin == input.LastLogin ||
                    (this.LastLogin != null &&
                    this.LastLogin.Equals(input.LastLogin))
                ) && 
                (
                    this.LastLogout == input.LastLogout ||
                    (this.LastLogout != null &&
                    this.LastLogout.Equals(input.LastLogout))
                ) && 
                (
                    this.Logins == input.Logins ||
                    (this.Logins != null &&
                    this.Logins.Equals(input.Logins))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Online != null)
                    hashCode = hashCode * 59 + this.Online.GetHashCode();
                if (this.LastLogin != null)
                    hashCode = hashCode * 59 + this.LastLogin.GetHashCode();
                if (this.LastLogout != null)
                    hashCode = hashCode * 59 + this.LastLogout.GetHashCode();
                if (this.Logins != null)
                    hashCode = hashCode * 59 + this.Logins.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
